[{"/home/workstation/Rshine_App/frontend/src/App.js":"1","/home/workstation/Rshine_App/frontend/src/reportWebVitals.js":"2","/home/workstation/Rshine_App/frontend/src/data.js":"3","/home/workstation/Rshine_App/frontend/src/components/Product.js":"4","/home/workstation/Rshine_App/frontend/src/index.js":"5","/home/workstation/Rshine_App/frontend/src/components/Rating.js":"6","/home/workstation/Rshine_App/frontend/src/components/LoadingBox.js":"7","/home/workstation/Rshine_App/frontend/src/store.js":"8","/home/workstation/Rshine_App/frontend/src/constants/productConstants.js":"9","/home/workstation/Rshine_App/frontend/src/reducers/productReducers.js":"10","/home/workstation/Rshine_App/frontend/src/actions/productActions.js":"11","/home/workstation/Rshine_App/frontend/src/components/MessageBox.js":"12","/home/workstation/Rshine_App/frontend/src/screens/CartScreen.js":"13","/home/workstation/Rshine_App/frontend/src/actions/cartActions.js":"14","/home/workstation/Rshine_App/frontend/src/constants/cartConstants.js":"15","/home/workstation/Rshine_App/frontend/src/reducers/cartReducers.js":"16","/home/workstation/Rshine_App/frontend/src/screens/SigninScreen.js":"17","/home/workstation/Rshine_App/frontend/src/reducers/userReducers.js":"18","/home/workstation/Rshine_App/frontend/src/constants/userConstants.js":"19","/home/workstation/Rshine_App/frontend/src/actions/userActions.js":"20","/home/workstation/Rshine_App/frontend/src/screens/RegisterScreen.js":"21","/home/workstation/Rshine_App/frontend/src/screens/ShippingAddressScreen.js":"22","/home/workstation/Rshine_App/frontend/src/components/CheckoutSteps.js":"23","/home/workstation/Rshine_App/frontend/src/screens/PaymentMethodScreen.js":"24","/home/workstation/Rshine_App/frontend/src/screens/PlaceOrderScreen.js":"25","/home/workstation/Rshine_App/frontend/src/actions/orderActions.js":"26","/home/workstation/Rshine_App/frontend/src/reducers/orderReducers.js":"27","/home/workstation/Rshine_App/frontend/src/constants/orderConstants.js":"28","/home/workstation/Rshine_App/frontend/src/screens/OrderScreen.js":"29","/home/workstation/Rshine_App/frontend/src/screens/OrderHistoryScreen.js":"30","/home/workstation/Rshine_App/frontend/src/screens/ProfileScreen.js":"31","/home/workstation/Rshine_App/frontend/src/components/PrivateRoute.js":"32","/home/workstation/Rshine_App/frontend/src/screens/ProductListScreen.js":"33","/home/workstation/Rshine_App/frontend/src/components/AdminRoute.js":"34","/home/workstation/Rshine_App/frontend/src/screens/ProductEditScreen.js":"35","/home/workstation/Rshine_App/frontend/src/reducers/categoryReducers.js":"36","/home/workstation/Rshine_App/frontend/src/constants/categoryConstants.js":"37","/home/workstation/Rshine_App/frontend/src/screens/CategoryScreen.js":"38","/home/workstation/Rshine_App/frontend/src/actions/categoryActions.js":"39","/home/workstation/Rshine_App/frontend/src/screens/AdminHomeScreen.js":"40","/home/workstation/Rshine_App/frontend/src/screens/ProductAdminScreen.js":"41","/home/workstation/Rshine_App/frontend/src/screens/ProductUserScreen.js":"42","/home/workstation/Rshine_App/frontend/src/urlConfig.js":"43","/home/workstation/Rshine_App/frontend/src/screens/ProductDetailsPage.js":"44","/home/workstation/Rshine_App/frontend/src/screens/MenueHeader.js":"45"},{"size":5380,"mtime":1610344567210,"results":"46","hashOfConfig":"47"},{"size":362,"mtime":1606453207222,"results":"48","hashOfConfig":"47"},{"size":1816,"mtime":1606765774791,"results":"49","hashOfConfig":"50"},{"size":764,"mtime":1606804705630,"results":"51","hashOfConfig":"47"},{"size":610,"mtime":1608017584981,"results":"52","hashOfConfig":"47"},{"size":1472,"mtime":1610393657927,"results":"53","hashOfConfig":"47"},{"size":184,"mtime":1606767268835,"results":"54","hashOfConfig":"47"},{"size":2171,"mtime":1610349505806,"results":"55","hashOfConfig":"47"},{"size":1228,"mtime":1610349505806,"results":"56","hashOfConfig":"47"},{"size":3014,"mtime":1610349505806,"results":"57","hashOfConfig":"47"},{"size":4505,"mtime":1610350811780,"results":"58","hashOfConfig":"47"},{"size":186,"mtime":1606767399180,"results":"59","hashOfConfig":"47"},{"size":3432,"mtime":1610345812402,"results":"60","hashOfConfig":"47"},{"size":1223,"mtime":1610343724013,"results":"61","hashOfConfig":"47"},{"size":333,"mtime":1606802894509,"results":"62","hashOfConfig":"47"},{"size":1119,"mtime":1607016875255,"results":"63","hashOfConfig":"47"},{"size":2204,"mtime":1607365583330,"results":"64","hashOfConfig":"47"},{"size":2030,"mtime":1607367574151,"results":"65","hashOfConfig":"47"},{"size":856,"mtime":1607367574147,"results":"66","hashOfConfig":"47"},{"size":3250,"mtime":1607367639448,"results":"67","hashOfConfig":"47"},{"size":2946,"mtime":1606968258195,"results":"68","hashOfConfig":"47"},{"size":3095,"mtime":1607015552951,"results":"69","hashOfConfig":"47"},{"size":409,"mtime":1607011772766,"results":"70","hashOfConfig":"47"},{"size":1786,"mtime":1607016932752,"results":"71","hashOfConfig":"47"},{"size":4936,"mtime":1610345812402,"results":"72","hashOfConfig":"47"},{"size":3073,"mtime":1610483921692,"results":"73","hashOfConfig":"47"},{"size":1959,"mtime":1607359631134,"results":"74","hashOfConfig":"47"},{"size":811,"mtime":1607358797397,"results":"75","hashOfConfig":"47"},{"size":6450,"mtime":1610515161802,"results":"76","hashOfConfig":"47"},{"size":1934,"mtime":1607359631138,"results":"77","hashOfConfig":"47"},{"size":3713,"mtime":1607370954154,"results":"78","hashOfConfig":"47"},{"size":512,"mtime":1607367843575,"results":"79","hashOfConfig":"47"},{"size":2969,"mtime":1608180150470,"results":"80","hashOfConfig":"81"},{"size":530,"mtime":1607391097911,"results":"82","hashOfConfig":"47"},{"size":6313,"mtime":1607814675753,"results":"83","hashOfConfig":"47"},{"size":2027,"mtime":1610084907596,"results":"84","hashOfConfig":"47"},{"size":955,"mtime":1610043497861,"results":"85","hashOfConfig":"47"},{"size":15584,"mtime":1610084859928,"results":"86","hashOfConfig":"47"},{"size":2887,"mtime":1610082272720,"results":"87","hashOfConfig":"47"},{"size":695,"mtime":1608693483676,"results":"88","hashOfConfig":"47"},{"size":5743,"mtime":1610338389181,"results":"89","hashOfConfig":"47"},{"size":1347,"mtime":1610335829494,"results":"90","hashOfConfig":"47"},{"size":108,"mtime":1609361255896,"results":"91","hashOfConfig":"47"},{"size":10547,"mtime":1610398878431,"results":"92","hashOfConfig":"47"},{"size":2410,"mtime":1610336391964,"results":"93","hashOfConfig":"47"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"97"},"1m2852j",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2e6mmj",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"162"},"r67d3h",{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"97"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"97"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"97"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"97"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"97"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"97"},"/home/workstation/Rshine_App/frontend/src/App.js",["193"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MenueHeader from './screens/MenueHeader';\nimport CartScreen from './screens/CartScreen';\nimport SigninScreen from './screens/SigninScreen';\nimport { signout } from './actions/userActions';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ShippingAddressScreen from './screens/ShippingAddressScreen';\nimport PaymentMethodScreen from './screens/PaymentMethodScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport OrderHistoryScreen from './screens/OrderHistoryScreen';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport ProfileScreen from './screens/ProfileScreen';\nimport PrivateRoute from './components/PrivateRoute';\nimport AdminRoute from './components/AdminRoute';\nimport ProductAdminScreen from './screens/ProductAdminScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport CategoryScreen from './screens/CategoryScreen';\nimport AdminHomeScreen from './screens/AdminHomeScreen';\nimport \"./App.css\";\n\nimport { Navbar, Nav, NavDropdown, Container } from 'react-bootstrap';\nimport { getAllCategory } from './actions/categoryActions';\nimport ProductUserScreen from './screens/ProductUserScreen';\nimport ProductDetailsPage from './screens/ProductDetailsPage';\n\n\nfunction App() {\n  const cart = useSelector((state) => state.cart);\n  const { cartItems } = cart;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const dispatch = useDispatch();\n\n  const signoutHandler = () => {\n    dispatch(signout());\n  };\n\n\n  useEffect(() => {\n    dispatch(getAllCategory());\n  }, []);\n\n\n  return (\n    <BrowserRouter>\n{userInfo && userInfo.isAdmin ? (\n<Navbar collapseOnSelect fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\" style={{zIndex:1}}>\n                          <Container fluid>\n\n  <Navbar.Brand href=\"/home\">Rshine</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"ml-auto\">\n    <Nav>\n      <Nav.Link href=\"/cart\">Cart {cartItems.length > 0 && (\n<span className=\"badge\">{cartItems.length}</span> )}</Nav.Link>\n     \n    </Nav>\n      <NavDropdown title=\"Admin Dashboard\" id=\"collasible-nav-dropdown\"><i className=\"fa fa-caret-down\"></i>\n      <NavDropdown.Item href=\"/home\">Home</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#signout\" onClick={signoutHandler}>Sign Out</NavDropdown.Item>\n      </NavDropdown>\n    </Nav>\n    \n  </Navbar.Collapse>\n  </Container>\n\n</Navbar>\n\n):\n(\nuserInfo ? (\n<>\n<Navbar collapseOnSelect fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\n<Container fluid>\n\n  <Navbar.Brand href=\"#home\">Rshine</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"ml-auto\">\n    <Nav>\n      <Nav.Link href=\"/cart\">Cart {cartItems.length > 0 && (\n<span className=\"badge\">{cartItems.length}</span> )}</Nav.Link>\n     \n    </Nav>\n   \n    <NavDropdown title={userInfo.name} id=\"collasible-nav-dropdown\"> <i className=\"fa fa-caret-down\"></i>{' '}\n        <NavDropdown.Item href=\"/profile\">User Profile</NavDropdown.Item>\n        <NavDropdown.Item href=\"/orderhistory\">Order History</NavDropdown.Item>\n        <NavDropdown.Divider />\n        <NavDropdown.Item href=\"#signout\" onClick={signoutHandler}>Sign Out</NavDropdown.Item>\n      </NavDropdown>\n    </Nav>\n    \n  </Navbar.Collapse>\n  </Container>\n\n</Navbar>\n\n</>\n) :(\n<Navbar collapseOnSelect fixed=\"top\" expand=\"lg\" bg=\"dark\" variant=\"dark\">\n<Container fluid>\n\n  <Navbar.Brand href=\"#home\">Rshine</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n    <Nav className=\"ml-auto\">\n    <Nav>\n      <Nav.Link href=\"/cart\">Cart {cartItems.length > 0 && (\n<span className=\"badge\">{cartItems.length}</span> )}</Nav.Link>\n\n</Nav>\n<Nav>\n      <Nav.Link href=\"/signin\">Signin</Nav.Link>\n\n</Nav>\n\n    </Nav>\n    \n  </Navbar.Collapse>\n  </Container>\n\n</Navbar>\n\n)\n)}\n\n        <AdminRoute path=\"/home\" component={AdminHomeScreen} exact/>\n        <AdminRoute path=\"/category\" component={CategoryScreen} />\n        <AdminRoute path=\"/productlist\" component={ProductAdminScreen} />\n      \n\n\n        <PrivateRoute path=\"/profile\" component={ProfileScreen}></PrivateRoute>\n\n<Route path=\"/signin\" component={SigninScreen}></Route>\n<Route path=\"/register\" component={RegisterScreen}></Route>\n<Route path=\"/shipping\" component={ShippingAddressScreen}></Route>\n<Route path=\"/payment\" component={PaymentMethodScreen}></Route>\n<Route path=\"/placeorder\" component={PlaceOrderScreen}></Route>\n<Route path=\"/order/:id\" component={OrderScreen}></Route>\n<Route path=\"/orderhistory\" component={OrderHistoryScreen}></Route>\n<Route path=\"/cart/:id?\" component={CartScreen} exact></Route>\n<Route path=\"/product/:id/edit\" component={ProductEditScreen} exact></Route> \n{/* <Route path=\"/:product/:id\" component={ProductScreen} exact></Route> */}\n<Route path=\"/\" component={MenueHeader} exact></Route>\n<Route path=\"/:productSlug/:productId/p\" component={ProductDetailsPage} ></Route>\n<Route path=\"/:slug\" component={ProductUserScreen} exact></Route>\n\n\n    </BrowserRouter>\n    \n  );\n}\n\nexport default App;\n",["194","195"],"/home/workstation/Rshine_App/frontend/src/reportWebVitals.js",[],"/home/workstation/Rshine_App/frontend/src/data.js",[],"/home/workstation/Rshine_App/frontend/src/components/Product.js",[],"/home/workstation/Rshine_App/frontend/src/index.js",[],"/home/workstation/Rshine_App/frontend/src/components/Rating.js",[],"/home/workstation/Rshine_App/frontend/src/components/LoadingBox.js",[],"/home/workstation/Rshine_App/frontend/src/store.js",[],"/home/workstation/Rshine_App/frontend/src/constants/productConstants.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/productReducers.js",[],"/home/workstation/Rshine_App/frontend/src/actions/productActions.js",[],"/home/workstation/Rshine_App/frontend/src/components/MessageBox.js",[],"/home/workstation/Rshine_App/frontend/src/screens/CartScreen.js",[],"/home/workstation/Rshine_App/frontend/src/actions/cartActions.js",[],"/home/workstation/Rshine_App/frontend/src/constants/cartConstants.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/cartReducers.js",[],"/home/workstation/Rshine_App/frontend/src/screens/SigninScreen.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/userReducers.js",[],"/home/workstation/Rshine_App/frontend/src/constants/userConstants.js",[],"/home/workstation/Rshine_App/frontend/src/actions/userActions.js",[],"/home/workstation/Rshine_App/frontend/src/screens/RegisterScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ShippingAddressScreen.js",[],"/home/workstation/Rshine_App/frontend/src/components/CheckoutSteps.js",[],"/home/workstation/Rshine_App/frontend/src/screens/PaymentMethodScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/PlaceOrderScreen.js",[],"/home/workstation/Rshine_App/frontend/src/actions/orderActions.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/orderReducers.js",[],"/home/workstation/Rshine_App/frontend/src/constants/orderConstants.js",[],"/home/workstation/Rshine_App/frontend/src/screens/OrderScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/OrderHistoryScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProfileScreen.js",[],"/home/workstation/Rshine_App/frontend/src/components/PrivateRoute.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductListScreen.js",[],["196","197"],"/home/workstation/Rshine_App/frontend/src/components/AdminRoute.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductEditScreen.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/categoryReducers.js",[],"/home/workstation/Rshine_App/frontend/src/constants/categoryConstants.js",[],"/home/workstation/Rshine_App/frontend/src/screens/CategoryScreen.js",["198","199"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory,addCategory, updateCategories, deleteCategoriesAction\n} from '../actions/categoryActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport AdminHomeScreen from './AdminHomeScreen';\nimport { Col, Container, Row, Modal, Button } from 'react-bootstrap';\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport {\n  IoIosCheckboxOutline,\n  IoIosCheckbox,\n  IoIosArrowForward,\n  IoIosArrowDown,\n  IoIosAdd,\n  IoIosTrash,\n  IoIosCloudUpload\n} from 'react-icons/io'\n\n\n\nexport default function CategoryScreen(props) {\n\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n\n    dispatch(addCategory(form));\n    setShow(false);\n  }\n\n  const handleShow = () => setShow(true);\n\n  const handleCategoryImage = (e) => {\n    setCategoryImage(e.target.files[0]);\n  }\n\n\n  const renderCategories = () => {\n\n    let myCategories = [];\n    for (let category of categories) {\n      myCategories.push(\n        {\n          value: category._id,\n          name: category.name,\n          parentId: category.parentId\n\n        }\n      );\n      for (let cate of category.childr) {\n        myCategories.push(\n          {\n            value: cate._id,\n            name: cate.name,\n            parentId: cate.parentId\n          }\n\n        );\n        for (let catego of cate.childr) {\n          myCategories.push(\n            {\n              value: catego._id,\n              name: catego.name,\n              parentId: catego.parentId\n            }\n\n          );\n\n\n        }\n      }\n    }\n    return myCategories;\n  }\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n\n    const categoryAll = renderCategories();\n\n    const checkedArray = [];\n    const expandedArray = [];\n\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categoryAll.find((category, _index) => categoryId === category.value)\n      category && checkedArray.push(category);\n      console.log('cc', category)\n    })\n\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categoryAll.find((category, _index) => categoryId === category.value)\n      category && expandedArray.push(category);\n      console.log(category)\n    })\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n\n    console.log({ checked, expanded, categoryAll, checkedArray, expandedArray });\n  }\n\n  const handleCategoryInput = (key, value, index, type) => {\n    console.log(value);\n    if (type === \"checked\") {\n        const updatedCheckedArray = checkedArray.map((item, _index) =>\n            index === _index ? { ...item, [key]: value } : item);\n        setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n        const updatedExpandedArray = expandedArray.map((item, _index) =>\n            index === _index ? { ...item, [key]: value } : item);\n        setExpandedArray(updatedExpandedArray);\n    }\n  }\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n\n    expandedArray.forEach((item, index) => {\n        form.append('_id', item.value);\n        form.append('name', item.name);\n        form.append('parentId', item.parentId ? item.parentId : \"\");\n        form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n        form.append('_id', item.value);\n        form.append('name', item.name);\n        form.append('parentId', item.parentId ? item.parentId : \"\");\n        form.append('type', item.type);\n    });\n    dispatch(updateCategories(form));\n    setUpdateCategoryModal(false);\n}\n\nconst updateCheckedAndExpandedCategories = () => {\n  const categoryAll = renderCategories();\n\n  const checkedArray = [];\n  const expandedArray = [];\n\n  checked.length > 0 && checked.forEach((categoryId, index) => {\n    const category = categoryAll.find((category, _index) => categoryId === category.value)\n    category && checkedArray.push(category);\n    console.log('cc', category)\n  })\n\n  expanded.length > 0 && expanded.forEach((categoryId, index) => {\n    const category = categoryAll.find((category, _index) => categoryId === category.value)\n    category && expandedArray.push(category);\n    console.log(category)\n  })\n  setCheckedArray(checkedArray);\n  setExpandedArray(expandedArray);\n\n}\nconst renderDeleteCategoryModal = () => {\n  updateCheckedAndExpandedCategories();\n  setDeleteCategoryModal(true);  \n}\n\nconst deleteCategories = () => {\n  const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\n  const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\n  const idsArray = expandedIdsArray.concat(checkedIdsArray);\n // dispatch(deleteCategoriesAction(idsArray))\n  if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray))\n          .then(result => {\n              if (result) {\n                  dispatch(getAllCategory())\n                  setDeleteCategoryModal(false)\n              }\n          });\n  }\n\n  setDeleteCategoryModal(false);\n\n}\n\n\n  return (\n    <div>\n      <AdminHomeScreen />\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <h3>Category</h3>\n\n              <Button onClick={handleShow}>Add</Button>\n            </div>\n\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>\n\n            {loading ? (\n              <LoadingBox></LoadingBox>\n            ) : error ? (\n              <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                  <CheckboxTree\n                    nodes=\n                    {categories.map((category) => (\n                      {\n                        label: category.name,\n                        value: category._id,\n                        children:\n                        category.childr.length > 0 && category.childr.map((sub) => (\n                            {\n                              label: sub.name,\n                              value: sub._id,\n                              children:\n                              sub.childr.length > 0 && sub.childr.map((subb) => (\n                                  {\n                                    label: subb.name,\n                                    value: subb._id,\n                                  }))\n                            })),\n                      }\n                    ))}\n\n                    checked={checked}\n                    expanded={expanded}\n                    onCheck={checked => setChecked(checked)}\n                    onExpand={expanded => setExpanded(expanded)}\n                    icons={{\n                      check: <IoIosCheckbox />,\n                      uncheck: <IoIosCheckboxOutline />,\n                      halfCheck: <IoIosCheckboxOutline />,\n                      expandClose: <IoIosArrowForward />,\n                      expandOpen: <IoIosArrowDown />\n                    }}\n                  />\n                )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <button  onClick={renderDeleteCategoryModal}><IoIosTrash /> <span>Delete</span></button>\n            <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\n\n          </Col>\n        </Row>\n      </Container>\n\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Category</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input type=\"text\" className=\"form-control\"\n            value={categoryName}\n            placeholder={'Category Name'}\n            onChange={(e) => setCategoryName(e.target.value)}\n          />\n\n          {loading ? (\n            <LoadingBox></LoadingBox>\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n\n\n                <>\n                  <select className=\"form-control\" value={parentCategoryId} onChange={(e) => setParentCategoryId(e.target.value)}><option>select category</option>\n                    {categories.map((category) => (\n\n\n                      <>\n                        <option key={category._id} value={category._id}> {category.name}</option>\n                        {category.childr.map((sub) =>\n                          <>\n                            <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                            {sub.childr.map((subb) =>\n\n                              <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                            )}\n                          </>\n                        )}\n                      </>))}\n                  </select>\n\n\n\n\n\n\n\n                </>\n\n\n\n\n\n\n              )}\n\n\n          <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n\n      {/* Edit Categories */}\n      <Modal size=\"lg\" show={updateCategoryModal}  onHide={() => setUpdateCategoryModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update Categories</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col>\n              <h6>Expanded</h6>\n            </Col>\n          </Row>\n\n          {\n            expandedArray.length > 0 && expandedArray.map((item, index) =>\n              <Row key={index}>\n                <Col>\n                  <input type=\"text\" className=\"form-control\"\n                    value={item.name}\n                    placeholder={'Category Name'}\n                    onChange={(e) => handleCategoryInput('name',e.target.value,index,'expanded')}\n                  />\n                </Col>\n                <Col>\n\n                  {loading ? (\n                    <LoadingBox></LoadingBox>\n                  ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                  ) : (\n\n\n                        <>\n                          <select className=\"form-control\" value={item.parentId} onChange={(e) =>  handleCategoryInput('parentId',e.target.value,index,'expanded')}><option>select category</option>\n                            {categories.map((category) => (\n\n\n                              <>\n                                <option key={category._id} value={category._id}> {category.name}</option>\n                                {category.childr.map((sub) =>\n                                  <>\n                                    <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                                    {sub.childr.map((subb) =>\n\n                                      <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                                    )}\n                                  </>\n                                )}\n                              </>))}\n                          </select>\n\n                        </>\n\n                      )}\n\n                </Col>\n\n              </Row>\n\n\n\n            )\n\n          }\n\n<Row>\n            <Col>\n              <h6>Checked</h6>\n            </Col>\n          </Row>\n\n          {\n            checkedArray.length > 0 && checkedArray.map((item, index) =>\n              <Row key={index}>\n                <Col>\n                  <input type=\"text\" className=\"form-control\"\n                    value={item.name}\n                    placeholder={'Category Name'}\n                    onChange={(e) => handleCategoryInput('name',e.target.value,index,'checked')}\n                  />\n                </Col>\n                <Col>\n\n                  {loading ? (\n                    <LoadingBox></LoadingBox>\n                  ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                  ) : (\n\n\n                        <>\n                          <select className=\"form-control\" value={item.parentId} onChange={(e) =>  handleCategoryInput('parentId',e.target.value,index,'checked')}><option>select category</option>\n                            {categories.map((category) => (\n\n\n                              <>\n                                <option key={category._id} value={category._id}> {category.name}</option>\n                                {category.childr.map((sub) =>\n                                  <>\n                                    <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                                    {sub.childr.map((subb) =>\n\n                                      <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                                    )}\n                                  </>\n                                )}\n                              </>))}\n                          </select>\n\n                        </>\n\n                      )}\n\n                </Col>\n\n              </Row>\n\n\n\n            )\n\n          }\n\n\n          {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} /> */}\n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button variant=\"primary\" onClick={updateCategoriesForm}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      {/* Delete Categories */}\n      <Modal size=\"lg\" show={deleteCategoryModal}  onHide={() => setDeleteCategoryModal(false)}  buttons={[\n              {\n                  label: 'No',\n                  color: 'primary',\n                  onClick: () => {\n                      alert('no');\n                  }\n              },\n              {\n                  label: 'Yes',\n                  color: 'danger',\n                  // onClick: deleteCategories\n              }\n          ]}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n      \n\n         \n        <h5>Expanded</h5>\n          { expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n          <h5>Checked</h5>\n          { checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n\n\n\n\n          {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} /> */}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={renderDeleteCategoryModal}>\n          No         \n          </Button> \n          \n          <Button variant=\"danger\" onClick= {deleteCategories}>\n            Yes\n            </Button>\n        \n        </Modal.Footer>\n      </Modal>\n\n\n\n\n\n\n\n    </div>\n  );\n}","/home/workstation/Rshine_App/frontend/src/actions/categoryActions.js",["200"],"import Axios from 'axios';\nimport { Category_LIST_REQUEST,Category_LIST_SUCCESS,\n    Category_LIST_FAIL,\n    Category_CREATE_REQUEST,\n    Category_CREATE_SUCCESS,\n    Category_CREATE_FAIL, Category_UPDATE_REQUEST,Category_UPDATE_SUCCESS,Category_UPDATE_FAIL,Category_DELETE_REQUEST,Category_DELETE_SUCCESS,Category_DELETE_FAIL} from '../constants/categoryConstants';\n\n\n\nexport const getAllCategory = () => async (dispatch) =>{\n    dispatch({\n        type: Category_LIST_REQUEST,\n \n    });\n    try {\n        const  { data }  = await Axios.get('/api/category');\n        //const { data } = res.data;\n\n        dispatch({ type: Category_LIST_SUCCESS, payload: data});\n        //console.log({data});\n    } catch(error){\n        dispatch({ type: Category_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const addCategory = (form) => async (dispatch, getState) => {\n    dispatch({ type: Category_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/category/create',\n        form,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: Category_CREATE_SUCCESS,\n        payload: data.category,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_CREATE_FAIL, payload: message });\n    }\n  };  \n\n  export const updateCategories = (form) => async (dispatch, getState) => {\n    dispatch({ type: Category_UPDATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/category/update',\n        form,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: Category_UPDATE_SUCCESS,\n        payload: data.category,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_UPDATE_FAIL, payload: message });\n    }\n  };  \n \n\n\n \n\n  export const deleteCategoriesAction = (ids) => async (dispatch, getState) => {\n    dispatch({ type: Category_DELETE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const {data} = Axios.post(`/api/category/delete`, {payload:{ids}},{\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: Category_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_DELETE_FAIL, payload: message });\n    }\n  };","/home/workstation/Rshine_App/frontend/src/screens/AdminHomeScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductAdminScreen.js",["201","202"],"import React, { useEffect,useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Col, Container, Row, Modal, Button,Table } from 'react-bootstrap';\nimport AdminHomeScreen from './AdminHomeScreen';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { addProduct, listProducts } from '../actions/productActions';\n\n\n\nexport default function ProductAdminScreen(props) {\n  const productList = useSelector((state) => state.productList);\n  //const {loading, error, products } = productList;\n  const {\n    loading: loadingList,\n    error: errorList,\n    products: listProduct,\n  } = productList;\n  const [name, setName] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, []);\n \n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append(\"name\", name);\n    form.append(\"countInStock\", countInStock);\n    form.append(\"price\", price);\n    form.append(\"description\", description);\n    form.append(\"category\", categoryId);\n\n    for (let pic of productPictures) {\n        form.append(\"productPictures\", pic);\n    }\n    \n    dispatch(addProduct(form));\n    setShow(false);\n  }\n\n  const handleShow = () => setShow(true);\n\n  const handleProductPictures = (e) => {\n    setProductPictures([...productPictures, e.target.files[0]]);\n  };\n\n\n    return (\n        <div>\n              <AdminHomeScreen />\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <h3>Products</h3>\n              <Button onClick={handleShow}>Add</Button>\n            </div>\n\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n          {loadingList ? (\n        <LoadingBox></LoadingBox>\n      ) : errorList ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n          <Table style={{fontSize:12}} responsive=\"sm\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>Name</th>\n        <th>Price</th>\n        <th>CountInStock</th>\n        <th>Description</th>\n        <th>Category</th>\n        <th>product Pictures</th>\n\n      </tr>\n    </thead>\n    <tbody>\n    {listProduct.map((product) => (\n      <tr key={product._id}>\n        <td>{product._id}</td>\n        <td>{product.name}</td>\n        <td>{product.price}</td>\n        <td>{product.countInStock}</td>\n        <td>{product.description}</td>\n        <td>{product.category}</td>\n        <td>{product.productPictures.map(picture => <div className=\"productImgContainer\">\n          <img src={`http://localhost:3001/public/${picture.img}`}/>\n        </div>)}</td>\n      </tr>\n     \n     \n                  ))}\n\n    </tbody>\n  </Table>\n                )}\n\n          </Col>\n        </Row>\n        </Container>\n              <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Product</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <input type=\"text\" className=\"form-control\"\n            label=\"Name\"\n            value={name}\n            placeholder={'Product Name'}\n            onChange={(e) => setName(e.target.value)}\n          />\n\n\n        <input  className=\"form-control\"\n          label=\"countInStock\"\n          value={countInStock}\n          placeholder={`countInStock`}\n          onChange={(e) => setCountInStock(e.target.value)}\n        />\n        <input  className=\"form-control\"\n          label=\"Price\"\n          value={price}\n          placeholder={`Price`}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <input type=\"text\" className=\"form-control\"\n          label=\"Description\"\n          value={description}\n          placeholder={`Description`}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n\n{loading ? (\n            <LoadingBox></LoadingBox>\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n                <>\n                  <select className=\"form-control\" value={categoryId} onChange={(e) => setCategoryId(e.target.value)}><option>select category</option>\n                    {categories.map((category) => (\n\n                      <>\n                        <option key={category._id} value={category._id}> {category.name}</option>\n                        {category.childr.map((sub) =>\n                          <>\n                            <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                            {sub.childr.map((subb) =>\n\n                              <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                            )}\n                          </>\n                        )}\n                      </>))}\n                  </select>\n\n                </>\n\n              )}\n\n        {productPictures.length > 0\n          ? productPictures.map((pic, index) => (\n              <div key={index}>{pic.name}</div>\n            ))\n          : null}\n\n        <input type=\"file\" name=\"productPicture\" onChange={handleProductPictures}/>\n         \n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        </div>\n    )\n}\n","/home/workstation/Rshine_App/frontend/src/screens/ProductUserScreen.js",["203"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport HomeScreen from './MenueHeader';\nimport { getProductsBySlug } from '../actions/productActions';\nimport{generatePublicUrl} from '../urlConfig';\nimport { Link } from \"react-router-dom\";\n\n\n\n\nexport default function ProductUserScreen(props) {\n    \n    const productSlug = useSelector((state) => state.productSlug);\n    const { produ } = productSlug;\n\n   // console.log('here',productSlug)\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        console.log(props)\n        const{match}=props;\n\n\n        dispatch(getProductsBySlug(match.params.slug));\n      }, []);\n\n\n    return (\n        <div>\n\n        <HomeScreen/>\n        <div style={{display:'flex'}}>\n        {produ.map((pp) => {\n            return(\n\n        <Link  to={`/${pp.slug}/${pp._id}/p`}\n         className=\"productContainer\">\n            <div className=\"productImgContainer\">\n                \n                <img src={generatePublicUrl(pp.productPictures[0].img)}   alt=\"\"/>\n            </div>\n            <div className=\"productInfo\">\n                <div>{pp.name}</div> \n                <div><span>4.3</span>\n                <span>666544</span></div>\n                <div>{pp.price}</div>\n            </div>\n        </Link>\n        )})}</div>\n        </div>\n    )\n}\n","/home/workstation/Rshine_App/frontend/src/urlConfig.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductDetailsPage.js",["204","205","206","207"],"import React, { useEffect, useState } from 'react';\nimport Rating from '../components/Rating';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { createReview, detailsProduct } from '../actions/productActions';\nimport { IoIosArrowForward, IoIosStar, IoMdCart } from \"react-icons/io\";\nimport { generatePublicUrl } from '../urlConfig';\nimport HomeScreen from './MenueHeader';\nimport { AiFillThunderbolt } from \"react-icons/ai\";\nimport { PRODUCT_REVIEW_CREATE_RESET } from '../constants/productConstants';\n\nexport default function ProductDetailsPage(props) {\n  const dispatch = useDispatch();\n  const productId = props.match.params.productId;\n  const [qty, setQty] = useState(1);\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingReviewCreate,\n    error: errorReviewCreate,\n    success: successReviewCreate,\n  } = productReviewCreate;\n\n  const [rating, setRating] = useState(0);\n  \n  const [hover, setHover] = useState(null);\n\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    if (successReviewCreate) {\n      window.alert('Review Submitted Successfully');\n      setRating('');\n      setComment('');\n      dispatch({ type: PRODUCT_REVIEW_CREATE_RESET });\n    }\n    dispatch(detailsProduct(productId));\n  }, [dispatch, productId, successReviewCreate]);\n\n  const addToCartHandler = () => {\n    props.history.push(`/cart/${productId}?qty=${qty}`);\n  };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (comment && rating) {\n      dispatch(\n        createReview(productId, { rating, comment, name: userInfo.name })\n      );\n    } else {\n      alert('Please enter comment and rating');\n    }\n  };\n\n  return (\n    <div>\n      <HomeScreen />\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n            <div className=\"productDescriptionContainer\">\n              <div className=\"flexRow\">\n                <div className=\"verticalImageStack\">\n                  {product.productPictures.map((thumb, index) => (\n                    <div className=\"thumbnail\">\n                      <img src={generatePublicUrl(thumb.img)} alt={thumb.img} />\n                    </div>\n                  ))}\n                </div>\n                <div className=\"productDescContainer\">\n                  <div className=\"productDescImgContainer\">\n                    <img\n                      src={generatePublicUrl(product.productPictures[0].img)}\n                      alt={`${product.productPictures[0].img}`}\n                    />\n                  </div>\n\n                  {/* action buttons */}\n                  <div className=\"flexRow\">\n                    <button className=\"btnAddtoCart\" onClick={addToCartHandler}\n                      style={{\n                        marginRight: \"5px\"\n                      }}><IoMdCart /> <span>ADD TO CART</span></button>\n\n                    <button className=\"btnBuyNow\"\n                      style={{ marginLeft: \"5px\" }}\n                    ><AiFillThunderbolt /><span>BUY NOW</span></button>\n                  </div>\n                </div>\n              </div>\n              <div>\n                {/* home > category > subCategory > productName */}\n                <div className=\"breed\">\n                  <ul>\n                    <li>\n                      <a href=\"#\">Home</a>\n                      <IoIosArrowForward />\n                    </li>\n                    <li>\n                      <a href=\"#\">Mobiles</a>\n                      <IoIosArrowForward />\n                    </li>\n                    <li>\n                      <a href=\"#\">Samsung</a>\n                      <IoIosArrowForward />\n                    </li>\n                    <li>\n                      <a href=\"#\">{product.name}</a>\n                    </li>\n                  </ul>\n                </div>\n                {/* product description */}\n                <div className=\"productDetails\">\n                  <p className=\"productTitle\">{product.name}</p>\n                  <div>\n                    <span className=\"ratingCount\">\n                      4.3 <IoIosStar />\n                    </span>\n                    <span className=\"ratingNumbersReviews\">\n                      72,234 Ratings & 8,140 Reviews\n              </span>\n                  </div>\n                  <div className=\"extraOffer\">\n                    Extra CA$\n              4500 off{\" \"}\n                  </div>\n                  <div className=\"flexRow priceContainer\">\n                    <span className=\"price\">\n                    CA${product.price}\n                    </span>\n                    <span className=\"discount\" style={{ margin: \"0 10px\" }}>\n                      22% off\n              </span>\n                    {/* <span>i</span> */}\n                  </div>\n                  <div>\n                    <p\n                      style={{\n                        color: \"#212121\",\n                        fontSize: \"14px\",\n                        fontWeight: \"600\",\n                      }}\n                    >\n                      Available Offers\n                      <div>\n                        {product.countInStock > 0 ? (\n                          <span className=\"success\">In Stock</span>\n                        ) : (\n                          <span className=\"danger\">Unavailable</span>\n                        )}\n                      </div>\n                      {product.countInStock > 0 && (\n                    <>\n                      <li>\n                        <div className=\"row\">\n                          <div>Qty</div>\n                          <div>\n                            <select\n                              value={qty}\n                              onChange={(e) => setQty(e.target.value)}\n                            >\n                              {[...Array(product.countInStock).keys()].map(\n                                (x) => (\n                                  <option key={x + 1} value={x + 1}>\n                                    {x + 1}\n                                  </option>\n                                )\n                              )}\n                            </select>\n                          </div>\n                        </div>\n                      </li>\n                     \n                     \n                    </>\n                  )}\n              </p>\n              <div>\n\n              <Rating\n          rating={product.rating}\n          numReviews={product.numReviews}\n        ></Rating>\n\n\n\n            <h2 id=\"reviews\">Reviews</h2>\n            {product.reviews.length === 0 && (\n              <MessageBox>There is no review</MessageBox>\n            )}\n            <ul>\n              {product.reviews.map((review) => (\n                <li key={review._id}>\n                  <strong>{review.name}</strong>\n                  <Rating rating={review.rating} caption=\" \"></Rating>\n                  <p>{review.createdAt.substring(0, 10)}</p>\n                  <p>{review.comment}</p>\n                </li>\n              ))}\n              <li>\n                {userInfo ? (\n                  <form className=\"form\" onSubmit={submitHandler}>\n                    <div>\n                      <h2>Write a customer review</h2>\n                    </div>\n                    <div>\n                      <label htmlFor=\"rating\">Rating</label>\n                      {[...Array(5)].map((star,i)=>{\n                        const ratingValue=i+1;\n                        return(\n                          <label>\n                           <input className=\"rattingInput\" type=\"radio\" name=\"rating\" value={ratingValue}\n                             onClick={() => setRating(ratingValue) }\n                             />\n                            \n                        <IoIosStar className=\"star\" color={ratingValue <= (hover||rating) ? \"#ffc107\":\"#e4e5e9\"} size={25}\n                           onMouseEnter={()=>setHover(ratingValue)}\n                            onMouseLeave={()=>setHover(null)}/></label>);\n                      })}\n                   \n                    </div>\n                    <div>\n                      <label htmlFor=\"comment\">Comment</label>\n                      <textarea\n                        id=\"comment\"\n                        value={comment}\n                        onChange={(e) => setComment(e.target.value)}\n                      ></textarea>\n                    </div>\n                    <div>\n                      <label />\n                      <button className=\"primary\" type=\"submit\">\n                        Submit\n                      </button>\n                    </div>\n                    <div>\n                      {loadingReviewCreate && <LoadingBox></LoadingBox>}\n                      {errorReviewCreate && (\n                        <MessageBox variant=\"danger\">\n                          {errorReviewCreate}\n                        </MessageBox>\n                      )}\n                    </div>\n                  </form>\n                ) : (\n                  <MessageBox>\n                    Please <Link to=\"/signin\">Sign In</Link> to write a review\n                  </MessageBox>\n                )}\n              </li>\n            </ul>\n          </div>\n                    <p style={{ display: \"flex\" }}>\n                      <span\n                        style={{\n                          width: \"100px\",\n                          fontSize: \"12px\",\n                          color: \"#878787\",\n                          fontWeight: \"600\",\n                          marginRight: \"20px\",\n                        }}\n                      >\n                        Description\n                </span>\n                      <span\n                        style={{\n                          fontSize: \"12px\",\n                          color: \"#212121\",\n                        }}\n                      >\n                        {product.description}\n                      </span>\n                    </p>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          )}\n    </div>\n\n  )\n}\n","/home/workstation/Rshine_App/frontend/src/screens/MenueHeader.js",["208","209","210","211"],"import React, {useEffect} from 'react';\nimport Product from '../components/Product';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\nimport { getAllCategory } from '../actions/categoryActions';\nimport {NavLink} from 'react-router-dom';\n\n\nexport default function MenueHeader() {\n  // const dispatch = useDispatch();\n  // const productList = useSelector(state => state.productList);\n  // const { loading, error, products } = productList;\n\n  // useEffect(() => {\n  //   dispatch(listProducts({}));\n  // }, [dispatch]);\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n\n  const dispatch = useDispatch();\n  \n\n\n  useEffect(() => {\n      dispatch(getAllCategory());\n    }, []);\n    return (\n    //     <div>\n    //       {loading ? (\n    //     <LoadingBox></LoadingBox>\n    //   ) : error ? (\n    //     <MessageBox variant=\"danger\">{error}</MessageBox>\n    //   ): (\n    //     <div className=\"row center\">\n    //       {products.map((product) => ( \n    //       <Product key={product._id} product={product}></Product>\n    //       ))}\n    //     </div>\n    //   )}\n    //   </div>\n    // );\n\n    <div className=\"MenueHeader\">\n         \n   \n\n           {loading ? (\n             <LoadingBox></LoadingBox>\n           ) : error ? (\n             <MessageBox variant=\"danger\">{error}</MessageBox>\n           ) : (\n\n                 <>\n\n                   <ul >\n                     {categories.map((category) => (\n                       <li  key={category.name}>\n                         <span>{category.name}</span>\n\n<ul>\n                         {category.childr.map((sub) =>\n                           <li key={sub.name}><a href={`/${sub.slug}`}>\n                             {sub.name}\n                           </a>\n<ul>\n                             {sub.childr.map((subb) =>\n                               <li  key={subb.name}><a href={`/${subb.slug}`}>\n                                 {subb.name}\n                             </a>\n                               </li>)}</ul>\n\n                           </li>)}</ul>\n\n\n                       </li>\n                     ))}\n                   </ul>\n                 </>\n\n\n\n\n\n               )}\n   \n\n\n   </div>\n );\n     \n}\n",{"ruleId":"212","severity":1,"message":"213","line":43,"column":6,"nodeType":"214","endLine":43,"endColumn":8,"suggestions":"215"},{"ruleId":"216","replacedBy":"217"},{"ruleId":"218","replacedBy":"219"},{"ruleId":"216","replacedBy":"220"},{"ruleId":"218","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":16,"column":3,"nodeType":"224","messageId":"225","endLine":16,"endColumn":11},{"ruleId":"222","severity":1,"message":"226","line":182,"column":9,"nodeType":"224","messageId":"225","endLine":182,"endColumn":17},{"ruleId":"222","severity":1,"message":"227","line":88,"column":14,"nodeType":"224","messageId":"225","endLine":88,"endColumn":18},{"ruleId":"212","severity":1,"message":"213","line":33,"column":6,"nodeType":"214","endLine":33,"endColumn":8,"suggestions":"228"},{"ruleId":"229","severity":1,"message":"230","line":102,"column":11,"nodeType":"231","endLine":102,"endColumn":69},{"ruleId":"212","severity":1,"message":"232","line":26,"column":10,"nodeType":"214","endLine":26,"endColumn":12,"suggestions":"233"},{"ruleId":"234","severity":1,"message":"235","line":105,"column":23,"nodeType":"231","endLine":105,"endColumn":35},{"ruleId":"234","severity":1,"message":"235","line":109,"column":23,"nodeType":"231","endLine":109,"endColumn":35},{"ruleId":"234","severity":1,"message":"235","line":113,"column":23,"nodeType":"231","endLine":113,"endColumn":35},{"ruleId":"234","severity":1,"message":"235","line":117,"column":23,"nodeType":"231","endLine":117,"endColumn":35},{"ruleId":"222","severity":1,"message":"236","line":2,"column":8,"nodeType":"224","messageId":"225","endLine":2,"endColumn":15},{"ruleId":"222","severity":1,"message":"237","line":6,"column":10,"nodeType":"224","messageId":"225","endLine":6,"endColumn":22},{"ruleId":"222","severity":1,"message":"238","line":8,"column":9,"nodeType":"224","messageId":"225","endLine":8,"endColumn":16},{"ruleId":"212","severity":1,"message":"213","line":28,"column":8,"nodeType":"214","endLine":28,"endColumn":10,"suggestions":"239"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["240"],"no-native-reassign",["241"],"no-negated-in-lhs",["242"],["241"],["242"],"no-unused-vars","'IoIosAdd' is defined but never used.","Identifier","unusedVar","'idsArray' is assigned a value but never used.","'data' is assigned a value but never used.",["243"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["244"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Product' is defined but never used.","'listProducts' is defined but never used.","'NavLink' is defined but never used.",["245"],{"desc":"246","fix":"247"},"no-global-assign","no-unsafe-negation",{"desc":"246","fix":"248"},{"desc":"249","fix":"250"},{"desc":"246","fix":"251"},"Update the dependencies array to be: [dispatch]",{"range":"252","text":"253"},{"range":"254","text":"253"},"Update the dependencies array to be: [dispatch, props]",{"range":"255","text":"256"},{"range":"257","text":"253"},[1735,1737],"[dispatch]",[1243,1245],[672,674],"[dispatch, props]",[907,909]]