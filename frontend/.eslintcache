[{"/home/workstation/Rshine_App/frontend/src/App.js":"1","/home/workstation/Rshine_App/frontend/src/reportWebVitals.js":"2","/home/workstation/Rshine_App/frontend/src/data.js":"3","/home/workstation/Rshine_App/frontend/src/components/Product.js":"4","/home/workstation/Rshine_App/frontend/src/index.js":"5","/home/workstation/Rshine_App/frontend/src/components/Rating.js":"6","/home/workstation/Rshine_App/frontend/src/components/LoadingBox.js":"7","/home/workstation/Rshine_App/frontend/src/store.js":"8","/home/workstation/Rshine_App/frontend/src/constants/productConstants.js":"9","/home/workstation/Rshine_App/frontend/src/reducers/productReducers.js":"10","/home/workstation/Rshine_App/frontend/src/actions/productActions.js":"11","/home/workstation/Rshine_App/frontend/src/components/MessageBox.js":"12","/home/workstation/Rshine_App/frontend/src/screens/CartScreen.js":"13","/home/workstation/Rshine_App/frontend/src/actions/cartActions.js":"14","/home/workstation/Rshine_App/frontend/src/constants/cartConstants.js":"15","/home/workstation/Rshine_App/frontend/src/reducers/cartReducers.js":"16","/home/workstation/Rshine_App/frontend/src/screens/SigninScreen.js":"17","/home/workstation/Rshine_App/frontend/src/reducers/userReducers.js":"18","/home/workstation/Rshine_App/frontend/src/constants/userConstants.js":"19","/home/workstation/Rshine_App/frontend/src/actions/userActions.js":"20","/home/workstation/Rshine_App/frontend/src/screens/RegisterScreen.js":"21","/home/workstation/Rshine_App/frontend/src/screens/ShippingAddressScreen.js":"22","/home/workstation/Rshine_App/frontend/src/components/CheckoutSteps.js":"23","/home/workstation/Rshine_App/frontend/src/screens/PaymentMethodScreen.js":"24","/home/workstation/Rshine_App/frontend/src/screens/PlaceOrderScreen.js":"25","/home/workstation/Rshine_App/frontend/src/actions/orderActions.js":"26","/home/workstation/Rshine_App/frontend/src/reducers/orderReducers.js":"27","/home/workstation/Rshine_App/frontend/src/constants/orderConstants.js":"28","/home/workstation/Rshine_App/frontend/src/screens/OrderScreen.js":"29","/home/workstation/Rshine_App/frontend/src/screens/OrderHistoryScreen.js":"30","/home/workstation/Rshine_App/frontend/src/screens/ProfileScreen.js":"31","/home/workstation/Rshine_App/frontend/src/components/PrivateRoute.js":"32","/home/workstation/Rshine_App/frontend/src/screens/ProductListScreen.js":"33","/home/workstation/Rshine_App/frontend/src/components/AdminRoute.js":"34","/home/workstation/Rshine_App/frontend/src/screens/ProductEditScreen.js":"35","/home/workstation/Rshine_App/frontend/src/reducers/categoryReducers.js":"36","/home/workstation/Rshine_App/frontend/src/constants/categoryConstants.js":"37","/home/workstation/Rshine_App/frontend/src/screens/CategoryScreen.js":"38","/home/workstation/Rshine_App/frontend/src/actions/categoryActions.js":"39","/home/workstation/Rshine_App/frontend/src/screens/AdminHomeScreen.js":"40","/home/workstation/Rshine_App/frontend/src/screens/ProductAdminScreen.js":"41","/home/workstation/Rshine_App/frontend/src/screens/ProductUserScreen.js":"42","/home/workstation/Rshine_App/frontend/src/urlConfig.js":"43","/home/workstation/Rshine_App/frontend/src/screens/ProductDetailsPage.js":"44","/home/workstation/Rshine_App/frontend/src/screens/MenueHeader.js":"45","/home/workstation/Rshine_App/frontend/src/screens/HomeScreen.js":"46","/home/workstation/Rshine_App/frontend/src/screens/ProductList.js":"47","/home/workstation/Rshine_App/frontend/src/screens/FootrScreen.js":"48","/home/workstation/Rshine_App/frontend/src/screens/ProductImage.js":"49","/home/workstation/Rshine_App/frontend/src/screens/CrouselScreen.js":"50"},{"size":8257,"mtime":1611687838942,"results":"51","hashOfConfig":"52"},{"size":362,"mtime":1606453207222,"results":"53","hashOfConfig":"52"},{"size":1816,"mtime":1606765774791,"results":"54","hashOfConfig":"55"},{"size":764,"mtime":1611520925961,"results":"56","hashOfConfig":"52"},{"size":610,"mtime":1610864822424,"results":"57","hashOfConfig":"52"},{"size":1460,"mtime":1610774928447,"results":"58","hashOfConfig":"52"},{"size":184,"mtime":1606767268835,"results":"59","hashOfConfig":"52"},{"size":2171,"mtime":1611294203451,"results":"60","hashOfConfig":"52"},{"size":1228,"mtime":1610349505806,"results":"61","hashOfConfig":"52"},{"size":3014,"mtime":1610349505806,"results":"62","hashOfConfig":"52"},{"size":4505,"mtime":1610350811780,"results":"63","hashOfConfig":"52"},{"size":186,"mtime":1606767399180,"results":"64","hashOfConfig":"52"},{"size":12168,"mtime":1611683996436,"results":"65","hashOfConfig":"52"},{"size":1269,"mtime":1611080981324,"results":"66","hashOfConfig":"52"},{"size":333,"mtime":1606802894509,"results":"67","hashOfConfig":"52"},{"size":1119,"mtime":1607016875255,"results":"68","hashOfConfig":"52"},{"size":2380,"mtime":1611687938455,"results":"69","hashOfConfig":"52"},{"size":2030,"mtime":1607367574151,"results":"70","hashOfConfig":"52"},{"size":856,"mtime":1607367574147,"results":"71","hashOfConfig":"52"},{"size":3250,"mtime":1607367639448,"results":"72","hashOfConfig":"52"},{"size":3111,"mtime":1611688148341,"results":"73","hashOfConfig":"52"},{"size":5547,"mtime":1611291055050,"results":"74","hashOfConfig":"52"},{"size":409,"mtime":1607011772766,"results":"75","hashOfConfig":"52"},{"size":2748,"mtime":1611256865188,"results":"76","hashOfConfig":"52"},{"size":9440,"mtime":1611296682540,"results":"77","hashOfConfig":"52"},{"size":3073,"mtime":1610483921692,"results":"78","hashOfConfig":"52"},{"size":1959,"mtime":1607359631134,"results":"79","hashOfConfig":"52"},{"size":811,"mtime":1607358797397,"results":"80","hashOfConfig":"52"},{"size":14210,"mtime":1611287945323,"results":"81","hashOfConfig":"52"},{"size":1934,"mtime":1607359631138,"results":"82","hashOfConfig":"52"},{"size":3713,"mtime":1607370954154,"results":"83","hashOfConfig":"52"},{"size":512,"mtime":1607367843575,"results":"84","hashOfConfig":"52"},{"size":2969,"mtime":1608180150470,"results":"85","hashOfConfig":"86"},{"size":530,"mtime":1607391097911,"results":"87","hashOfConfig":"52"},{"size":6313,"mtime":1607814675753,"results":"88","hashOfConfig":"52"},{"size":2027,"mtime":1610084907596,"results":"89","hashOfConfig":"52"},{"size":955,"mtime":1610043497861,"results":"90","hashOfConfig":"52"},{"size":15584,"mtime":1610084859928,"results":"91","hashOfConfig":"52"},{"size":2887,"mtime":1610082272720,"results":"92","hashOfConfig":"52"},{"size":695,"mtime":1608693483676,"results":"93","hashOfConfig":"52"},{"size":6423,"mtime":1610519670721,"results":"94","hashOfConfig":"52"},{"size":1328,"mtime":1611539067995,"results":"95","hashOfConfig":"52"},{"size":108,"mtime":1609361255896,"results":"96","hashOfConfig":"52"},{"size":22052,"mtime":1611688460498,"results":"97","hashOfConfig":"52"},{"size":3860,"mtime":1611672098220,"results":"98","hashOfConfig":"52"},{"size":510,"mtime":1611687177169,"results":"99","hashOfConfig":"52"},{"size":4408,"mtime":1611683011916,"results":"100","hashOfConfig":"52"},{"size":3656,"mtime":1611539990165,"results":"101","hashOfConfig":"52"},{"size":805,"mtime":1611598914680,"results":"102","hashOfConfig":"52"},{"size":868,"mtime":1611687204369,"results":"103","hashOfConfig":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1dtcuoe",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2e6mmj",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"r67d3h",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"108"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"108"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"108"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/workstation/Rshine_App/frontend/src/App.js",["215"],"/home/workstation/Rshine_App/frontend/src/reportWebVitals.js",[],["216","217"],"/home/workstation/Rshine_App/frontend/src/data.js",[],"/home/workstation/Rshine_App/frontend/src/components/Product.js",[],"/home/workstation/Rshine_App/frontend/src/index.js",[],"/home/workstation/Rshine_App/frontend/src/components/Rating.js",[],"/home/workstation/Rshine_App/frontend/src/components/LoadingBox.js",[],"/home/workstation/Rshine_App/frontend/src/store.js",[],"/home/workstation/Rshine_App/frontend/src/constants/productConstants.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/productReducers.js",[],"/home/workstation/Rshine_App/frontend/src/actions/productActions.js",[],"/home/workstation/Rshine_App/frontend/src/components/MessageBox.js",[],"/home/workstation/Rshine_App/frontend/src/screens/CartScreen.js",["218"],"/home/workstation/Rshine_App/frontend/src/actions/cartActions.js",[],"/home/workstation/Rshine_App/frontend/src/constants/cartConstants.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/cartReducers.js",[],"/home/workstation/Rshine_App/frontend/src/screens/SigninScreen.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/userReducers.js",[],"/home/workstation/Rshine_App/frontend/src/constants/userConstants.js",[],"/home/workstation/Rshine_App/frontend/src/actions/userActions.js",[],"/home/workstation/Rshine_App/frontend/src/screens/RegisterScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ShippingAddressScreen.js",[],"/home/workstation/Rshine_App/frontend/src/components/CheckoutSteps.js",[],"/home/workstation/Rshine_App/frontend/src/screens/PaymentMethodScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/PlaceOrderScreen.js",["219","220"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { generatePublicUrl } from '../urlConfig';\n\nexport default function PlaceOrderScreen(props) {\n  const cart = useSelector((state) => state.cart);\n  if (!cart.paymentMethod) {\n    props.history.push('/payment');\n  }\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { loading, success, error, order } = orderCreate;\n  const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n  cart.itemsPrice = toPrice(\n    cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\n  );\n  // cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n  cart.shippingPrice=cart.shippingAddress.city === \"ottawa\"?toPrice(100) : toPrice(10);\n  // cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n  const dispatch = useDispatch();\n  const placeOrderHandler = () => {\n    dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\n  };\n  useEffect(() => {\n    if (success) {\n      props.history.push(`/order/${order._id}`);\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n  }, [dispatch, order, props.history, success]);\n  return (\n <main>\n       \n      <div class=\"container\">\n  \n        <section class=\"mt-5 mb-4\">\n  \n          <div class=\"row\">\n          \n            <div class=\"col-lg-8\">\n  \n              <div class=\"card wish-list mb-4\">\n                <div class=\"card-body\">\n  \n                  <h5 class=\"mb-4\">\n                  Shipping</h5>\n                 \n                  <div class=\"row mb-4\">\n                    <div class=\"\">\n                    <p>\n                   <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n                   <strong>Address: </strong> {cart.shippingAddress.address},\n                   {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}\n                   ,{cart.shippingAddress.country}\n                 </p>\n                    </div>\n                  \n                  </div>\n                  <hr class=\"mb-4\"/>\n                \n                 \n  \n                </div>\n              </div>\n  \n              <div class=\"card mb-4\">\n                <div class=\"card-body\">\n  \n                  <h5 class=\"mb-4\">Payment</h5>\n  \n                  <p class=\"mb-0\"> {cart.paymentMethod}</p>\n                </div>\n              </div>\n  \n              <div class=\"card mb-4\">\n              <div class=\"card-body\">\n  \n  <h5 class=\"mb-4\">\n  Order Items</h5>\n  {cart.cartItems.map((item) => (\n    <>\n  <div class=\"row mb-4\">\n    <div class=\"col-md-5 col-lg-3 col-xl-3\">\n      <div class=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\n        <img class=\"small\"\n          src={generatePublicUrl(item.image)} alt={item.name}/>\n       \n      </div>\n    </div>\n    <div class=\"col-md-7 col-lg-9 col-xl-9\">\n      <div>\n        <div class=\"d-flex justify-content-between\">\n          <div>\n            <h5>{item.name}</h5>\n           \n          </div>\n          <div>\n          <div class=\"orderItem \">\n            \n            \n\n                               {item.qty} x ${item.price} = ${item.qty * item.price}\n\n\n\n\n                            \n                            </div>\n\n\n\n\n\n\n          \n          </div>\n        </div>\n       \n      </div>\n    </div>\n  </div>\n  <hr class=\"mb-4\"/>\n</>))}\n\n</div>\n</div>\n\n            </div>\n  \n            <div class=\"col-lg-4\">\n  \n              <div class=\"card mb-4\">\n                <div class=\"card-body\">\n                \n  \n                  <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0\">\n                    Order Summary                   \n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center px-0\">\n                    Delivery\n                      <span>CA${cart.shippingPrice.toFixed(2)}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center px-0\">\n                    Tax\n                      <span>CA${cart.taxPrice.toFixed(2)}</span>\n                    </li>\n                    <li class=\"list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3\">\n                      <div>\n                        <strong>Total </strong>\n                      \n                      </div>\n                      <span><strong>${cart.totalPrice.toFixed(2)}</strong></span>\n                    </li>\n                  </ul>\n  \n                  <button type=\"button\" class=\"btn btn-primary btn-block waves-effect waves-light\" onClick={placeOrderHandler}\n    \n                disabled={cart.cartItems.length === 0}> Place Order</button>\n                  {loading && <LoadingBox></LoadingBox>}\n               {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                </div>\n              </div>\n  \n            \n            </div>\n          \n\n          </div>\n        </section>\n  \n      </div>\n      \n    </main>\n\n\n\n\n    // <div>\n    //         <div className=\"contain\">\n\n    //   <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\n    //   </div>\n    //   <div className=\"row top\">\n    //     <div className=\"col-2\">\n    //       <ul>\n    //         <li>\n    //           <div className=\"card card-body\">\n    //             <h2>Shipping</h2>\n    //             <p>\n    //               <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\n    //               <strong>Address: </strong> {cart.shippingAddress.address},\n    //               {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}\n    //               ,{cart.shippingAddress.country}\n    //             </p>\n    //           </div>\n    //         </li>\n    //         <li>\n    //           <div className=\"card card-body\">\n    //             <h2>Payment</h2>\n    //             <p>\n    //               <strong>Method:</strong> {cart.paymentMethod}\n    //             </p>\n    //           </div>\n    //         </li>\n    //         <li>\n    //           <div className=\"card card-body\">\n    //             <h2>Order Items</h2>\n    //             <ul>\n    //               {cart.cartItems.map((item) => (\n    //                 <li key={item.product}>\n    //                   <div className=\"row\">\n    //                     <div>\n    //                       {/* <img\n    //                         src={item.image}\n    //                         alt={item.name}\n    //                         className=\"small\"\n    //                       ></img> */}\n    //                     </div>\n    //                     <div className=\"min-30\">\n    //                       <Link to={`/product/${item.product}`}>\n    //                         {item.name}\n    //                       </Link>\n    //                     </div>\n\n    //                     <div>\n    //                       {item.qty} x ${item.price} = ${item.qty * item.price}\n    //                     </div>\n    //                   </div>\n    //                 </li>\n    //               ))}\n    //             </ul>\n    //           </div>\n    //         </li>\n    //       </ul>\n    //     </div>\n    //     <div className=\"col-1\">\n    //       <div className=\"card card-body\">\n    //         <ul>\n    //           <li>\n    //             <h2>Order Summary</h2>\n    //           </li>\n    //           <li>\n    //             <div className=\"row\">\n    //               <div>Items</div>\n    //               <div>${cart.itemsPrice.toFixed(2)}</div>\n    //             </div>\n    //           </li>\n    //           <li>\n    //             <div className=\"row\">\n    //               <div>Shipping</div>\n    //               <div>${cart.shippingPrice.toFixed(2)}</div>\n    //             </div>\n    //           </li>\n    //           <li>\n    //             <div className=\"row\">\n    //               <div>Tax</div>\n    //               <div>${cart.taxPrice.toFixed(2)}</div>\n    //             </div>\n    //           </li>\n    //           <li>\n    //             <div className=\"row\">\n    //               <div>\n    //                 <strong> Order Total</strong>\n    //               </div>\n    //               <div>\n    //                 <strong>${cart.totalPrice.toFixed(2)}</strong>\n    //               </div>\n    //             </div>\n    //           </li>\n    //           <li>\n    //             <button\n    //               type=\"button\"\n    //               onClick={placeOrderHandler}\n    //               className=\"primary block\"\n    //               disabled={cart.cartItems.length === 0}\n    //             >\n    //               Place Order\n    //             </button>\n    //           </li>\n    //           {loading && <LoadingBox></LoadingBox>}\n    //           {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n    //         </ul>\n    //       </div>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n}","/home/workstation/Rshine_App/frontend/src/actions/orderActions.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/orderReducers.js",[],"/home/workstation/Rshine_App/frontend/src/constants/orderConstants.js",[],"/home/workstation/Rshine_App/frontend/src/screens/OrderScreen.js",["221"],"import Axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { generatePublicUrl } from '../urlConfig';\n\nexport default function OrderScreen(props) {\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n  console.log(\"hhhh\", order)\n  const orderPay = useSelector((state) => state.orderPay);\n  const {\n    loading: loadingPay,\n    error: errorPay,\n    success: successPay,\n  } = orderPay;\n  console.log(\"www\", orderPay)\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data } = await Axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}&currency=CAD`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successPay || (order && order._id !== orderId)) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, order, orderId, sdkReady, successPay]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  return (\n    <main >\n\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n            <div class=\"container\">\n\n              <section class=\"mt-5 mb-4\">\n\n                <div class=\"row\">\n\n                  <div class=\"col-lg-8\">\n\n                    <div class=\"card wish-list mb-4\">\n                      <div class=\"card-body\">\n\n                        <h5 class=\"mb-4\">\n                          Shipping</h5>\n\n                        <div class=\"row mb-4\">\n                          <div class=\"\">\n                            <p>\n                              <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n                              <strong>Address: </strong> {order.shippingAddress.address},\n               {order.shippingAddress.city}, {order.shippingAddress.postalCode}\n               ,{order.shippingAddress.country}\n                            </p>\n                            {order.isDelivered ? (\n                              <MessageBox variant=\"success\">\n                                Delivered at {order.deliveredAt}\n                              </MessageBox>\n                            ) : (\n                                <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n                              )}\n                          </div>\n\n                        </div>\n                        <hr class=\"mb-4\" />\n\n                      </div>\n                    </div>\n\n                    <div class=\"card mb-4\">\n                      <div class=\"card-body\">\n\n                        <h5 class=\"mb-4\">Payment</h5>\n                        <div>\n                          <p class=\"mb-0\"> {order.paymentMethod}</p>\n\n                          <div class=\"row mb-4\">\n\n                            {order.isPaid ? (\n                              <MessageBox variant=\"success\">\n                                Paid at {order.paidAt}\n                              </MessageBox>\n                            ) : (\n                                <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                              )}</div></div>\n                      </div>\n                    </div>\n\n                    <div class=\"card mb-4\">\n                      <div class=\"card-body\">\n\n                        <h5 class=\"mb-4\">\n                          Order Items</h5>\n                        {order.orderItems.map((item) => (\n                          <>\n                            <div class=\"row mb-4\">\n                              <div class=\"col-md-5 col-lg-3 col-xl-3\">\n                                <div class=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\n                                  <img class=\"small\"\n                                    src={generatePublicUrl(item.image)} alt={item.name} />\n\n                                </div>\n                              </div>\n                              <div class=\"col-md-7 col-lg-9 col-xl-9\">\n                                <div>\n                                  <div class=\"d-flex justify-content-between\">\n                                    <div>\n                                      <h5>{item.name}</h5>\n\n                                    </div>\n                                    <div>\n                                      <div class=\"orderItem \">\n\n                                        {item.qty} x ${item.price} = ${item.qty * item.price}\n\n                                      </div>\n                                    </div>\n                                  </div>\n\n                                </div>\n                              </div>\n                            </div>\n                            <hr class=\"mb-4\" />\n                          </>))}\n\n                      </div>\n                    </div>\n\n                  </div>\n\n                  <div class=\"col-lg-4\">\n\n                    <div class=\"card mb-4\">\n                      <div class=\"card-body\">\n\n                        <ul class=\"list-group list-group-flush\">\n                          <li class=\"list-group-item d-flex justify-content-between align-items-center border-0 px-0 pb-0\">\n                            Order Summary\n                </li>\n                          <li class=\"list-group-item d-flex justify-content-between align-items-center px-0\">\n                            Delivery\n                  <span>CA${order.shippingPrice.toFixed(2)}</span>\n                          </li>\n                          <li class=\"list-group-item d-flex justify-content-between align-items-center px-0\">\n                            Tax\n                  <span>CA${order.taxPrice.toFixed(2)}</span>\n                          </li>\n                          <li class=\"list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3\">\n                            <div>\n                              <strong>Total </strong>\n\n                            </div>\n                            <span><strong>${order.totalPrice.toFixed(2)}</strong></span>\n                          </li>\n                        </ul>\n                        {!order.isPaid && (\n                          <>\n                            {!sdkReady ? (\n                              <LoadingBox></LoadingBox>\n                            ) : (\n                                <>\n                                  {errorPay && (\n                                    <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n                                  )}\n                                  {loadingPay && <LoadingBox></LoadingBox>}\n\n                                  <PayPalButton\n                                    amount={order.totalPrice}\n\n                                    onSuccess={successPaymentHandler}\n                                    options={{\n                                      currency: \"CAD\"\n                                    }}\n                                  ></PayPalButton>\n                                </>\n                              )}\n                          </>\n                        )}\n\n                        {loading && <LoadingBox></LoadingBox>}\n                        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                      </div>\n                    </div>\n\n\n                  </div>\n\n\n                </div>\n              </section>\n\n            </div>\n            // <div>\n            //   <h1>Order {order._id}</h1>\n            //   <div className=\"row top\">\n            //     <div className=\"col-2\">\n            //       <ul>\n            //         <li>\n            //           <div className=\"card card-body\">\n            //             <h2>Shipping</h2>\n            //             <p>\n            //               <strong>Name:</strong> {order.shippingAddress.fullName} <br />\n            //               <strong>Address: </strong> {order.shippingAddress.address},\n            //               {order.shippingAddress.city},{' '}\n            //               {order.shippingAddress.postalCode},\n            //               {order.shippingAddress.country}\n            //             </p>\n            //             {order.isDelivered ? (\n            //               <MessageBox variant=\"success\">\n            //                 Delivered at {order.deliveredAt}\n            //               </MessageBox>\n            //             ) : (\n            //               <MessageBox variant=\"danger\">Not Delivered</MessageBox>\n            //             )}\n            //           </div>\n            //         </li>\n            //         <li>\n            //           <div className=\"card card-body\">\n            //             <h2>Payment</h2>\n            //             <p>\n            //               <strong>Method:</strong> {order.paymentMethod}\n            //             </p>\n            //             {order.isPaid ? (\n            //               <MessageBox variant=\"success\">\n            //                 Paid at {order.paidAt}\n            //               </MessageBox>\n            //             ) : (\n            //               <MessageBox variant=\"danger\">Not Paid</MessageBox>\n            //             )}\n            //           </div>\n            //         </li>\n            //         <li>\n            //           <div className=\"card card-body\">\n            //             <h2>Order Items</h2>\n            //             <ul>\n            //               {order.orderItems.map((item) => (\n            //                 <li key={item.product}>\n            //                   <div className=\"row\">\n            //                     <div>\n            //                       {/* <img\n            //                         src={item.image}\n            //                         alt={item.name}\n            //                         className=\"small\"\n            //                       ></img> */}\n            //                     </div>\n            //                     <div className=\"min-30\">\n            //                       <Link to={`/product/${item.product}`}>\n            //                         {item.name}\n            //                       </Link>\n            //                     </div>\n\n            //                     <div>\n            //                       {item.qty} x ${item.price} = ${item.qty * item.price}\n            //                     </div>\n            //                   </div>\n            //                 </li>\n            //               ))}\n            //             </ul>\n            //           </div>\n            //         </li>\n            //       </ul>\n            //     </div>\n            //     <div className=\"col-1\">\n            //       <div className=\"card card-body\">\n            //         <ul>\n            //           <li>\n            //             <h2>Order Summary</h2>\n            //           </li>\n            //           <li>\n            //             <div className=\"row\">\n            //               <div>Items</div>\n            //               <div>${order.itemsPrice.toFixed(2)}</div>\n            //             </div>\n            //           </li>\n            //           <li>\n            //             <div className=\"row\">\n            //               <div>Shipping</div>\n            //               <div>${order.shippingPrice.toFixed(2)}</div>\n            //             </div>\n            //           </li>\n            //           <li>\n            //             <div className=\"row\">\n            //               <div>Tax</div>\n            //               <div>${order.taxPrice.toFixed(2)}</div>\n            //             </div>\n            //           </li>\n            //           <li>\n            //             <div className=\"row\">\n            //               <div>\n            //                 <strong> Order Total</strong>\n            //               </div>\n            //               <div>\n            //                 <strong>${order.totalPrice.toFixed(2)}</strong>\n            //               </div>\n            //             </div>\n            //           </li>\n            //           {!order.isPaid && (\n            //             <li>\n            //               {!sdkReady ? (\n            //                 <LoadingBox></LoadingBox>\n            //               ) : (\n            //                 <>\n            //                   {errorPay && (\n            //                     <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n            //                   )}\n            //                   {loadingPay && <LoadingBox></LoadingBox>}\n\n            //                   <PayPalButton\n            //                     amount={order.totalPrice}\n\n            //                     onSuccess={successPaymentHandler}\n            //                     options={{\n            //                       currency:\"CAD\"\n            //                     }}\n            //                   ></PayPalButton>\n            //                 </>\n            //               )}\n            //             </li>\n            //           )}\n            //         </ul>\n            //       </div>\n            //     </div>\n            //   </div>\n            // </div>\n\n          )}\n    </main>)\n}","/home/workstation/Rshine_App/frontend/src/screens/OrderHistoryScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProfileScreen.js",[],"/home/workstation/Rshine_App/frontend/src/components/PrivateRoute.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductListScreen.js",[],["222","223"],"/home/workstation/Rshine_App/frontend/src/components/AdminRoute.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductEditScreen.js",[],"/home/workstation/Rshine_App/frontend/src/reducers/categoryReducers.js",[],"/home/workstation/Rshine_App/frontend/src/constants/categoryConstants.js",[],"/home/workstation/Rshine_App/frontend/src/screens/CategoryScreen.js",["224"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory,addCategory, updateCategories, deleteCategoriesAction\n} from '../actions/categoryActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport AdminHomeScreen from './AdminHomeScreen';\nimport { Col, Container, Row, Modal, Button } from 'react-bootstrap';\nimport CheckboxTree from 'react-checkbox-tree';\nimport 'react-checkbox-tree/lib/react-checkbox-tree.css';\nimport {\n  IoIosCheckboxOutline,\n  IoIosCheckbox,\n  IoIosArrowForward,\n  IoIosArrowDown,\n  IoIosAdd,\n  IoIosTrash,\n  IoIosCloudUpload\n} from 'react-icons/io'\n\n\n\nexport default function CategoryScreen(props) {\n\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n  const [categoryName, setCategoryName] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n\n    dispatch(addCategory(form));\n    setShow(false);\n  }\n\n  const handleShow = () => setShow(true);\n\n  const handleCategoryImage = (e) => {\n    setCategoryImage(e.target.files[0]);\n  }\n\n\n  const renderCategories = () => {\n\n    let myCategories = [];\n    for (let category of categories) {\n      myCategories.push(\n        {\n          value: category._id,\n          name: category.name,\n          parentId: category.parentId\n\n        }\n      );\n      for (let cate of category.childr) {\n        myCategories.push(\n          {\n            value: cate._id,\n            name: cate.name,\n            parentId: cate.parentId\n          }\n\n        );\n        for (let catego of cate.childr) {\n          myCategories.push(\n            {\n              value: catego._id,\n              name: catego.name,\n              parentId: catego.parentId\n            }\n\n          );\n\n\n        }\n      }\n    }\n    return myCategories;\n  }\n\n  const updateCategory = () => {\n    setUpdateCategoryModal(true);\n\n    const categoryAll = renderCategories();\n\n    const checkedArray = [];\n    const expandedArray = [];\n\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categoryAll.find((category, _index) => categoryId === category.value)\n      category && checkedArray.push(category);\n      console.log('cc', category)\n    })\n\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categoryAll.find((category, _index) => categoryId === category.value)\n      category && expandedArray.push(category);\n      console.log(category)\n    })\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n\n    console.log({ checked, expanded, categoryAll, checkedArray, expandedArray });\n  }\n\n  const handleCategoryInput = (key, value, index, type) => {\n    console.log(value);\n    if (type === \"checked\") {\n        const updatedCheckedArray = checkedArray.map((item, _index) =>\n            index === _index ? { ...item, [key]: value } : item);\n        setCheckedArray(updatedCheckedArray);\n    } else if (type === \"expanded\") {\n        const updatedExpandedArray = expandedArray.map((item, _index) =>\n            index === _index ? { ...item, [key]: value } : item);\n        setExpandedArray(updatedExpandedArray);\n    }\n  }\n\n  const updateCategoriesForm = () => {\n    const form = new FormData();\n\n    expandedArray.forEach((item, index) => {\n        form.append('_id', item.value);\n        form.append('name', item.name);\n        form.append('parentId', item.parentId ? item.parentId : \"\");\n        form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n        form.append('_id', item.value);\n        form.append('name', item.name);\n        form.append('parentId', item.parentId ? item.parentId : \"\");\n        form.append('type', item.type);\n    });\n    dispatch(updateCategories(form));\n    setUpdateCategoryModal(false);\n}\n\nconst updateCheckedAndExpandedCategories = () => {\n  const categoryAll = renderCategories();\n\n  const checkedArray = [];\n  const expandedArray = [];\n\n  checked.length > 0 && checked.forEach((categoryId, index) => {\n    const category = categoryAll.find((category, _index) => categoryId === category.value)\n    category && checkedArray.push(category);\n    console.log('cc', category)\n  })\n\n  expanded.length > 0 && expanded.forEach((categoryId, index) => {\n    const category = categoryAll.find((category, _index) => categoryId === category.value)\n    category && expandedArray.push(category);\n    console.log(category)\n  })\n  setCheckedArray(checkedArray);\n  setExpandedArray(expandedArray);\n\n}\nconst renderDeleteCategoryModal = () => {\n  updateCheckedAndExpandedCategories();\n  setDeleteCategoryModal(true);  \n}\n\nconst deleteCategories = () => {\n  const checkedIdsArray = checkedArray.map((item, index) => ({ _id: item.value }));\n  //const expandedIdsArray = expandedArray.map((item, index) => ({ _id: item.value }));\n  //const idsArray = expandedIdsArray.concat(checkedIdsArray);\n // dispatch(deleteCategoriesAction(idsArray))\n  if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray))\n          .then(result => {\n              if (result) {\n                  dispatch(getAllCategory())\n                  setDeleteCategoryModal(false)\n              }\n          });\n  }\n\n  setDeleteCategoryModal(false);\n\n}\n\n\n  return (\n    <div>\n      <AdminHomeScreen />\n      <Container>\n        <Row>\n          <Col md={12}>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <h3>Category</h3>\n\n              <Button onClick={handleShow}>Add</Button>\n            </div>\n\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>\n\n            {loading ? (\n              <LoadingBox></LoadingBox>\n            ) : error ? (\n              <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (\n                  <CheckboxTree\n                    nodes=\n                    {categories.map((category) => (\n                      {\n                        label: category.name,\n                        value: category._id,\n                        children:\n                        category.childr.length > 0 && category.childr.map((sub) => (\n                            {\n                              label: sub.name,\n                              value: sub._id,\n                              children:\n                              sub.childr.length > 0 && sub.childr.map((subb) => (\n                                  {\n                                    label: subb.name,\n                                    value: subb._id,\n                                  }))\n                            })),\n                      }\n                    ))}\n\n                    checked={checked}\n                    expanded={expanded}\n                    onCheck={checked => setChecked(checked)}\n                    onExpand={expanded => setExpanded(expanded)}\n                    icons={{\n                      check: <IoIosCheckbox />,\n                      uncheck: <IoIosCheckboxOutline />,\n                      halfCheck: <IoIosCheckboxOutline />,\n                      expandClose: <IoIosArrowForward />,\n                      expandOpen: <IoIosArrowDown />\n                    }}\n                  />\n                )}\n          </Col>\n        </Row>\n        <Row>\n          <Col>\n            <button  onClick={renderDeleteCategoryModal}><IoIosTrash /> <span>Delete</span></button>\n            <button onClick={updateCategory}><IoIosCloudUpload /> <span>Edit</span></button>\n\n          </Col>\n        </Row>\n      </Container>\n\n\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Category</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <input type=\"text\" className=\"form-control\"\n            value={categoryName}\n            placeholder={'Category Name'}\n            onChange={(e) => setCategoryName(e.target.value)}\n          />\n\n          {loading ? (\n            <LoadingBox></LoadingBox>\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n\n\n                <>\n                  <select className=\"form-control\" value={parentCategoryId} onChange={(e) => setParentCategoryId(e.target.value)}><option>select category</option>\n                    {categories.map((category) => (\n\n\n                      <>\n                        <option key={category._id} value={category._id}> {category.name}</option>\n                        {category.childr.map((sub) =>\n                          <>\n                            <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                            {sub.childr.map((subb) =>\n\n                              <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                            )}\n                          </>\n                        )}\n                      </>))}\n                  </select>\n\n\n\n\n\n\n\n                </>\n\n\n\n\n\n\n              )}\n\n\n          <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} />\n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n\n\n      {/* Edit Categories */}\n      <Modal size=\"lg\" show={updateCategoryModal}  onHide={() => setUpdateCategoryModal(false)}>\n        <Modal.Header closeButton>\n          <Modal.Title>Update Categories</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Row>\n            <Col>\n              <h6>Expanded</h6>\n            </Col>\n          </Row>\n\n          {\n            expandedArray.length > 0 && expandedArray.map((item, index) =>\n              <Row key={index}>\n                <Col>\n                  <input type=\"text\" className=\"form-control\"\n                    value={item.name}\n                    placeholder={'Category Name'}\n                    onChange={(e) => handleCategoryInput('name',e.target.value,index,'expanded')}\n                  />\n                </Col>\n                <Col>\n\n                  {loading ? (\n                    <LoadingBox></LoadingBox>\n                  ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                  ) : (\n\n\n                        <>\n                          <select className=\"form-control\" value={item.parentId} onChange={(e) =>  handleCategoryInput('parentId',e.target.value,index,'expanded')}><option>select category</option>\n                            {categories.map((category) => (\n\n\n                              <>\n                                <option key={category._id} value={category._id}> {category.name}</option>\n                                {category.childr.map((sub) =>\n                                  <>\n                                    <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                                    {sub.childr.map((subb) =>\n\n                                      <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                                    )}\n                                  </>\n                                )}\n                              </>))}\n                          </select>\n\n                        </>\n\n                      )}\n\n                </Col>\n\n              </Row>\n\n\n\n            )\n\n          }\n\n<Row>\n            <Col>\n              <h6>Checked</h6>\n            </Col>\n          </Row>\n\n          {\n            checkedArray.length > 0 && checkedArray.map((item, index) =>\n              <Row key={index}>\n                <Col>\n                  <input type=\"text\" className=\"form-control\"\n                    value={item.name}\n                    placeholder={'Category Name'}\n                    onChange={(e) => handleCategoryInput('name',e.target.value,index,'checked')}\n                  />\n                </Col>\n                <Col>\n\n                  {loading ? (\n                    <LoadingBox></LoadingBox>\n                  ) : error ? (\n                    <MessageBox variant=\"danger\">{error}</MessageBox>\n                  ) : (\n\n\n                        <>\n                          <select className=\"form-control\" value={item.parentId} onChange={(e) =>  handleCategoryInput('parentId',e.target.value,index,'checked')}><option>select category</option>\n                            {categories.map((category) => (\n\n\n                              <>\n                                <option key={category._id} value={category._id}> {category.name}</option>\n                                {category.childr.map((sub) =>\n                                  <>\n                                    <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                                    {sub.childr.map((subb) =>\n\n                                      <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                                    )}\n                                  </>\n                                )}\n                              </>))}\n                          </select>\n\n                        </>\n\n                      )}\n\n                </Col>\n\n              </Row>\n\n\n\n            )\n\n          }\n\n\n          {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} /> */}\n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button variant=\"primary\" onClick={updateCategoriesForm}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n\n\n      {/* Delete Categories */}\n      <Modal size=\"lg\" show={deleteCategoryModal}  onHide={() => setDeleteCategoryModal(false)}  buttons={[\n              {\n                  label: 'No',\n                  color: 'primary',\n                  onClick: () => {\n                      alert('no');\n                  }\n              },\n              {\n                  label: 'Yes',\n                  color: 'danger',\n                  // onClick: deleteCategories\n              }\n          ]}>\n        <Modal.Header closeButton>\n          <Modal.Title>Confirm</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n      \n\n         \n        <h5>Expanded</h5>\n          { expandedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n          <h5>Checked</h5>\n          { checkedArray.map((item, index) => <span key={index}>{item.name}</span>)}\n\n\n\n\n\n          {/* <input type=\"file\" name=\"categoryImage\" onChange={handleCategoryImage} /> */}\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"primary\" onClick={renderDeleteCategoryModal}>\n          No         \n          </Button> \n          \n          <Button variant=\"danger\" onClick= {deleteCategories}>\n            Yes\n            </Button>\n        \n        </Modal.Footer>\n      </Modal>\n\n\n\n\n\n\n\n    </div>\n  );\n}","/home/workstation/Rshine_App/frontend/src/actions/categoryActions.js",["225"],"import Axios from 'axios';\nimport { Category_LIST_REQUEST,Category_LIST_SUCCESS,\n    Category_LIST_FAIL,\n    Category_CREATE_REQUEST,\n    Category_CREATE_SUCCESS,\n    Category_CREATE_FAIL, Category_UPDATE_REQUEST,Category_UPDATE_SUCCESS,Category_UPDATE_FAIL,Category_DELETE_REQUEST,Category_DELETE_SUCCESS,Category_DELETE_FAIL} from '../constants/categoryConstants';\n\n\n\nexport const getAllCategory = () => async (dispatch) =>{\n    dispatch({\n        type: Category_LIST_REQUEST,\n \n    });\n    try {\n        const  { data }  = await Axios.get('/api/category');\n        //const { data } = res.data;\n\n        dispatch({ type: Category_LIST_SUCCESS, payload: data});\n        //console.log({data});\n    } catch(error){\n        dispatch({ type: Category_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const addCategory = (form) => async (dispatch, getState) => {\n    dispatch({ type: Category_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/category/create',\n        form,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: Category_CREATE_SUCCESS,\n        payload: data.category,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_CREATE_FAIL, payload: message });\n    }\n  };  \n\n  export const updateCategories = (form) => async (dispatch, getState) => {\n    dispatch({ type: Category_UPDATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        '/api/category/update',\n        form,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: Category_UPDATE_SUCCESS,\n        payload: data.category,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_UPDATE_FAIL, payload: message });\n    }\n  };  \n \n\n\n \n\n  export const deleteCategoriesAction = (ids) => async (dispatch, getState) => {\n    dispatch({ type: Category_DELETE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const {data} = Axios.post(`/api/category/delete`, {payload:{ids}},{\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: Category_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_DELETE_FAIL, payload: message });\n    }\n  };","/home/workstation/Rshine_App/frontend/src/screens/AdminHomeScreen.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductAdminScreen.js",["226","227","228","229","230"],"import React, { useEffect,useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Col, Container, Row, Modal, Button,Table } from 'react-bootstrap';\nimport AdminHomeScreen from './AdminHomeScreen';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { addProduct, listProducts } from '../actions/productActions';\n\n\n\nexport default function ProductAdminScreen(props) {\n  const productList = useSelector((state) => state.productList);\n  //const {loading, error, products } = productList;\n  const {\n    loading: loadingList,\n    error: errorList,\n    products: listProduct,\n  } = productList;\n  const [name, setName] = useState(\"\");\n  const [countInStock, setCountInStock] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [categoryId, setCategoryId] = useState(\"\");\n  const [productPictures, setProductPictures] = useState([]);\n  const [show, setShow] = useState(false);\n\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listProducts());\n  }, []);\n \n\n  const handleClose = () => {\n    const form = new FormData();\n    form.append(\"name\", name);\n    form.append(\"countInStock\", countInStock);\n    form.append(\"price\", price);\n    form.append(\"description\", description);\n    form.append(\"category\", categoryId);\n\n    for (let pic of productPictures) {\n        form.append(\"productPictures\", pic);\n    }\n    \n    dispatch(addProduct(form));\n    setShow(false);\n  }\n\n  const handleShow = () => setShow(true);\n\n  const handleProductPictures = (e) => {\n    setProductPictures([...productPictures, e.target.files[0]]);\n  };\n\n  const deleteHandler = () => {\n    /// TODO: dispatch delete action\n  };\n    return (\n        <div>\n              <AdminHomeScreen />\n              <div className=\"row\">\n        <h1>Products</h1>\n        <button type=\"button\" className=\"primary\" onClick={handleShow}>\n         Add Product\n        </button>\n      </div>\n      {loadingList ? (\n        <LoadingBox></LoadingBox>\n      ) : errorList ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <Table striped bordered hover style={{fontSize:12,border:15,margin:15}}  responsive=\"lg\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>PRICE</th>\n              <th>CATEGORY</th>\n              <th>CountInStock</th>\n              <th>Description</th>\n              <th>product Pictures</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {listProduct.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>{product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.countInStock}</td>\n                <td>{product.description}</td>\n                <td>{product.productPictures.map(picture => <div className=\"productImgContainer\">\n          <img src={`http://localhost:3001/public/${picture.img}`}/>\n        </div>)}</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"small\"\n                    onClick={() =>\n                      props.history.push(`/product/${product._id}/edit`)\n                    }\n                  >\n                    Edit\n                  </button>\n                  <button\n                    type=\"button\"\n                    className=\"small\"\n                    onClick={() => deleteHandler(product)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n              <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>Add New Product</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n\n          <input type=\"text\" className=\"form-control\"\n            label=\"Name\"\n            value={name}\n            placeholder={'Product Name'}\n            onChange={(e) => setName(e.target.value)}\n          />\n\n\n        <input  className=\"form-control\"\n          label=\"countInStock\"\n          value={countInStock}\n          placeholder={`countInStock`}\n          onChange={(e) => setCountInStock(e.target.value)}\n        />\n        <input  className=\"form-control\"\n          label=\"Price\"\n          value={price}\n          placeholder={`Price`}\n          onChange={(e) => setPrice(e.target.value)}\n        />\n        <input type=\"text\" className=\"form-control\"\n          label=\"Description\"\n          value={description}\n          placeholder={`Description`}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n\n{loading ? (\n            <LoadingBox></LoadingBox>\n          ) : error ? (\n            <MessageBox variant=\"danger\">{error}</MessageBox>\n          ) : (\n                <>\n                  <select className=\"form-control\" value={categoryId} onChange={(e) => setCategoryId(e.target.value)}><option>select category</option>\n                    {categories.map((category) => (\n\n                      <>\n                        <option key={category._id} value={category._id}> {category.name}</option>\n                        {category.childr.map((sub) =>\n                          <>\n                            <option key={sub._id} value={sub._id}>  {sub.name}</option>\n\n                            {sub.childr.map((subb) =>\n\n                              <option key={subb._id} value={subb._id}>  {subb.name}</option>\n\n                            )}\n                          </>\n                        )}\n                      </>))}\n                  </select>\n\n                </>\n\n              )}\n\n        {productPictures.length > 0\n          ? productPictures.map((pic, index) => (\n              <div key={index}>{pic.name}</div>\n            ))\n          : null}\n\n        <input type=\"file\" name=\"productPicture\" onChange={handleProductPictures}/>\n         \n        </Modal.Body>\n        <Modal.Footer>\n\n          <Button variant=\"primary\" onClick={handleClose}>\n            Save Changes\n          </Button>\n        </Modal.Footer>\n      </Modal>\n        </div>\n    )\n}\n","/home/workstation/Rshine_App/frontend/src/screens/ProductUserScreen.js",["231","232"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MenueHeader from './MenueHeader';\nimport { getProductsBySlug } from '../actions/productActions';\nimport{generatePublicUrl} from '../urlConfig';\nimport { Link } from \"react-router-dom\";\n\n\n\n\nexport default function ProductUserScreen(props) {\n    \n    const productSlug = useSelector((state) => state.productSlug);\n    const { produ } = productSlug;\n\n   // console.log('here',productSlug)\n    const dispatch = useDispatch();\n\n\n    useEffect(() => {\n        console.log(props)\n        const{match}=props;\n\n\n        dispatch(getProductsBySlug(match.params.slug));\n      }, []);\n\n\n    return (\n        <main>\n\n        <div style={{display:'flex'}}>\n        {produ.map((pp) => {\n            return(\n\n        <Link  to={`/${pp.slug}/${pp._id}/p`}\n         className=\"productContainer\">\n            <div className=\"productImgContainer\">\n                \n                <img src={generatePublicUrl(pp.productPictures[0].img)}   alt=\"\"/>\n            </div>\n            <div className=\"productInfo\">\n                <div>{pp.name}</div> \n                <div><span>4.3</span>\n                <span>666544</span></div>\n                <div>{pp.price}</div>\n            </div>\n        </Link>\n        )})}</div>\n        </main>\n    )\n}\n","/home/workstation/Rshine_App/frontend/src/urlConfig.js",[],"/home/workstation/Rshine_App/frontend/src/screens/ProductDetailsPage.js",["233","234","235","236","237"],"/home/workstation/Rshine_App/frontend/src/screens/MenueHeader.js",["238","239","240","241","242","243"],"import React, {useEffect} from 'react';\nimport Product from '../components/Product';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\nimport { getAllCategory } from '../actions/categoryActions';\nimport {NavLink} from 'react-router-dom';\n\n\nexport default function MenueHeader() {\n  // const dispatch = useDispatch();\n  // const productList = useSelector(state => state.productList);\n  // const { loading, error, products } = productList;\n\n  // useEffect(() => {\n  //   dispatch(listProducts({}));\n  // }, [dispatch]);\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n\n  const dispatch = useDispatch();\n  \n\n\n  useEffect(() => {\n      dispatch(getAllCategory());\n    }, []);\n    return (\n\n\n\n    //     <div>\n    //       {loading ? (\n    //     <LoadingBox></LoadingBox>\n    //   ) : error ? (\n    //     <MessageBox variant=\"danger\">{error}</MessageBox>\n    //   ): (\n    //     <div className=\"row center\">\n    //       {products.map((product) => ( \n    //       <Product key={product._id} product={product}></Product>\n    //       ))}\n    //     </div>\n    //   )}\n    //   </div>\n    // );\n\n//     <div className=\"MenueHeader\">\n         \n   \n\n//            {loading ? (\n//              <LoadingBox></LoadingBox>\n//            ) : error ? (\n//              <MessageBox variant=\"danger\">{error}</MessageBox>\n//            ) : (\n\n//                  <>\n\n//                    <ul >\n//                      {categories.map((category) => (\n//                        <li  key={category.name}>\n//                          <span>{category.name}</span>\n\n// <ul>\n//                          {category.childr.map((sub) =>\n//                            <li key={sub.name}><a href={`/${sub.slug}`}>\n//                              {sub.name}\n//                            </a>\n// <ul>\n//                              {sub.childr.map((subb) =>\n//                                <li  key={subb.name}><a href={`/${subb.slug}`}>\n//                                  {subb.name}\n//                              </a>\n//                                </li>)}</ul>\n\n//                            </li>)}</ul>\n\n\n//                        </li>\n//                      ))}\n//                    </ul>\n//                  </>\n\n\n\n\n\n//                )}\n   \n\n\n//    </div>\n\n\n\n// <div className=\"MenueHeader\">{loading ? (\n//              <LoadingBox></LoadingBox>\n//            ) : error ? (\n//              <MessageBox variant=\"danger\">{error}</MessageBox>\n//            ) : (\n//                  <>\n//                  <ul class=\"justify-content-center \">\n\n//                  {categories.map((category) => (\n//   <li class=\"\">\n//     <span class=\" \" href=\"#\">{category.name}</span>\n \n\n//   <ul class=\"\">\n//     {category.childr.map((sub) =>\n//   <li class=\"\">\n//     <a class=\" \" href=\"#\"> {sub.name}</a>\n//   </li>)}\n//   </ul>\n\n\n\n//   </li>     ))}</ul>\n//                  </>\n//                  )}\n\n\n\n\n\n\n\n// </div>\n\n\n<div className=\"menueHedr\">\n<ul class=\"nav justify-content-center\">\n\n{loading ? (\n              <LoadingBox></LoadingBox>\n            ) : error ? (\n              <MessageBox variant=\"danger\">{error}</MessageBox>\n            ) : (<>\n              {categories.map((category) => (\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" href=\"#\"><div class=\"btn-group\">\n  <button type=\"button\" class=\"btn  dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n  {category.name}\n  </button>\n  <div class=\"dropdown-menu\">\n  {category.childr.map((sub) =>\n    <a class=\"dropdown-item\" href=\"#\"> {sub.name}</a>\n  )}\n  </div>\n</div></a>\n  </li>\n \n \n              ))}</>)}\n</ul>\n\n</div>\n\n\n\n\n\n\n\n\n\n\n );\n     \n}\n","/home/workstation/Rshine_App/frontend/src/screens/HomeScreen.js",["244","245","246"],"/home/workstation/Rshine_App/frontend/src/screens/ProductList.js",["247","248","249"],"/home/workstation/Rshine_App/frontend/src/screens/FootrScreen.js",["250","251","252","253","254"],"import React from 'react'\n\nexport default function FootrScreen() {\n    return (\n        <div>\n            <footer class=\"page-footer font-small elegant-color\">\n\n<div class=\"color-primary\">\n  <div class=\"container\">\n\n   \n    <div class=\"row py-4 d-flex align-items-center\">\n\n    \n      <div class=\"col-md-6 col-lg-5 text-center text-md-left mb-4 mb-md-0\">\n        <h6 class=\"mb-0\">Get connected with us on social networks!</h6>\n      </div>\n   \n\n      <div class=\"col-md-6 col-lg-7 text-center text-md-right\">\n\n        <a class=\"fb-ic\">\n          <i class=\"fab fa-facebook-f white-text mr-4\"> </i>\n        </a>\n      \n        <a class=\"tw-ic\">\n          <i class=\"fab fa-twitter white-text mr-4\"> </i>\n        </a>\n        \n        <a class=\"gplus-ic\">\n          <i class=\"fab fa-google-plus-g white-text mr-4\"> </i>\n        </a>\n       \n        <a class=\"li-ic\">\n          <i class=\"fab fa-linkedin-in white-text mr-4\"> </i>\n        </a>\n       \n        <a class=\"ins-ic\">\n          <i class=\"fab fa-instagram white-text\"> </i>\n        </a>\n\n      </div>\n     \n\n    </div>\n\n  </div>\n</div>\n\n\n<div class=\"container text-center text-md-left pt-4 pt-md-5\">\n\n \n  <div class=\"row mt-1 mt-md-0 mb-4 mb-md-0\">\n\n   \n    <div class=\"col-md-3 mx-auto mt-3 mt-md-0 mb-0 mb-md-4\">\n\n \n      <h5>About me</h5>\n      <hr class=\"color-primary mb-4 mt-0 d-inline-block mx-auto w-60\"/>\n\n      <p class=\"foot-desc mb-0\">Here you can use rows and columns to organize your footer content. Lorem\n        ipsum dolor sit amet,\n        consectetur\n        adipisicing elit.</p>\n\n    </div>\n   \n\n    <hr class=\"clearfix w-100 d-md-none\"/>\n\n    \n    <div class=\"col-md-3 mx-auto mt-3 mt-md-0 mb-0 mb-md-4\">\n\n    \n      <h5>Products</h5>\n      <hr class=\"color-primary mb-4 mt-0 d-inline-block mx-auto w-60\"/>\n\n      <ul class=\"list-unstyled foot-desc\">\n        <li class=\"mb-2\">\n          <a href=\"#!\">MDBootstrap</a>\n        </li>\n        <li class=\"mb-2\">\n          <a href=\"#!\">MDWordPress</a>\n        </li>\n        <li class=\"mb-2\">\n          <a href=\"#!\">BrandFlow</a>\n        </li>\n        <li class=\"mb-2\">\n          <a href=\"#!\">Bootstrap Angular</a>\n        </li>\n      </ul>\n\n    </div>\n   \n\n    <hr class=\"clearfix w-100 d-md-none\"/>\n\n    \n    <div class=\"col-md-3 mx-auto mt-3 mt-md-0 mb-0 mb-md-4\">\n\n      \n      <h5>Useful links</h5>\n      <hr class=\"color-primary mb-4 mt-0 d-inline-block mx-auto w-60\"/>\n\n      <ul class=\"list-unstyled foot-desc\">\n        <li class=\"mb-2\">\n          <a href=\"#!\">Your Account</a>\n        </li>\n        <li class=\"mb-2\">\n          <a href=\"#!\">Become an Affiliate</a>\n        </li>\n        <li class=\"mb-2\">\n          <a href=\"#!\">Shipping Rates</a>\n        </li>\n        <li class=\"mb-2\">\n          <a href=\"#!\">Help</a>\n        </li>\n      </ul>\n\n    </div>\n\n    <hr class=\"clearfix w-100 d-md-none\"/>\n\n    <div class=\"col-md-3 mx-auto mt-3 mt-md-0 mb-0 mb-md-4\">\n\n      <h5>Contacts</h5>\n      <hr class=\"color-primary mb-4 mt-0 d-inline-block mx-auto w-60\"/>\n\n      <ul class=\"fa-ul foot-desc ml-4\">\n        <li class=\"mb-2\"><span class=\"fa-li\"><i class=\"far fa-map\"></i></span>New York, Avenue Street 10\n        </li>\n        <li class=\"mb-2\"><span class=\"fa-li\"><i class=\"fas fa-phone-alt\"></i></span>042 876 836 908</li>\n        <li class=\"mb-2\"><span class=\"fa-li\"><i class=\"far fa-envelope\"></i></span>company@example.com</li>\n        <li><span class=\"fa-li\"><i class=\"far fa-clock\"></i></span>Monday - Friday: 10-17</li>\n      </ul>\n\n    </div>\n\n  </div>\n\n</div>\n\n<div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\n  <a href=\"https://mdbootstrap.com/\">Rshine.com</a>\n</div>\n\n</footer>\n        </div>\n    )\n}\n","/home/workstation/Rshine_App/frontend/src/screens/ProductImage.js",["255"],"import React, { useEffect, useState } from 'react'\nimport ImageGallery from 'react-image-gallery';\nimport { generatePublicUrl } from '../urlConfig';\n\nexport default function ProductImage(props) {\n    const [Images, setImages] = useState([])\n    useEffect(() => {\n        if(props.detail.productPictures && props.detail.productPictures.length > 0){\n            let images=[];\n            props.detail.productPictures && props.detail.productPictures.map(item => {\n              images.push({\n                original: generatePublicUrl(item.img),\n                thumbnail:generatePublicUrl(item.img)\n              })\n            })\n            setImages(images)\n        }\n    }, [props.detail])\n\n    return (\n        <div className=\"hh\">\n            <ImageGallery  items={Images} />\n        </div>\n    )\n}\n","/home/workstation/Rshine_App/frontend/src/screens/CrouselScreen.js",[],{"ruleId":"256","severity":1,"message":"257","line":45,"column":6,"nodeType":"258","endLine":45,"endColumn":8,"suggestions":"259"},{"ruleId":"260","replacedBy":"261"},{"ruleId":"262","replacedBy":"263"},{"ruleId":"264","severity":1,"message":"265","line":7,"column":10,"nodeType":"266","messageId":"267","endLine":7,"endColumn":14},{"ruleId":"264","severity":1,"message":"268","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":14},{"ruleId":"264","severity":1,"message":"269","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":21},{"ruleId":"264","severity":1,"message":"268","line":5,"column":10,"nodeType":"266","messageId":"267","endLine":5,"endColumn":14},{"ruleId":"260","replacedBy":"270"},{"ruleId":"262","replacedBy":"271"},{"ruleId":"264","severity":1,"message":"272","line":16,"column":3,"nodeType":"266","messageId":"267","endLine":16,"endColumn":11},{"ruleId":"264","severity":1,"message":"273","line":88,"column":14,"nodeType":"266","messageId":"267","endLine":88,"endColumn":18},{"ruleId":"264","severity":1,"message":"274","line":3,"column":10,"nodeType":"266","messageId":"267","endLine":3,"endColumn":13},{"ruleId":"264","severity":1,"message":"275","line":3,"column":15,"nodeType":"266","messageId":"267","endLine":3,"endColumn":24},{"ruleId":"264","severity":1,"message":"276","line":3,"column":26,"nodeType":"266","messageId":"267","endLine":3,"endColumn":29},{"ruleId":"256","severity":1,"message":"257","line":33,"column":6,"nodeType":"258","endLine":33,"endColumn":8,"suggestions":"277"},{"ruleId":"278","severity":1,"message":"279","line":98,"column":11,"nodeType":"280","endLine":98,"endColumn":69},{"ruleId":"264","severity":1,"message":"281","line":3,"column":8,"nodeType":"266","messageId":"267","endLine":3,"endColumn":19},{"ruleId":"256","severity":1,"message":"282","line":26,"column":10,"nodeType":"258","endLine":26,"endColumn":12,"suggestions":"283"},{"ruleId":"264","severity":1,"message":"284","line":9,"column":10,"nodeType":"266","messageId":"267","endLine":9,"endColumn":27},{"ruleId":"264","severity":1,"message":"285","line":11,"column":10,"nodeType":"266","messageId":"267","endLine":11,"endColumn":27},{"ruleId":"286","severity":1,"message":"287","line":79,"column":20,"nodeType":"280","endLine":79,"endColumn":32},{"ruleId":"286","severity":1,"message":"287","line":87,"column":19,"nodeType":"280","endLine":87,"endColumn":31},{"ruleId":"286","severity":1,"message":"287","line":91,"column":20,"nodeType":"280","endLine":91,"endColumn":32},{"ruleId":"264","severity":1,"message":"288","line":2,"column":8,"nodeType":"266","messageId":"267","endLine":2,"endColumn":15},{"ruleId":"264","severity":1,"message":"289","line":6,"column":10,"nodeType":"266","messageId":"267","endLine":6,"endColumn":22},{"ruleId":"264","severity":1,"message":"290","line":8,"column":9,"nodeType":"266","messageId":"267","endLine":8,"endColumn":16},{"ruleId":"256","severity":1,"message":"257","line":28,"column":8,"nodeType":"258","endLine":28,"endColumn":10,"suggestions":"291"},{"ruleId":"286","severity":1,"message":"287","line":142,"column":5,"nodeType":"280","endLine":142,"endColumn":34},{"ruleId":"286","severity":1,"message":"287","line":148,"column":5,"nodeType":"280","endLine":148,"endColumn":39},{"ruleId":"264","severity":1,"message":"292","line":4,"column":10,"nodeType":"266","messageId":"267","endLine":4,"endColumn":16},{"ruleId":"264","severity":1,"message":"293","line":4,"column":18,"nodeType":"266","messageId":"267","endLine":4,"endColumn":21},{"ruleId":"264","severity":1,"message":"294","line":4,"column":23,"nodeType":"266","messageId":"267","endLine":4,"endColumn":34},{"ruleId":"264","severity":1,"message":"288","line":4,"column":8,"nodeType":"266","messageId":"267","endLine":4,"endColumn":15},{"ruleId":"286","severity":1,"message":"295","line":43,"column":9,"nodeType":"280","endLine":43,"endColumn":12},{"ruleId":"286","severity":1,"message":"287","line":50,"column":9,"nodeType":"280","endLine":50,"endColumn":38},{"ruleId":"286","severity":1,"message":"295","line":22,"column":9,"nodeType":"280","endLine":22,"endColumn":26},{"ruleId":"286","severity":1,"message":"295","line":26,"column":9,"nodeType":"280","endLine":26,"endColumn":26},{"ruleId":"286","severity":1,"message":"295","line":30,"column":9,"nodeType":"280","endLine":30,"endColumn":29},{"ruleId":"286","severity":1,"message":"295","line":34,"column":9,"nodeType":"280","endLine":34,"endColumn":26},{"ruleId":"286","severity":1,"message":"295","line":38,"column":9,"nodeType":"280","endLine":38,"endColumn":27},{"ruleId":"296","severity":1,"message":"297","line":10,"column":83,"nodeType":"298","messageId":"299","endLine":10,"endColumn":85},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["300"],"no-native-reassign",["301"],"no-negated-in-lhs",["302"],"no-unused-vars","'Form' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'CheckoutSteps' is defined but never used.",["301"],["302"],"'IoIosAdd' is defined but never used.","'data' is assigned a value but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.",["303"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MenueHeader' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props'. Either include them or remove the dependency array.",["304"],"'generatePublicUrl' is defined but never used.","'AiFillThunderbolt' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'Product' is defined but never used.","'listProducts' is defined but never used.","'NavLink' is defined but never used.",["305"],"'Navbar' is defined but never used.","'Nav' is defined but never used.","'NavDropdown' is defined but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"desc":"306","fix":"307"},"no-global-assign","no-unsafe-negation",{"desc":"306","fix":"308"},{"desc":"309","fix":"310"},{"desc":"306","fix":"311"},"Update the dependencies array to be: [dispatch]",{"range":"312","text":"313"},{"range":"314","text":"313"},"Update the dependencies array to be: [dispatch, props]",{"range":"315","text":"316"},{"range":"317","text":"313"},[1789,1791],"[dispatch]",[1243,1245],[673,675],"[dispatch, props]",[907,909]]