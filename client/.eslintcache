[{"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/index.js":"1","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reportWebVitals.js":"2","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/store.js":"3","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/App.js":"4","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/orderReducers.js":"5","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/userReducers.js":"6","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/cartReducers.js":"7","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/crouselReducers.js":"8","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/productReducers.js":"9","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/categoryReducers.js":"10","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/SigninScreen.js":"11","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/HomeScreen.js":"12","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/RegisterScreen.js":"13","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/PaymentMethodScreen.js":"14","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/OrderHistoryScreen.js":"15","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProfileScreen.js":"16","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductUserScreen.js":"17","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductEditScreen.js":"18","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CrouselAdminScreen.js":"19","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/AboutUsScreen.js":"20","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/categoryActions.js":"21","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/userActions.js":"22","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/cartActions.js":"23","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/AdminRoute.js":"24","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/PrivateRoute.js":"25","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ShippingAddressScreen.js":"26","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/PlaceOrderScreen.js":"27","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/OrderScreen.js":"28","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CartScreen.js":"29","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductAdminScreen.js":"30","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CategoryAdminScreen.js":"31","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductDetailsPage.js":"32","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/MessageBox.js":"33","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/LoadingBox.js":"34","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/MenueHeader.js":"35","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/FootrScreen.js":"36","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductHomeScreen.js":"37","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CrouselScreen.js":"38","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/CheckoutSteps.js":"39","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/urlConfig.js":"40","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/productActions.js":"41","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/orderActions.js":"42","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/orderConstants.js":"43","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/crouselConstants.js":"44","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/productConstants.js":"45","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/userConstants.js":"46","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/cartConstants.js":"47","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/categoryConstants.js":"48","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/FooterShippingScreen.js":"49","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CartItem.js":"50","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductImage.js":"51","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/Rating.js":"52","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CheckoutPageScreen.js":"53","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/AddressFormScreen.js":"54","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/addressReducers.js":"55","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/addressConstants.js":"56","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/addressActions.js":"57","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/OrdersAdminScreen.js":"58"},{"size":610,"mtime":1614893660940,"results":"59","hashOfConfig":"60"},{"size":362,"mtime":1614893660940,"results":"61","hashOfConfig":"60"},{"size":2397,"mtime":1617029810341,"results":"62","hashOfConfig":"60"},{"size":13997,"mtime":1617114673893,"results":"63","hashOfConfig":"60"},{"size":2821,"mtime":1616651748786,"results":"64","hashOfConfig":"60"},{"size":2030,"mtime":1617112838876,"results":"65","hashOfConfig":"60"},{"size":2637,"mtime":1617046107678,"results":"66","hashOfConfig":"60"},{"size":608,"mtime":1614893660940,"results":"67","hashOfConfig":"60"},{"size":3542,"mtime":1616717916461,"results":"68","hashOfConfig":"60"},{"size":2027,"mtime":1614893660940,"results":"69","hashOfConfig":"60"},{"size":2240,"mtime":1614893660940,"results":"70","hashOfConfig":"60"},{"size":414,"mtime":1614893660940,"results":"71","hashOfConfig":"60"},{"size":2847,"mtime":1614893660940,"results":"72","hashOfConfig":"60"},{"size":2783,"mtime":1617046107678,"results":"73","hashOfConfig":"60"},{"size":3451,"mtime":1617111970069,"results":"74","hashOfConfig":"60"},{"size":3796,"mtime":1617112790175,"results":"75","hashOfConfig":"60"},{"size":1699,"mtime":1614893660940,"results":"76","hashOfConfig":"60"},{"size":6313,"mtime":1614893660940,"results":"77","hashOfConfig":"60"},{"size":141,"mtime":1614893660940,"results":"78","hashOfConfig":"60"},{"size":1362,"mtime":1614893660940,"results":"79","hashOfConfig":"60"},{"size":2971,"mtime":1614893660940,"results":"80","hashOfConfig":"60"},{"size":3598,"mtime":1616684425158,"results":"81","hashOfConfig":"60"},{"size":6225,"mtime":1617114254141,"results":"82","hashOfConfig":"60"},{"size":530,"mtime":1614893660940,"results":"83","hashOfConfig":"60"},{"size":512,"mtime":1614893660940,"results":"84","hashOfConfig":"60"},{"size":11142,"mtime":1614893660940,"results":"85","hashOfConfig":"60"},{"size":13649,"mtime":1617046107678,"results":"86","hashOfConfig":"60"},{"size":13521,"mtime":1617110900427,"results":"87","hashOfConfig":"60"},{"size":19898,"mtime":1617114413035,"results":"88","hashOfConfig":"60"},{"size":20228,"mtime":1616718699569,"results":"89","hashOfConfig":"60"},{"size":16536,"mtime":1615917391558,"results":"90","hashOfConfig":"60"},{"size":21878,"mtime":1617046206935,"results":"91","hashOfConfig":"60"},{"size":186,"mtime":1614893660940,"results":"92","hashOfConfig":"60"},{"size":184,"mtime":1614893660940,"results":"93","hashOfConfig":"60"},{"size":1417,"mtime":1614893660940,"results":"94","hashOfConfig":"60"},{"size":4289,"mtime":1614893660940,"results":"95","hashOfConfig":"60"},{"size":1782,"mtime":1614893660940,"results":"96","hashOfConfig":"60"},{"size":1782,"mtime":1614893660940,"results":"97","hashOfConfig":"60"},{"size":405,"mtime":1614893660940,"results":"98","hashOfConfig":"60"},{"size":108,"mtime":1614893660940,"results":"99","hashOfConfig":"60"},{"size":5407,"mtime":1616718424817,"results":"100","hashOfConfig":"60"},{"size":6858,"mtime":1617072265247,"results":"101","hashOfConfig":"60"},{"size":1217,"mtime":1616605311208,"results":"102","hashOfConfig":"60"},{"size":245,"mtime":1614893660940,"results":"103","hashOfConfig":"60"},{"size":1455,"mtime":1616701177759,"results":"104","hashOfConfig":"60"},{"size":856,"mtime":1614893660940,"results":"105","hashOfConfig":"60"},{"size":809,"mtime":1616693912890,"results":"106","hashOfConfig":"60"},{"size":955,"mtime":1614893660940,"results":"107","hashOfConfig":"60"},{"size":765,"mtime":1614893660940,"results":"108","hashOfConfig":"60"},{"size":1117,"mtime":1617027329814,"results":"109","hashOfConfig":"60"},{"size":813,"mtime":1614893660940,"results":"110","hashOfConfig":"60"},{"size":1483,"mtime":1614893660940,"results":"111","hashOfConfig":"60"},{"size":16713,"mtime":1616444585238,"results":"112","hashOfConfig":"60"},{"size":9861,"mtime":1616437347209,"results":"113","hashOfConfig":"60"},{"size":984,"mtime":1616350404554,"results":"114","hashOfConfig":"60"},{"size":409,"mtime":1615576794461,"results":"115","hashOfConfig":"60"},{"size":2251,"mtime":1616513574960,"results":"116","hashOfConfig":"60"},{"size":8376,"mtime":1616691822247,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"ip3nez",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"120"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"120"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"120"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"120"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"120"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"120"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"120"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"120"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233","usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"120"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"120"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"120"},"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/index.js",[],["256","257"],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reportWebVitals.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/store.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/App.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/orderReducers.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/userReducers.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/cartReducers.js",["258","259","260"],"import {\n  ADD_TO_CART_REQUEST,\n  ADD_TO_CART_SUCCESS,\n  ADD_TO_CART_FAILURE,\n  RESET_CART,\n  CART_SAVE_PAYMENT_METHOD,\n  CART_SAVE_SHIPPING_ADDRESS, CART_ADD_ITEM_FAIL, CART_REMOVE_ITEM\n} from '../constants/cartConstants';\n\n// export const cartReducer = (state = { cartItems: [] }, action) => {\n//   switch (action.type) {\n//     case CART_ADD_ITEM:\n//       const item = action.payload;\n//       const existItem = state.cartItems.find((x) => x.product === item.product);\n//       if (existItem) {\n//         return {\n//           ...state,\n//           error: '',\n//           cartItems: state.cartItems.map((x) =>\n//             x.product === existItem.product ? item : x\n//           ),\n//         };\n//       } else {\n//         return { ...state, error: '', cartItems: [...state.cartItems, item] };\n//       }\n//     case CART_REMOVE_ITEM:\n//       return {\n//         ...state,\n//         error: '',\n//         cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n//       };\n//     case CART_SAVE_SHIPPING_ADDRESS:\n//       return { ...state, shippingAddress: action.payload };\n//     case CART_SAVE_PAYMENT_METHOD:\n//       return { ...state, paymentMethod: action.payload };\n//     case CART_ADD_ITEM_FAIL:\n//       return { ...state, error: action.payload };\n//     case CART_EMPTY:\n//       return { ...state, error: '', cartItems: [] };\n//     default:\n//       return state;\n//   }\n// };\n\nconst initState = {\n  cartItems: {\n    // 123: {\n    //     _id: 123,\n    //     name: 'Samsung mobile',\n    //     img: 'some.jpg',\n    //     price: 200,\n    //     qty: 1,\n    // }\n  },\n  updatingCart: false,\n  error: null\n};\n\n\nexport const cartReducer = (state = initState, action) => {\n  switch (action.type) {\n    case ADD_TO_CART_REQUEST:\n      return { updatingCart: true };\n    case ADD_TO_CART_SUCCESS:\n      return { updatingCart: false, cartItems: action.payload.cartItems };\n    case ADD_TO_CART_FAILURE:\n      return { updatingCart: false, error: action.payload };\n    case CART_ADD_ITEM_FAIL:\n      return { ...state, error: action.payload };\n    case CART_REMOVE_ITEM:\n      if (state.cart) {\n      return {updatingCart: false,\n        ...state,\n        cart:Object.keys(state.cart).filter((x) => state.cart[x]._id !== action.payload),\n      };}\n    \n  \n    case RESET_CART:\n      return {};\n    default:\n      return state;\n  }\n};\n// export const cartDeleteReducer = (state = {}, action) => {\n//   switch (action.type) {\n//     case CART_REMOVE_ITEM:\n//       return { loading: true };\n\n//     // case PRODUCT_DELETE_RESET:\n//     //   return {};\n//     default:\n//       return state;\n//   }\n// };","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/crouselReducers.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/productReducers.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/categoryReducers.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/SigninScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/HomeScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/RegisterScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/PaymentMethodScreen.js",["261","262","263","264"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n// import { savePaymentMethod } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nexport default function PaymentMethodScreen(props) {\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress } = cart;\n  // if (!shippingAddress.address) {\n  //   props.history.push('/shipping');\n  // }\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\n  const dispatch = useDispatch();\n  // const submitHandler = (e) => {\n  //   e.preventDefault();\n  //   dispatch(savePaymentMethod(paymentMethod));\n  //   props.history.push('/placeorder');\n  // };\n  return (\n    <div>\n            <div className=\"contain\">\n\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      {/* <form className=\"formPayment\" onSubmit={submitHandler}>\n        <div>\n          <h1>Payment Method</h1>\n        </div>\n        <div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"paypal\"\n              value=\"PayPal\"\n              name=\"paymentMethod\"\n              required\n              checked\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></input>\n            <label htmlFor=\"paypal\">   <img class=\"mr-4\" width=\"45px\"\n                    src=\"https://www.paypalobjects.com/webstatic/mktg/logo-center/PP_Acceptance_Marks_for_LogoCenter_150x94.png\"\n                    alt=\"PayPal acceptance mark\"/></label>\n          </div>\n        </div>\n        <div>\n          <div>\n            <input\n              type=\"radio\"\n              id=\"Credit Card\"\n              value=\"Credit Card\"\n              name=\"paymentMethod\"\n              required\n              onChange={(e) => setPaymentMethod(e.target.value)}\n            ></input>\n            <label htmlFor=\"Credit Card\"> \n            <img class=\"mr-2\" width=\"45px\"\n                    src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg\"\n                    alt=\"Mastercard\"/>\n            <img class=\"mr-2\" width=\"45px\"\n                    src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg\"\n                    alt=\"Visa\"/>\n                  <img class=\"mr-2\" width=\"45px\"\n                    src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg\"\n                    alt=\"American Express\"/>\n                 \n               </label>\n          </div>\n        </div>\n        <div>\n          <label />\n          <button class=\"btn btn-primary btn-block waves-effect waves-light\" type=\"submit\">\n            Continue\n          </button>\n        </div>\n      </form> */}\n    </div>\n    </div>\n  );\n}","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/OrderHistoryScreen.js",["265"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrderMine } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nexport default function OrderHistoryScreen(props) {\n  const orderMineList = useSelector((state) => state.orderMineList);\n  const { loading, error, orders } = orderMineList;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listOrderMine());\n  }, [dispatch]);\n\n\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  const formatDate2 = (date) => {\n    const month = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    if (date) {\n      const d = new Date(date);\n      return `${month[d.getMonth()]} ${d.getDate()}, ${d.getFullYear()}`;\n    }\n  };\n\n\n\n\n\n\n\n  return (\n    <div className=\"orderHistory\">\n      <h1>Order History</h1>\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              {/* <th>DATE</th> */}\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order._id}</td>\n                {/* <td>{order.createdAt.substring(0, 10)}</td> */}\n                <td>{order.totalPrice.toFixed(2)}</td>\n                <td>{order.isPaid ? order.paidAt.substring(0, 10) : 'No'}</td>\n                <td>\n                <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n                <ul id=\"progressbar\" class=\"text-center\">\n                {order.orderStatus.map((status) => (<>\n                    <li class={`step0 ${\n                    status.isCompleted ? \"active\" : \"\"\n                  }`}>{status.type}<br/> {formatDate(status.date)}</li>\n                 \n                  </>\n                 ))}\n                </ul>\n            </div>\n        </div>\n       \n\n\n\n\n\n\n                    {/* {order.orderStatus.map((status) => { return (\n                     <>\n                       {status.isCompleted ? (\n                         <option  key={status.type} value={status.type}>\n                           {status.type}\n                         </option>\n                       ) : null}   {formatDate(status.date)}</>\n                       );\n                     })} */}\n                  {/* {order.isDelivered\n                    ? order.deliveredAt.substring(0, 10)\n                    : 'No'} */}\n                </td>\n                <td>\n                  <button\n                    type=\"button\"\n                    className=\"deliver-address\"\n                    onClick={() => {\n                      props.history.push(`/order/${order._id}`);\n                    }}\n                  >\n                    Details\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n}","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProfileScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductUserScreen.js",["266","267"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MenueHeader from './MenueHeader';\nimport { getProductsBySlug } from '../actions/productActions';\nimport { generatePublicUrl } from '../urlConfig';\nimport { Link } from \"react-router-dom\";\nimport MessageBox from '../components/MessageBox';\n\nexport default function ProductUserScreen(props) {\n    const productSlug = useSelector((state) => state.productSlug);\n    const { produ } = productSlug;\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        const { match } = props;\n        dispatch(getProductsBySlug(match.params.slug));\n    }, [dispatch,props]);\n\n    return (<>\n    {produ.length !== 0 && \n        <MenueHeader />}\n\n        <div class=\"container productList\">\n      <div class=\"row pt-4\">\n       \n              \n                {produ.map((product) => {\n                  return (\n                    <div class=\"col-lg-4\">\n                      <Link id=\"productLink\" to={`/${product.slug}/${product._id}/p`}>\n                        <div class=\"img-hover-zoom\">\n                          <div class=\"view overlay\">\n                            <img class=\"\" src={product.productPictures[0].img} alt={product.name} width=\"275\" height=\"250\" />\n                            <div class=\"mask rgba-white-slight\"></div>\n                          </div>\n                        </div>\n                        <p class=\"productName\">{product.name}</p>\n                        <p class=\"productPrice\">CA${product.price}</p>\n                      </Link>\n                    </div>\n                  )\n                })}\n            \n      </div>\n    </div>\n    </>\n       \n    )\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductEditScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CrouselAdminScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/AboutUsScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/categoryActions.js",["268"],"import Axios from 'axios';\nimport { Category_LIST_REQUEST,Category_LIST_SUCCESS,\n    Category_LIST_FAIL,\n    Category_CREATE_REQUEST,\n    Category_CREATE_SUCCESS,\n    Category_CREATE_FAIL, Category_UPDATE_REQUEST,Category_UPDATE_SUCCESS,Category_UPDATE_FAIL,Category_DELETE_REQUEST,Category_DELETE_SUCCESS,Category_DELETE_FAIL} from '../constants/categoryConstants';\n\n\n\nexport const getAllCategory = () => async (dispatch) =>{\n    dispatch({\n        type: Category_LIST_REQUEST,\n \n    });\n    try {\n        const  { data }  = await Axios.get('http://localhost:3001/api/category');\n        //const { data } = res.data;\n\n        dispatch({ type: Category_LIST_SUCCESS, payload: data});\n        //console.log({data});\n    } catch(error){\n        dispatch({ type: Category_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const addCategory = (form) => async (dispatch, getState) => {\n    dispatch({ type: Category_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        'http://localhost:3001/api/category/create',\n        form,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: Category_CREATE_SUCCESS,\n        payload: data.category,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_CREATE_FAIL, payload: message });\n    }\n  };  \n\n  export const updateCategories = (form) => async (dispatch, getState) => {\n    dispatch({ type: Category_UPDATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        'http://localhost:3001/api/category/update',\n        form,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: Category_UPDATE_SUCCESS,\n        payload: data.category,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_UPDATE_FAIL, payload: message });\n    }\n  };  \n \n\n\n \n\n  export const deleteCategoriesAction = (ids) => async (dispatch, getState) => {\n    dispatch({ type: Category_DELETE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const {data} = Axios.post(`http://localhost:3001/api/category/delete`, {payload:{ids}},{\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: Category_DELETE_SUCCESS });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: Category_DELETE_FAIL, payload: message });\n    }\n  };","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/userActions.js",["269","270","271","272","273"],"import Axios from 'axios';\nimport {USER_SIGNIN_FAIL,USER_SIGNIN_REQUEST,USER_SIGNIN_SUCCESS,USER_SIGNOUT,\n  USER_REGISTER_FAIL,USER_REGISTER_REQUEST,USER_REGISTER_SUCCESS, USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST, USER_DETAILS_SUCCESS,USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS } from '../constants/userConstants';\n  import {\n    ADD_TO_CART_REQUEST,\n    ADD_TO_CART_SUCCESS,\n    ADD_TO_CART_FAILURE,\n    RESET_CART,\n    CART_SAVE_PAYMENT_METHOD,\n    CART_SAVE_SHIPPING_ADDRESS,\n  } from '../constants/cartConstants';\n\nexport const signin = (email, password) => async (dispatch) => {\n    dispatch({ type: USER_SIGNIN_REQUEST, payload: { email, password } });\n    try {\n      const { data } = await Axios.post('http://localhost:3001/api/users/signin', { email, password });\n      dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n      localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n      dispatch({\n        type: USER_SIGNIN_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n\nexport const signout = () => (dispatch) => {\n  //localStorage.clear();\n   localStorage.removeItem('userInfo');\n   //localStorage.removeItem('cartItems');\n   localStorage.removeItem('shippingAddress');\n   dispatch({ type: USER_SIGNOUT });\n   dispatch({ type: RESET_CART });\n   document.location.href = '/';\n};\n\n\nexport const register = (name, email, password) => async (dispatch) => {\n  dispatch({ type: USER_REGISTER_REQUEST, payload: { email, password } });\n  try {\n    const { data } = await Axios.post('http://localhost:3001/api/users/register', {\n      name,\n      email,\n      password,\n    });\n    dispatch({ type: USER_REGISTER_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    });\n  }\n};\n\nexport const detailsUser = (userId) => async (dispatch, getState) => {\n  dispatch({ type: USER_DETAILS_REQUEST, payload: userId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.get(`http://localhost:3001/api/users/${userId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_DETAILS_FAIL, payload: message });\n  }\n};\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  dispatch({ type: USER_UPDATE_PROFILE_REQUEST, payload: user });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.put(`http://localhost:3001/api/users/profile`, user, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: USER_UPDATE_PROFILE_SUCCESS, payload: data });\n    dispatch({ type: USER_SIGNIN_SUCCESS, payload: data });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: USER_UPDATE_PROFILE_FAIL, payload: message });\n  }\n};","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/cartActions.js",["274","275","276","277","278","279"],"import Axios from 'axios';\nimport {\n  ADD_TO_CART,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n  ADD_TO_CART_REQUEST,\n  ADD_TO_CART_SUCCESS,\n  ADD_TO_CART_FAILURE,\n  RESET_CART,REMOVE_CART_ITEM_REQUEST,REMOVE_CART_ITEM_SUCCESS,REMOVE_CART_ITEM_FAILURE\n} from '../constants/cartConstants';\nimport store from \"../store\";\n\n// export const addToCart = (productId,qty,colorOption,sizeOption,sizeFirstOption,option,message) => async (dispatch, getState) => {\n//     const { data } = await Axios.get(`http://localhost:3001/api/products/prod/${productId}`);\n//     console.log(\"gggg\",data)\n//     dispatch({\n//         type: CART_ADD_ITEM,\n//         payload: {\n//           name: data.name,\n//           image: data.productPictures[0].img,\n//           price: data.price,\n//           countInStock: data.countInStock,\n//           product: data._id,\n//           qty,\n//           colorOption,\n//           sizeOption,\n//           sizeFirstOption,\n//           option,\n//           message\n//         },\n//       });\n//       localStorage.setItem(\n//         'cartItems',\n//         JSON.stringify(getState().cart.cartItems)\n//       )\n//     };\n\nexport const removeFromCart = (productId) => (dispatch, getState) => {\n \n  const {\n    cart: {\n      cartItems\n    },\n  } = store.getState();\n // localStorage.removeItem('productId');\n  // let cartItems = localStorage.getItem('cart') ?\n //  JSON.parse(localStorage.getItem('cart')) : null;\n   dispatch({ type: CART_REMOVE_ITEM, payload: productId });\n   //localStorage.setItem('cart', JSON.stringify(cartItems));\n   localStorage.setItem('cart', JSON.stringify(getState().cart));\n //  localStorage.getItem('cart', JSON.stringify(getState().cart));\n\n  \n};\n\n// export const saveShippingAddress = (data) => (dispatch) => {\n//   dispatch({ type: CART_SAVE_SHIPPING_ADDRESS, payload: data });\n//   localStorage.setItem('shippingAddress', JSON.stringify(data));\n// };\n\n// export const savePaymentMethod = (data) => (dispatch) => {\n//   dispatch({ type: CART_SAVE_PAYMENT_METHOD, payload: data });\n// };\n\n\nexport const getCartItems = (payload) => {\n  return async dispatch => {\n    const { userSignin } = store.getState();\n\n    try {\n      dispatch({ type: ADD_TO_CART_REQUEST });\n      const res = await Axios.post(`http://localhost:3001/api/cart/user/getCartItems`,payload, {\n        headers: { Authorization: `Bearer ${userSignin.userInfo.token}` },\n      });\n      if (res.status === 200) {\n        const { cartItems } = res.data;\n        console.log({ getCartItems: cartItems })\n        if (cartItems) {\n          dispatch({\n            type: ADD_TO_CART_SUCCESS,\n            payload: { cartItems }\n          });\n        }\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n\nexport const addToCart = (product, newQty) => {\n  return async dispatch => {\n    const { userSignin } = store.getState();\n\n    const {\n      cart: {\n        cartItems\n      },\n    } = store.getState();\n    //console.log('action::products', products);\n    //const product = action.payload.product;\n    //const products = state.products;\n    const qty = cartItems[product._id] ? parseInt(cartItems[product._id].qty = newQty) : newQty;\n    cartItems[product._id] = {\n      ...product,\n      qty\n    };\n\n    if (userSignin.userInfo) {\n      dispatch({ type: ADD_TO_CART_REQUEST });\n      const payload = {\n        // cartItems: Object.keys(cartItems).map((key, index) => {\n        //     return {\n        //         quantity: cartItems[key].qty,\n        //         product: cartItems[key]._id\n        //     }\n        // })\n        cartItems: [{\n          product: product._id,\n          quantity: qty\n        }]\n      };\n      console.log(payload);\n      const res = await Axios.post(`http://localhost:3001/api/cart/addtocart`, payload, {\n        headers: { Authorization: `Bearer ${userSignin.userInfo.token}` },\n      }\n      );\n     // console.log(res);\n      if (res.status === 201) {\n        dispatch(getCartItems(payload));\n      }\n    } else {\n      localStorage.setItem('cart', JSON.stringify(cartItems));\n    }\n\n   // console.log('addToCart::', cartItems);\n\n    dispatch({\n      type: ADD_TO_CART_SUCCESS,\n      payload: { cartItems }\n    });\n  }\n}\n\n\n\nexport const updateCart = () => {\n  return async dispatch => {\n    // const {\n    //   userSignin: { userInfo },\n    // } = store.getState();\n    const { userSignin } = store.getState();\n\n    let cartItems = localStorage.getItem('cart') ?\n      JSON.parse(localStorage.getItem('cart')) : null;\n\n    console.log('upppppppppp',cartItems)\n\n    if (userSignin.userInfo) {\n      console.log('userSignin.userInfo')\n\n      localStorage.removeItem('cart');\n      //dispatch(getCartItems());\n      if (cartItems) {\n        console.log('cartItems',cartItems)\n\n        const payload = {\n          cartItems: Object.keys(cartItems).map((key, index) => {\n            return {\n              quantity: cartItems[key].qty,\n              product: cartItems[key]._id\n            }\n          })\n        };\n        if (Object.keys(cartItems).length > 0) {\n          const res = await Axios.post(`http://localhost:3001/api/cart/addtocart`, payload, {\n            headers: { Authorization: `Bearer ${userSignin.userInfo.token}` },\n          });\n          if (res.status === 201) {\n            dispatch(getCartItems(payload));\n          }\n        }\n      }\n    } else {\n\n      if (cartItems) {\n        dispatch({\n          type: ADD_TO_CART_SUCCESS,\n          payload: { cartItems }\n        });\n      }\n    }\n\n\n\n  }\n}\n\n\n\nexport const removeCartItem = (payload) => {\n  return async (dispatch) => {\n    const { userSignin } = store.getState();\n\n    try {\n      dispatch({ type: REMOVE_CART_ITEM_REQUEST});\n      const res = await Axios.post(`http://localhost:3001/api/cart/removeItem`, { payload }, {\n        headers: { Authorization: `Bearer ${userSignin.userInfo.token}` },\n      });\n      if (res.status === 202) {\n        dispatch({ type:REMOVE_CART_ITEM_SUCCESS });\n        dispatch(getCartItems());\n      } else {\n        const { error } = res.data;\n        dispatch({\n          type:REMOVE_CART_ITEM_FAILURE,\n          payload: { error },\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/AdminRoute.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/PrivateRoute.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ShippingAddressScreen.js",["280","281"],"import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n//import { saveShippingAddress } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport { postcodeValidator } from 'postcode-validator';\nimport { generatePublicUrl } from '../urlConfig';\nimport FooterShippingScreen from './FooterShippingScreen'\nimport { Navbar, Container } from 'react-bootstrap';\nimport Logo from '../rshineLogo.png'\n\n\nexport default function ShippingAddressScreen(props) {\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const cart = useSelector((state) => state.cart);\n  const { shippingAddress, cartItems } = cart;\n\n  if (!userInfo) {\n    props.history.push('/signin');\n  }\n  const [country, setCountry] = useState(shippingAddress.country);\n  const [province, setProvince] = useState(shippingAddress.province);\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\n  const [address, setAddress] = useState(shippingAddress.address);\n  const [Apartment, setApartment] = useState(shippingAddress.apartment);\n  const [city, setCity] = useState(shippingAddress.city);\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\n  const dispatch = useDispatch();\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch(\n    //   saveShippingAddress({\n    //     fullName,\n    //     address,\n    //     Apartment,\n    //     city,\n    //     postalCode,\n    //     country,\n    //     province\n    //   })\n\n    // );\n    country && postcodeValidator(postalCode, country) && (\n      props.history.push('/placeorder'))\n  };\n  const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n  cart.itemsPrice = toPrice(\n    cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\n  );\n\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n  cart.totalPrice = cart.itemsPrice + cart.taxPrice;\n  return (\n    <div class=\"shippingDetails\">\n      <>\n        <Navbar collapseOnSelect fixed=\"top\" bg=\"light\" expand=\"lg\" variant=\"light\" >\n          <Container >\n            <Navbar.Brand href=\"/\"><img\n              src={Logo}\n              width=\"170\"\n              height=\"70\"\n              className=\"d-inline-block align-top imgStyle\"\n              alt=\"React Bootstrap logo\"\n            /></Navbar.Brand>\n          </Container>\n        </Navbar>\n        <div class=\"container wow fadeIn\">\n          <div className=\"container checkout\"><CheckoutSteps step1  ></CheckoutSteps></div>\n          <h2 class=\"shippingTittle\">Select a shipping address</h2>\n          <div class=\"row\">\n            <div class=\"col-lg-6\">\n              <div class=\"card\">\n                <form class=\"card-body\" onSubmit={submitHandler}>\n                  <div class=\"md-form mb-3\">\n                    <label for=\"country\" class=\"\">Country</label>\n                    <CountryDropdown class=\"form-control\"\n                      value={country}\n                      valueType=\"short\"\n                      onChange={setCountry}\n                      priorityOptions={[\"CA\", \"US\", \"GB\"]}\n                      required />\n                  </div>\n                  <div class=\"md-form mb-3\">\n                    <label for=\"fullName\" class=\"\">Full Name</label>\n                    <input type=\"text\" id=\"fullName\" class=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\n                  </div>\n                  <div class=\"md-form mb-3\">\n                    <label for=\"address\" class=\"\">Street address </label>\n                    <input type=\"text\" id=\"address\" class=\"form-control\" placeholder=\"\" value={address}\n                      onChange={(e) => setAddress(e.target.value)} required />\n                  </div>\n\n                  <div class=\"md-form mb-3\">\n                    <label for=\"apartment\" class=\"\">Apt / Suite / Unit (optional)</label>\n                    <input type=\"text\" id=\"apartment\" class=\"form-control\" placeholder=\"\" value={Apartment} onChange={(e) => setApartment(e.target.value)} />\n                  </div>\n\n                  <div class=\"md-form mb-3\">\n                    <label for=\"city\" class=\"\">City</label>\n                    <input type=\"text\" id=\"city\" class=\"form-control\" placeholder=\"\" value={city}\n                      onChange={(e) => setCity(e.target.value)} required />\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-6 mb-4\">\n                      <label for=\"province\">Province/State </label>\n                      <RegionDropdown class=\"form-control\"\n                        country={country}\n                        countryValueType=\"short\"\n                        value={province}\n                        onChange={setProvince} required />\n                    </div>\n                    <div class=\"col-lg-6 col-md-6 mb-4\">\n                      <label for=\"zip\">Postal code</label>\n                      <input type=\"text\" class=\"form-control\" id=\"zip\" placeholder=\"\" value={postalCode}\n                        onChange={(e) => setPostalCode(e.target.value)} required />\n                      {country && postalCode && !postcodeValidator(postalCode, country) && (\n                        <p className=\"validPostalCode\">Please enter a valid postal code.</p>)}\n                    </div>\n\n                  </div>\n                  <hr class=\"mb-4\" />\n                  <button class=\"btnForAll  btn-block waves-effect waves-light\" type=\"submit\">Continue</button>\n                </form>\n              </div>\n            </div>\n            <div class=\"col-lg-6\">\n              <div class=\"card mb-4\">\n                <div class=\"card-body\">\n                  <h2 class=\"orderItemDetails mb-4\">\n                    Order Items</h2>\n                  {cart.cartItems.map((item) => (\n                    <>\n                      <div class=\"row mb-4\">\n                        <div class=\"col-md-7 col-lg-12\">\n                          <div class=\"d-flex justify-content-between\">\n                            {item.qty && (\n                              <span style={{\n                                position: \"absolute\",\n                                background: \"#00bbcc\",\n                                color: \"black\",\n                                width: \"18px\",\n                                height: \"20px\",\n                                borderRadius: \"50px\",\n                                fontSize: \"12px\",\n                                border: \"2px solid #ffd480\",\n                                textAlign: \"center\",\n                                alignSelf: \"center\",\n                                marginLeft: 50,\n                                marginTop: -50\n                              }}>{item.qty}</span>)}\n                            <img class=\"small\"\n                              src={item.image} alt={item.name} />\n                            <div className=\"orderItemName\">\n                              {item.name}\n                            </div>\n                            <div class=\"orderItem \">\n                              CA${item.price.toFixed(2)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </>))}\n                </div>\n              </div>\n              <div class=\"card mb-4\">\n                <div class=\"card-body\">\n                  <ul class=\"list-group list-group-flush\">\n                    <div class=\"card mb-4\">\n                      <div class=\"card-body\">\n                        <a class=\"discountCode d-flex justify-content-between\" data-toggle=\"collapse\" href=\"#collapseExample\"\n                          aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                          Add a discount code (optional)\n                    <span><i class=\"fas fa-chevron-down pt-1\"></i></span>\n                        </a>\n                        <div class=\"collapse\" id=\"collapseExample\">\n                          <div class=\"mt-3\">\n                            <div class=\"md-form md-outline mb-0\">\n                              <input type=\"text\" id=\"discount-code\" class=\"form-control font-weight-light\"\n                                placeholder=\"Enter discount code\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Subtotal\n                          <div class=\"orderItem \">\n                            CA${cartItems.reduce((a, c) => a + c.price * c.qty, 0).toFixed(2)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Shipping <span style={{\n                            position: \"absolute\",\n                            background: \"#00bbcc\",\n                            color: \"black\",\n                            width: \"18px\",\n                            height: \"20px\",\n                            borderRadius: \"50px\",\n                            fontSize: \"12px\",\n                            border: \"2px solid #ffd480\",\n                            textAlign: \"center\",\n                            alignSelf: \"center\",\n                            marginLeft: 60,\n\n                          }}>?</span>\n                          <div class=\" \">\n                            Next Step\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Taxes\n                          <div class=\"orderItem \">\n                            CA${cart.taxPrice.toFixed(2)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <hr class=\"shipping-hr mb-4 mt-0 d-inline-block mx-auto w-100\" />\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Total\n                          <div class=\"orderItem \">\n                            CA${cart.totalPrice.toFixed(2)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <FooterShippingScreen />\n      </>\n    </div>\n\n  );\n}","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/PlaceOrderScreen.js",["282"],"import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nimport { ORDER_CREATE_RESET } from '../constants/orderConstants';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { generatePublicUrl } from '../urlConfig';\nimport { Navbar, Container } from 'react-bootstrap';\nimport Logo from '../rshineLogo.png'\nimport FooterShippingScreen from './FooterShippingScreen'\nimport { getAddress } from '../actions/addressActions';\nimport { getCartItems } from '../actions/cartActions';\n\n\nexport default function PlaceOrderScreen(props) {\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const orderCreate = useSelector((state) => state.orderCreate);\n  const { loading, success, error, order } = orderCreate;\n\n\n\n  //  const {\n  //   loading: loadingCreate,\n  //   error: errorCreate,\n  //   success: successCreate,\n  //   orders:orderCreateed,\n  // } = orderCreate;\n\n\n\n\n\n\n\n  const addressw = useSelector(state => state.addressw);\n  const {  address } = addressw;\n  const [address11, setAddress] = useState([]);\n  const dispatch = useDispatch();\n  const cart = useSelector((state) => state.cart);\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  const [formData, setFromData] = useState({ flexRadioDefault: \"no\" });\n  const handleChanage = event => {\n    const target = event.target\n    const name = target.name\n    const value = target.value\n    setFromData({\n      ...formData,\n      [name]: value\n    })\n  }\n\n\n  useEffect(() => {\n    if (address) {\n      const address1 = address.map((adr) => ({\n        ...adr,\n        selected: false,\n        edit: false,\n      }));\n      setAddress(address1)\n    };\n    //user.address.length === 0 && setNewAddress(true);\n  }, [dispatch, address]);\n\n\n\n  useEffect(() => {\n    if (cart.cartItems) {\n      setCartItems(cart.cartItems)\n\n      // dispatch(addToCart2());\n    }\n  }, [dispatch, cart.cartItems]);\n\n\n  useEffect(() => {\n    dispatch(getAddress());\n    dispatch(getCartItems());\n  }, [dispatch]);\n  // if (!cart.paymentMethod) {\n  //   props.history.push('/payment');\n  // }\n\n  const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n   cart.itemsPrice = toPrice(\n    Object.keys(cartItems).reduce((a, c) => a + cartItems[c].qty * cartItems[c].price, 0)\n    \n  );\n\n  if (formData.flexRadioDefault !== 'yes') {address11.map((adr) => (\n    cart.shippingPrice = adr.country === \"CA\" ? toPrice(3.50) :adr.country === \"US\" ? toPrice(8.5) : toPrice(16.5).toFixed(2)));\n  }\n\n  if (formData.flexRadioDefault === 'yes') {address11.map((adr) => (\n    cart.shippingPrice = adr.country === \"CA\" && adr.province === \"Ontario\" | adr.province === \"Quebec\" ? toPrice(10.5) : toPrice(15.5).toFixed(2)));\n  }\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n\n  if (formData.flexRadioDefault === 'no') {\n    cart.totalPrice = cart.itemsPrice + 3.5 + cart.taxPrice;\n  }\n\n  if (formData.flexRadioDefault === 'yes') {address11.map((adr) => (\n    cart.totalPrice = adr.country === \"CA\" && adr.province === \"Ontario\" |adr.province === \"Quebec\" ? (cart.itemsPrice + 10.5 + cart.taxPrice) : (cart.itemsPrice + 15.5 + cart.taxPrice)));\n  }\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n  console.log('zain',cart.shippingPrice)\n\n\n  \n  const placeOrderHandler = () => {\n    const totalPrice = cart.totalPrice.toFixed(2)\n  const itemsPrice=cart.itemsPrice.toFixed(2)\n   const shippingPrice=cart.shippingPrice.toFixed(2)\n  const  taxPrice=cart.taxPrice.toFixed(2)\n    const items = Object.keys(cart.cartItems).map((key) => ({\n      productId: key,\n      name: cart.cartItems[key].name,\n      price: cart.cartItems[key].price,\n      qty: cart.cartItems[key].qty,\n      img:cart.cartItems[key].img\n    }));\n    const addressId1=address11.map((adr) => (adr._id\n    ))\n    const payload = {\n      addressId: addressId1,\n      totalPrice,\n      itemsPrice,\n      shippingPrice,\n      taxPrice,\n      items,\n      paymentStatus: \"pending\",\n    };\n\n    console.log(payload);\n\n\n    dispatch(createOrder(payload));\n  };\n\n  useEffect(() => {\n    if (success) {\n      props.history.push(`/order/${order._id}`);\n      dispatch({ type: ORDER_CREATE_RESET });\n    }\n  }, [dispatch, order, props.history, success]);\n  return (\n    <div className=\"placeOrder\">\n      <>\n        <Navbar collapseOnSelect fixed=\"top\" bg=\"light\" expand=\"lg\" variant=\"light\" >\n          <Container >\n            <Navbar.Brand href=\"/\"><img\n              src={Logo}\n              width=\"170\"\n              height=\"70\"\n              className=\"d-inline-block align-top imgStyle\"\n              alt=\"React Bootstrap logo\"\n            /></Navbar.Brand>\n          </Container>\n        </Navbar>\n        <div class=\"container\">\n          <div className=\"container checkout\"><CheckoutSteps step1 step2 step3  ></CheckoutSteps></div>\n          <section class=\"mt-5 mb-4\">\n            <div class=\"row\">\n              <div class=\"col-lg-6\">\n                <div class=\"card wish-list mb-4\">\n                  <div class=\"card-body\">\n                    <div class=\" bg-white rounded box-shadow\">\n                      <div class=\"media text-muted pt-1\">\n                        <div class=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\n                          <div class=\"d-flex justify-content-between align-items-center w-100\">\n                            <strong class=\"text-gray-dark\">Contact</strong>\n                            <strong class=\"text-dark\">{userInfo.email}</strong>\n                            <a class=\"text-info\" href=\"/shipping\">Change</a>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"media text-muted pt-3\">\n                        <div class=\"media-body pb-1 mb-0 small lh-125 \">\n                          <div class=\"d-flex justify-content-between align-items-center w-100\">\n                            <strong class=\"text-gray-dark\">Ship to</strong>\n                            {address11.map((adr) => (\n                            <strong class=\"text-dark\">{adr.address}</strong>))}\n                            <a class=\"text-info\" href=\"/shipping\">Change</a>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"card mb-4\">\n                  <div class=\"card-body\">\n                    <h2 class=\"shippingMethod\">Choose your shipping options</h2>\n                    <form>\n                      <div class=\"checkbox checkbox-info checkbox-circle pt-4\">\n                        <div class=\"d-flex justify-content-between align-items-center w-100\">\n                          <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" value=\"no\" onChange={handleChanage} checked={formData.flexRadioDefault === \"no\"} />\n                          <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                            Canada Regular Shipping with no tracking number</label>\n                          {/* <strong class=\"priceShipping text-dark\">CA$3.50</strong> */}\n                        </div>\n                      </div>\n                      <div class=\"checkbox checkbox-info checkbox-circle pt-4\">\n                        <div class=\"d-flex justify-content-between align-items-center w-100\">\n                          <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault4\" value=\"yes\" onChange={handleChanage} />\n                          <label class=\"form-check-label\" for=\"flexRadioDefault4\">\n                            Canada Shipping with Tracking\n                         </label>\n                          {/* <strong class=\"priceShipping text-dark\">CA$10.5</strong> */}\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-6\">\n                <div class=\"card mb-4\">\n                  <div class=\"card-body\">\n                    <h2 class=\"orderItemDetails mb-4\">\n                      Order Items</h2>\n                      {Object.keys(cartItems).map((key, index) => (\n\n                      <>\n                        <div class=\"row mb-4\">\n                          <div class=\"col-md-7 col-lg-12\">\n                            <div class=\"d-flex justify-content-between\">\n                              {cartItems[key].qty && (\n                                <span style={{\n                                  position: \"absolute\",\n                                  background: \"#00bbcc\",\n                                  color: \"black\",\n                                  width: \"18px\",\n                                  height: \"20px\",\n                                  borderRadius: \"50px\",\n                                  fontSize: \"12px\",\n                                  border: \"2px solid #ffd480\",\n                                  textAlign: \"center\",\n                                  alignSelf: \"center\",\n                                  marginLeft: 50,\n                                  marginTop: -50\n                                }}>{cartItems[key].qty}</span>)}\n                              <img class=\"small\"\n                                src={cartItems[key].img} alt={cartItems[key].name} />\n                              <div className=\"orderItemName\">\n                                {cartItems[key].name}\n                              </div>\n                              <div class=\"orderItem \">\n                                CA${cartItems[key].qty * cartItems[key].price}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </>))}\n                  </div>\n                </div>\n                <div class=\"card mb-4\">\n                  <div class=\"card-body\">\n                    <ul class=\"list-group list-group-flush\">\n                      <div class=\"card mb-4\">\n                        <div class=\"card-body\">\n                          <a class=\"discountCode d-flex justify-content-between\" data-toggle=\"collapse\" href=\"#collapseExample\"\n                            aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                            Add a discount code (optional)\n                    <span><i class=\"fas fa-chevron-down pt-1\"></i></span>\n                          </a>\n                          <div class=\"collapse\" id=\"collapseExample\">\n                            <div class=\"mt-3\">\n                              <div class=\"md-form md-outline mb-0\">\n                                <input type=\"text\" id=\"discount-code\" class=\"form-control font-weight-light\"\n                                  placeholder=\"Enter discount code\" />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row mb-4\">\n                        <div class=\"col-md-7 col-lg-12\">\n                          <div class=\"d-flex justify-content-between\">\n                            Subtotal\n                          <div class=\"orderItem \">\n                              CA${Object.keys(cartItems).reduce((a, c) => a +  cartItems[c].price *  cartItems[c].qty, 0).toFixed(2)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row mb-4\">\n                        <div class=\"col-md-7 col-lg-12\">\n                          <div class=\"d-flex justify-content-between\">\n                            Shipping\n                              <div class=\"orderItem \">CA${cart.shippingPrice}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"row mb-4\">\n                        <div class=\"col-md-7 col-lg-12\">\n                          <div class=\"d-flex justify-content-between\">\n                            Taxes\n                          <div class=\"orderItem \">\n                              CA${cart.taxPrice.toFixed(2)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <hr class=\"shipping-hr mb-4 mt-0 d-inline-block mx-auto w-100\" />\n                      <div class=\"row mb-4\">\n                        <div class=\"col-md-7 col-lg-12\">\n                          <div class=\"d-flex justify-content-between\">\n                            Total\n                          <div class=\"orderItem \">CA${cart.totalPrice.toFixed(2)} </div>\n                          </div>\n                        </div>\n                      </div>\n                    </ul>\n                    <button type=\"button\" class=\"btnForAll  btn-block waves-effect waves-light\" onClick={placeOrderHandler}\n                      > Continue to Payment</button>\n                    {loading && <LoadingBox></LoadingBox>}\n                    {error&& <MessageBox variant=\"danger\">{error}</MessageBox>}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n        </div>\n        <FooterShippingScreen />\n      </>\n    </div>\n  );\n}","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/OrderScreen.js",["283","284"],"import Axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { detailsOrder, payOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { generatePublicUrl } from '../urlConfig';\nimport { Navbar, Container } from 'react-bootstrap';\nimport Logo from '../rshineLogo.png'\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport FooterShippingScreen from './FooterShippingScreen'\nimport { getAddress } from '../actions/addressActions';\nimport { getCartItems } from '../actions/cartActions';\nexport default function OrderScreen(props) {\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const orderId = props.match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const orderDetails = useSelector((state) => state.orderDetails);\n  const { order, loading, error } = orderDetails;\n  const orderPay = useSelector((state) => state.orderPay);\n  const {\n    loading: loadingPay,\n    error: errorPay,\n    success: successPay,\n  } = orderPay;\n  const addressw = useSelector(state => state.addressw);\n  const {  address } = addressw;\n  const [address11, setAddress] = useState([]);\n  const cart = useSelector((state) => state.cart);\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (address) {\n      const address1 = address.map((adr) => ({\n        ...adr,\n        selected: false,\n        edit: false,\n      }));\n      setAddress(address1)\n    };\n    //user.address.length === 0 && setNewAddress(true);\n  }, [dispatch, address]);\n\n  useEffect(() => {\n    dispatch(getAddress());\n    dispatch(getCartItems());\n  }, [dispatch]);\n\n\n  const formatDate = (date) => {\n    if (date) {\n      const d = new Date(date);\n      return `${d.getFullYear()}-${d.getMonth() + 1}-${d.getDate()}`;\n    }\n    return \"\";\n  };\n\n  useEffect(() => {\n    if (cart.cartItems) {\n      setCartItems(cart.cartItems)\n\n      // dispatch(addToCart2());\n    }\n  }, [dispatch, cart.cartItems]);\n\n\n  useEffect(() => {\n    const addPayPalScript = async () => {\n      const { data } = await Axios.get('https://backend-rshine.herokuapp.com/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}&currency=CAD`;\n      script.async = true;\n      script.onload = () => {\n        setSdkReady(true);\n      };\n      document.body.appendChild(script);\n    };\n    if (!order || successPay || (order && order._id !== orderId)) {\n      dispatch({ type: ORDER_PAY_RESET });\n      dispatch(detailsOrder(orderId));\n    } else {\n      if (!order.isPaid) {\n        if (!window.paypal) {\n          addPayPalScript();\n        } else {\n          setSdkReady(true);\n        }\n      }\n    }\n  }, [dispatch, order, orderId, sdkReady, successPay]);\n\n  const successPaymentHandler = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  };\n\n  return (\n    <div className=\"orderScreen\">\n      <>\n        <Navbar collapseOnSelect fixed=\"top\" bg=\"light\" expand=\"lg\" variant=\"light\" >\n          <Container >\n            <Navbar.Brand href=\"/\"><img\n              src={Logo}\n              width=\"170\"\n              height=\"70\"\n              className=\"d-inline-block align-top imgStyle\"\n              alt=\"React Bootstrap logo\"\n            /></Navbar.Brand>\n          </Container>\n        </Navbar>\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (\n              <div class=\"container\">\n                <div className=\"container checkout\"><CheckoutSteps step1 step2 step3 step4 ></CheckoutSteps></div>\n                <section class=\"mt-5 mb-4\">\n                  <div class=\"row\">\n                    <div class=\"col-lg-6\">\n                      <div class=\"card wish-list mb-4\">\n                        <div class=\"card-body\">\n                          <div class=\" bg-white rounded box-shadow\">\n                            <div class=\"media text-muted pt-1\">\n                              <div class=\"media-body pb-3 mb-0 small lh-125 border-bottom border-gray\">\n                                <div class=\"d-flex justify-content-between align-items-center w-100\">\n                                  <strong class=\"text-gray-dark\">Contact</strong>\n                                  <strong class=\"text-dark\">{userInfo.email}</strong>\n                                  <a class=\"text-info\" href=\"/shipping\">Change</a>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"media text-muted pt-3\">\n                              <div class=\"media-body pb-1 mb-0 small lh-125 \">\n                                <div class=\"d-flex justify-content-between align-items-center w-100\">\n                                  <strong class=\"text-gray-dark\">Ship to</strong>\n                                  {address11.map((adr) => (\n                            <strong class=\"text-dark\">{adr.address},{adr.city},{adr.province},{adr.postalCode}</strong>))}\n                                  {/* <strong class=\"text-dark\">{order.shippingAddress.address},{order.shippingAddress.city},{order.shippingAddress.province},{order.shippingAddress.postalCode}</strong> */}\n                                  <a class=\"text-info\" href=\"/shipping\">Change</a>\n                                </div>\n                              </div>\n                            </div>\n                            <hr></hr>\n                              {order.isPaid ? (\n                  <MessageBox variant=\"success\">\n                    Paid at {formatDate(order.paidAt)}\n                  </MessageBox>\n                ) : (\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\n                )}\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"card mb-4\">\n                        <div class=\"card-body\">\n                          <h2 class=\"orderItemDetails mb-4\">\n                            Order Items</h2>\n                          {order.items.map((item) => (\n                            <>\n                              <div class=\"row mb-4\">\n                                <div class=\"col-md-7 col-lg-12\">\n                                  <div class=\"d-flex justify-content-between\">\n                                    {item.qty && (\n                                      <span style={{\n                                        position: \"absolute\",\n                                        background: \"#00bbcc\",\n                                        color: \"black\",\n                                        width: \"18px\",\n                                        height: \"20px\",\n                                        borderRadius: \"50px\",\n                                        fontSize: \"12px\",\n                                        border: \"2px solid #ffd480\",\n                                        textAlign: \"center\",\n                                        alignSelf: \"center\",\n                                        marginLeft: 50,\n                                        marginTop: -50\n                                      }}>{item.qty}</span>)}\n                                    <img class=\"small\"\n                                      src={item.img} alt={item.name} />\n                                    <div className=\"orderItemName\">\n                                      {item.name}\n                                    </div>\n                                    <div class=\"orderItem \">\n                                      CA${item.qty * item.price}\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </>))}\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-lg-6\">\n                      <div class=\"card mb-4\">\n                        <div class=\"card-body\">\n                          <ul class=\"list-group list-group-flush\">\n                            <div class=\"card mb-4\">\n                              <div class=\"card-body\">\n                                <a class=\"discountCode d-flex justify-content-between\" data-toggle=\"collapse\" href=\"#collapseExample\"\n                                  aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                                  Add a discount code (optional)\n                  <span><i class=\"fas fa-chevron-down pt-1\"></i></span>\n                                </a>\n                                <div class=\"collapse\" id=\"collapseExample\">\n                                  <div class=\"mt-3\">\n                                    <div class=\"md-form md-outline mb-0\">\n                                      <input type=\"text\" id=\"discount-code\" class=\"form-control font-weight-light\"\n                                        placeholder=\"Enter discount code\" />\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row mb-4\">\n                              <div class=\"col-md-7 col-lg-12\">\n                                <div class=\"d-flex justify-content-between\">\n                                  Subtotal\n                          <div class=\"orderItem \">\n                                    CA${order.items.reduce((a, c) => a + c.price * c.qty, 0).toFixed(2)}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row mb-4\">\n                              <div class=\"col-md-7 col-lg-12\">\n                                <div class=\"d-flex justify-content-between\">\n                                  Shipping\n                              <div class=\"orderItem \">CA${order.shippingPrice.toFixed(2)}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <div class=\"row mb-4\">\n                              <div class=\"col-md-7 col-lg-12\">\n                                <div class=\"d-flex justify-content-between\">\n                                  Taxes\n                          <div class=\"orderItem \">\n                                    CA${order.taxPrice.toFixed(2)}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <hr class=\"shipping-hr mb-4 mt-0 d-inline-block mx-auto w-100\" />\n                            <div class=\"row mb-4\">\n                              <div class=\"col-md-7 col-lg-12\">\n                                <div class=\"d-flex justify-content-between\">\n                                  Total\n                          <div class=\"orderItem \">CA${order.totalPrice.toFixed(2)} </div>\n                                </div>\n                              </div>\n                            </div>\n                          </ul>\n\n                          {loading && <LoadingBox></LoadingBox>}\n                          {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                        </div>\n                      </div>\n                     \n                          {!order.isPaid && (\n                             <div class=\"card mb-4\">\n                             <div class=\"card-body\">\n                               <h2 class=\"orderMethod\">Select a payment method</h2>  {order.isPaid && (\n                                 alert('Payment completed successfully')\n                               )}\n                            <>\n                              {!sdkReady ? (\n                                <LoadingBox></LoadingBox>\n                              ) : (\n                                  <>\n                                    {errorPay && (\n                                      <MessageBox variant=\"danger\">{errorPay}</MessageBox>\n                                    )}\n                                    {loadingPay && <LoadingBox></LoadingBox>}\n\n                                    <PayPalButton\n                                      amount={order.totalPrice}\n\n                                      onSuccess={successPaymentHandler}\n                                      options={{\n                                        currency: \"CAD\"\n                                      }}\n                                    ></PayPalButton>\n                                  </>\n                                )}\n                            </>\n                         \n                        </div>\n                      </div> )}\n                    </div>\n                  </div>\n                </section>\n              </div>\n            )}\n        <FooterShippingScreen />\n      </>\n    </div>\n  )\n}","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CartScreen.js",["285"],"import React, { useEffect, useState } from 'react';\nimport { addToCart, getCartItems ,removeCartItem,removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FootrScreen from './FootrScreen'\nimport MenueHeader from './MenueHeader'\nimport { IoMdCart } from \"react-icons/io\";\nimport { Link } from 'react-router-dom';\nimport CartItem from \"./CartItem\";\n\n\nexport default function CartScreen(props) {\n  const cart = useSelector((state) => state.cart);\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n  // cart.itemsPrice = toPrice(\n  //   cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\n  // );\n  cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n  //cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (cart.cartItems) {\n      setCartItems(cart.cartItems)\n\n      // dispatch(addToCart2());\n    }\n  }, [dispatch, cart.cartItems]);\n\n    //console.log(' cart.cartItems' , cart.cartItems);\n\n    //console.log(' cart' , cart);\n\n  //  console.log(' cartItems' , cartItems);\n\n\n\n  useEffect(() => {\n    if(userInfo){\n        dispatch(getCartItems());\n    }\n}, [dispatch,userInfo]);\n\n  const onQuantityIncrement = (_id, qty) => {\n    //console.log({_id, qty});\n    const { name, price,  img } = cartItems[_id];\n    dispatch(addToCart({ _id, name, price, img }, qty));\n  };\n\n  const onQuantityDecrement = (_id, qty) => {\n    const { name, price,  img } = cartItems[_id];\n    dispatch(addToCart({ _id, name, price,  img }, qty));\n  };\n\n  const removeFromCartHandler = (_id) => {\n    // delete action\n\n    console.log('wwqqqq',_id)\n    \n    dispatch(removeFromCart({ productId: _id }));\n  };\n  const onRemoveCartItem = (_id) => {\n    dispatch(removeCartItem({ productId: _id }));\n  };\n  const checkoutHandler = () => {\n    props.history.push('/signin?redirect=CheckoutPage');\n  };\n\n//   return (\n//     <>\n//       <MenueHeader />\n      \n    \n//         {Object.keys(cartItems).map((key, index) => (\n//           <CartItem\n//             key={index}\n//             cartItem={cartItems[key]}\n//             onQuantityInc={onQuantityIncrement}\n//             onQuantityDec={onQuantityDecrement}\n//           />\n//         ))}\n      \n//         <FootrScreen />\n    \n//     </>\n\n//   );\n// }\n\n  return (\n    <>\n      <MenueHeader />\n      <div className=\"cartDetails\">\n      {!cartItems  ? (<>\n          <main role=\"main\" class=\"container\">\n            <div class=\"starter-template\">\n              Your cart is empty<a href=\"/\" class=\"btnForAll ml-1\" ><IoMdCart size={25} style={{ paddingBottom: 4, paddingLeft: 4 }} /><span className=\"continueShopping \">Continue shopping</span></a>\n            </div>\n          </main></>\n        ) : (\n            <div class=\"container\">\n              <section class=\"mt-5 mb-4\">\n                <div class=\"row\">\n                  <div class=\"col-lg-8\">\n                    <div class=\"card wish-list mb-4\">\n                      <div class=\"card-body\">\n                     \n                        <h2 class=\"numItemTittle mb-4\">\n                          <span> {Object.keys(cartItems).reduce((a, c) => a + cartItems[c].qty, 0)}</span> items in your basket</h2> \n                        {Object.keys(cartItems).map((key, index) => (\n                          <>\n                            <div class=\"row mb-4\">\n                              <div class=\"col-md-5 col-lg-3 col-xl-3\">\n                                <div class=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\n                                  <Link id=\"productLink\" to={`/${cartItems[key].name}/${cartItems[key]._id}/p`}>\n                                    <img class=\"img-fluid w-100\"\n                                      src={cartItems[key].img} alt={cartItems[key].name} />\n                                  </Link>\n                                </div>\n                              </div>\n                              <div class=\"col-md-7 col-lg-9 col-xl-9\">\n                                <div>\n                                  <div class=\"d-flex justify-content-between\">\n                                    <div>\n                                      <h5 class=\"itemTittle\">{cartItems[key].name}</h5>\n                                      {cartItems[key].option && (\n                                        <p class=\"mb-3 text-muted text-uppercase small\">Options :{cartItems[key].option}</p>)}\n\n                                      {cartItems[key].sizeFirstOption && (\n                                        <p class=\"mb-3 text-muted text-uppercase small\">Options :{cartItems[key].sizeFirstOption}</p>)}\n\n                                      {cartItems[key].colorOption && (\n                                        <p class=\"mb-2 text-muted text-uppercase small\">Color: {cartItems[key].colorOption}</p>)}\n                                      {cartItems[key].sizeOption && (\n                                        <p class=\"mb-3 text-muted text-uppercase small\">Size: {cartItems[key].sizeOption}</p>)}\n                                      <p class=\"mb-3 text-muted text-uppercase small\">Personalisation: {cartItems[key].message}</p>\n                                    </div>\n                                    <div>\n                                      <div class=\"selectedQty \">\n\n                                        \n                                          <CartItem\n                                            key={index}\n                                            cartItem={cartItems[key]}\n                                            onQuantityInc={onQuantityIncrement}\n                                            onQuantityDec={onQuantityDecrement}\n\n                                          />\n                                       \n\n\n                                        {/* <select className=\"browser-default custom-select\"\n                                          value={cartItems[key].qty}\n                                          //onChange={(e) => setQty(e.target.value)} \n                                          onChange={(e) => \n\n                                             dispatch(\n                                               addToCart({_id, name, price,countInStock,img,colorOption,sizeOption,sizeFirstOption,option,message}, Number(e.target.value)))\n                                             \n                                          }\n                                        >\n                                          {[...Array(cartItems[key].countInStock).keys()].map((x) => (\n                                            <option key={x + 1} value={x + 1}>\n                                            {x + 1}    </option>\n                                          ))}\n                                        </select> */}\n                                      </div>\n                                    </div>\n                                  </div>\n                                  <div class=\"d-flex justify-content-between align-items-center\">\n                                    <div>\n\n                                    {/* onClick={() => removeFromCartHandler(cartItems[key]._id)} */}\n                                       <button class=\"removeBtn small text-uppercase mr-3\" onClick={() => onRemoveCartItem(cartItems[key]._id)} ><i\n                                        class=\"fas fa-trash-alt mr-1\"></i> Remove item </button>\n                                       <a href=\"#!\" type=\"button\" class=\"card-link small text-uppercase\"><i\n                                      class=\"fas fa-heart mr-1\"></i> Move to wish list </a> \n                                    </div>\n                                    <p class=\"mb-0\"><span className=\"itemPriceCart\">CA${cartItems[key].price}</span></p>\n\n                                    {/* <p class=\"mb-0\"><span className=\"itemPriceCart\">CA${cartItems[key].price.toFixed(2)}</span></p> */}\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                            <hr class=\"mb-4\" />\n                          </>))}\n                      </div>\n                    </div>\n                    <div class=\"card mb-4\">\n                      <div class=\"card-body\">\n                        <h2 class=\"weAccept mb-4\">We accept</h2>\n                        <img class=\"mr-2\" width=\"80px\"\n                          src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg\"\n                          alt=\"Visa\" />\n                        <img class=\"mr-2\" width=\"80px\"\n                          src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg\"\n                          alt=\"American Express\" />\n                        <img class=\"mr-2\" width=\"80px\"\n                          src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg\"\n                          alt=\"Mastercard\" />\n                        <img class=\"mr-2\" width=\"80px\"\n                          src=\"https://www.paypalobjects.com/webstatic/mktg/logo-center/PP_Acceptance_Marks_for_LogoCenter_150x94.png\"\n                          alt=\"PayPal acceptance mark\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-lg-4\">\n                    <div class=\"card mb-4\">\n                      <div class=\"card-body\">\n                        <ul class=\"list-group list-group-flush\">\n                          <li class=\"list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3\">\n                             <div className=\"Subtotal\">\n                              Subtotal ({Object.keys(cartItems).reduce((a, c) => a + cartItems[c].qty, 0)} items)\n                            </div> \n                             <span className=\"Subtotal\">CA$\n                        {Object.keys(cartItems).reduce((a, c) => a + cartItems[c].price * cartItems[c].qty, 0).toFixed(2)}</span> \n                          </li>\n                        </ul>\n                        <button type=\"button\" class=\"btnForAll  btn-block waves-effect waves-light\" onClick={checkoutHandler}\n                          disabled={cartItems.length === 0} >Checkout\n                    </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </section>\n\n            </div>\n           )} \n        <FootrScreen />\n      </div>\n    </>\n\n  );\n}\n\n\n\n// import React, { useEffect,useState } from 'react';\n// import { addToCart, removeFromCart } from '../actions/cartActions';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { generatePublicUrl } from '../urlConfig';\n// import FootrScreen from './FootrScreen'\n// import { useLocation } from 'react-router-dom';\n// import MenueHeader from './MenueHeader'\n// import { IoMdCart } from \"react-icons/io\";\n// import { Link } from 'react-router-dom';\n\n\n// export default function CartScreen(props) {\n//   const productId = props.match.params.id;\n//   const qty = props.location.search\n//     ? Number(props.location.search.split('=')[1])\n//     : 1;\n\n//   const cart = useSelector((state) => state.cart);\n//   const { cartItems } = cart;\n\n//   const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n//   cart.itemsPrice = toPrice(\n//     cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\n//   );\n//   cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10);\n//   cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n//   cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\n//   const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   if (productId) {\n//   //     dispatch(addToCart(productId, qty ));\n//   //   }\n//   // }, [dispatch, productId, qty]);\n\n\n//   const removeFromCartHandler = (id) => {\n//     // delete action\n//     dispatch(removeFromCart(id));\n//   };\n\n//   const checkoutHandler = () => {\n//     props.history.push('/signin?redirect=shipping');\n//   };\n//   return (\n//     <>\n//       <MenueHeader />\n//       <div className=\"cartDetails\">\n//         {cartItems.length === 0 ? (<>\n//           <main role=\"main\" class=\"container\">\n//             <div class=\"starter-template\">\n//               Your cart is empty<a href=\"/\" class=\"btnForAll\" ><IoMdCart size={25} style={{ paddingBottom: 4, paddingLeft: 4 }} /><span className=\"continueShopping \">Continue shopping</span></a>\n//             </div>\n//           </main></>\n//         ) : (\n//             <div class=\"container\">\n//               <section class=\"mt-5 mb-4\">\n//                 <div class=\"row\">\n//                   <div class=\"col-lg-8\">\n//                     <div class=\"card wish-list mb-4\">\n//                       <div class=\"card-body\">\n//                         <h2 class=\"numItemTittle mb-4\">\n//                           <span>{cartItems.reduce((a, c) => a + c.qty, 0)}</span> items in your basket</h2>\n//                         {cartItems.map((item) => (\n//                           <>\n//                             <div class=\"row mb-4\">\n//                               <div class=\"col-md-5 col-lg-3 col-xl-3\">\n//                                 <div class=\"view zoom overlay z-depth-1 rounded mb-3 mb-md-0\">\n//                                   <Link id=\"productLink\" to={`/${item.name}/${item.product}/p`}>\n//                                     <img class=\"img-fluid w-100\"\n//                                       src={item.image} alt={item.name} />\n//                                   </Link>\n//                                 </div>\n//                               </div>\n//                               <div class=\"col-md-7 col-lg-9 col-xl-9\">\n//                                 <div>\n//                                   <div class=\"d-flex justify-content-between\">\n//                                     <div>\n//                                       <h5 class=\"itemTittle\">{item.name}</h5>\n//                                       {item.option && (\n//                                         <p class=\"mb-3 text-muted text-uppercase small\">Options :{item.option}</p>)}\n//                                       {item.colorOption && (\n//                                         <p class=\"mb-2 text-muted text-uppercase small\">Color: {item.colorOption}</p>)}\n//                                       {item.sizeOption && (\n//                                         <p class=\"mb-3 text-muted text-uppercase small\">Size: {item.sizeOption}</p>)}\n//                                       <p class=\"mb-3 text-muted text-uppercase small\">Personalisation: {item.message}</p>\n\n//                                     </div>\n//                                     <div>\n\n//                                      <div class=\"selectedQty \">\n\n//                                         <select className=\"browser-default custom-select\"\n//                                           value={item.qty}\n//                                           onChange={(e) =>\n//                                             dispatch(\n//                                               addToCart(item.product, Number(e.target.value),item.colorOption,item.sizeOption,item.sizeFirstOption,item.option,item.message )\n//                                             )\n//                                           }\n//                                         >\n//                                           {[...Array(item.countInStock).keys()].map((x) => (\n//                                             <option key={x + 1} value={x + 1}>\n//                                               {x + 1}\n//                                             </option>\n//                                           ))}\n//                                         </select>\n//                                       </div> \n//                                     </div>\n//                                   </div>\n//                                   <div class=\"d-flex justify-content-between align-items-center\">\n//                                     <div>\n//                                       <button class=\"removeBtn small text-uppercase mr-3\" onClick={() => removeFromCartHandler(item.product)} ><i\n//                                         class=\"fas fa-trash-alt mr-1\"></i> Remove item </button>\n//                                       {/* <a href=\"#!\" type=\"button\" class=\"card-link-secondary small text-uppercase\"><i\n//                                       class=\"fas fa-heart mr-1\"></i> Move to wish list </a> */}\n//                                     </div>\n//                                     <p class=\"mb-0\"><span className=\"itemPriceCart\">CA${item.price.toFixed(2)}</span></p>\n//                                   </div>\n//                                 </div>\n//                               </div>\n//                             </div>\n//                             <hr class=\"mb-4\" />\n//                           </>))}\n//                       </div>\n//                     </div>\n//                     <div class=\"card mb-4\">\n//                       <div class=\"card-body\">\n//                         <h2 class=\"weAccept mb-4\">We accept</h2>\n//                         <img class=\"mr-2\" width=\"80px\"\n//                           src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/visa.svg\"\n//                           alt=\"Visa\" />\n//                         <img class=\"mr-2\" width=\"80px\"\n//                           src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/amex.svg\"\n//                           alt=\"American Express\" />\n//                         <img class=\"mr-2\" width=\"80px\"\n//                           src=\"https://mdbootstrap.com/wp-content/plugins/woocommerce-gateway-stripe/assets/images/mastercard.svg\"\n//                           alt=\"Mastercard\" />\n//                         <img class=\"mr-2\" width=\"80px\"\n//                           src=\"https://www.paypalobjects.com/webstatic/mktg/logo-center/PP_Acceptance_Marks_for_LogoCenter_150x94.png\"\n//                           alt=\"PayPal acceptance mark\" />\n//                       </div>\n//                     </div>\n//                   </div>\n//                   <div class=\"col-lg-4\">\n//                     <div class=\"card mb-4\">\n//                       <div class=\"card-body\">\n//                         <ul class=\"list-group list-group-flush\">\n//                           <li class=\"list-group-item d-flex justify-content-between align-items-center border-0 px-0 mb-3\">\n//                             <div className=\"Subtotal\">\n//                               Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)} items)\n//                             </div>\n//                             <span className=\"Subtotal\">CA$\n//                         {cartItems.reduce((a, c) => a + c.price * c.qty, 0).toFixed(2)}</span>\n//                           </li>\n//                         </ul>\n//                         <button type=\"button\" class=\"btnForAll  btn-block waves-effect waves-light\" onClick={checkoutHandler}\n//                           disabled={cartItems.length === 0} >Checkout\n//                     </button>\n//                       </div>\n//                     </div>\n//                   </div>\n//                 </div>\n//               </section>\n\n//             </div>\n//           )}\n//         <FootrScreen />\n//       </div>\n//     </>\n\n//   );\n// }","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductAdminScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CategoryAdminScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductDetailsPage.js",["286","287","288"],"import React, { useEffect, useState } from 'react';\nimport Rating from '../components/Rating';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { createReview, detailsProduct } from '../actions/productActions';\nimport { IoIosArrowForward, IoIosStar, IoMdCart } from \"react-icons/io\";\nimport MenueHeader from './MenueHeader';\nimport { PRODUCT_REVIEW_CREATE_RESET } from '../constants/productConstants';\nimport ProductImage from './ProductImage';\nimport FootrScreen from './FootrScreen'\nimport { addToCart } from '../actions/cartActions';\nimport CartItem from \"./CartItem\";\n\n\nexport default function ProductDetailsPage(props) {\n  const dispatch = useDispatch();\n  const productId = props.match.params.productId;\n  const [qty, setQty] = useState(1);\n  const [sizeOption, setSizeOption] = useState(\"\");\n  const [sizeFirstOption, setSizeFirstOption] = useState(\"\");\n\n  const [colorOption, setColorOption] = useState(\"\");\n  const [option, setOption] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\n  const {\n    loading: loadingReviewCreate,\n    error: errorReviewCreate,\n    success: successReviewCreate,\n  } = productReviewCreate;\n\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(null);\n  const [comment, setComment] = useState('');\n\n  useEffect(() => {\n    if (successReviewCreate) {\n      window.alert('Review Submitted Successfully');\n      setRating('');\n      setComment('');\n      dispatch({ type: PRODUCT_REVIEW_CREATE_RESET });\n    }\n    dispatch(detailsProduct(productId));\n  }, [dispatch, productId, successReviewCreate]);\n\n  // const addToCartHandler = () => {\n  //   props.history.push(`/cart/${productId}?qty=${qty}&sizeOption=${sizeOption}&sizeFirstOption=${sizeFirstOption}&colorOption=${colorOption}&option=${option}&message=${message}`);\n  // };\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (comment && rating) {\n      dispatch(\n        createReview(productId, { rating, comment, name: userInfo.name })\n      );\n    } else {\n      alert('Please enter comment and rating');\n    }\n  };\n\n  return (\n    <div>\n      <MenueHeader />\n      {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n            <div className=\"productDetails\">\n              <div class=\"container\">\n                <div className=\"breed\">\n                  <ul>\n                    <li>\n                      <a href=\"/\">Home</a>\n                      <IoIosArrowForward />\n                    </li>\n                    <li>\n                      <a className=\"pathCategoryName\" href=\"#\"> {product.category}</a>\n                      <IoIosArrowForward />\n                    </li>\n                    <li>\n                      <a className=\"pathProductName\" href=\"#\"> {product.name}</a>\n                    </li>\n                  </ul>\n                </div>\n                <section class=\"mb-5\">\n                  <div class=\"row\">\n                    <div class=\"col mb-1 mb-md-0\">\n                      <div id=\"mdb-lightbox-ui\"></div>\n                      <div class=\"mdb-lightbox\">\n                        <div class=\"row product-gallery mx-1\">\n                          <ProductImage detail={product} />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"col-md-5\">\n                      <h5 className=\"productName\">{product.name}</h5>\n                      <p class=\"mb-2 text-muted small\">{product.category}</p>\n                      <Rating\n                        rating={product.rating}\n                      ></Rating>\n\n\n                      {!option && !sizeOption &&\n                        (product.discountPrice ? (<>\n                          <p><span class=\"mr-1\"><strong className=\"discount\"> CA${(product.price - product.price * product.discountPrice).toFixed(2)}</strong><strong className=\"price\"> CA${product.price}</strong></span></p>\n                          <p className=\"priceSaved\">You save CA${(product.price * product.discountPrice).toFixed(2)}({(product.discountPrice * 100)}%)</p></>)\n                          : (<p><span class=\"mr-1\"><strong> CA${product.price}</strong></span></p>))}\n\n\n                      {!option && sizeOption &&\n                        (sizeOption === product.sizeOption1 && product.discountPrice ? (<>\n                          <p><span class=\"mr-1\"><strong className=\"discount\"> CA${(product.priceSizeOption1 - product.priceSizeOption1 * product.discountPrice).toFixed(2)}</strong><strong className=\"price\"> CA${product.priceSizeOption1}</strong></span></p>\n                          <p className=\"priceSaved\">You save CA${(product.priceSizeOption1 * product.discountPrice).toFixed(2)}({(product.discountPrice * 100)}%)</p></>) : (\n                            sizeOption === product.sizeOption2 && product.discountPrice ? (<>\n                              <p><span class=\"mr-1\"><strong className=\"discount\"> CA${(product.priceSizeOption2 - product.priceSizeOption2 * product.discountPrice).toFixed(2)}</strong><strong className=\"price\"> CA${product.priceSizeOption2}</strong></span></p>\n                              <p className=\"priceSaved\">You save CA${(product.priceSizeOption2 * product.discountPrice).toFixed(2)}({(product.discountPrice * 100)}%)</p></>\n                            ) : (sizeOption === product.sizeOption1 ? (<p><span class=\"mr-1\"><strong> CA${product.priceSizeOption1}</strong></span></p>)\n                              : (sizeOption === product.sizeOption2 ? (<p><span class=\"mr-1\"><strong> CA${product.priceSizeOption2}</strong></span></p>)\n                                :\n                                (product.discountPrice ? (<>\n                                  <p><span class=\"mr-1\"><strong className=\"discount\"> CA${(product.price - product.price * product.discountPrice).toFixed(2)}</strong><strong className=\"price\"> CA${product.price}</strong></span></p>\n                                  <p className=\"priceSaved\">You save CA${(product.price * product.discountPrice).toFixed(2)}({(product.discountPrice * 100)}%)</p></>)\n                                  : (<p><span class=\"mr-1\"><strong> CA${product.price}</strong></span></p>))\n\n                              ))))}\n\n\n\n                      {option &&\n                        (sizeFirstOption === product.sizefirstOption1 && product.discountPrice ? (<>\n                          <p><span class=\"mr-1\"><strong className=\"discount\"> CA${(product.priceSizefirstOption1 - product.priceSizefirstOption1 * product.discountPrice).toFixed(2)}</strong><strong className=\"price\"> CA${product.priceSizefirstOption1}</strong></span></p>\n                          <p className=\"priceSaved\">You save CA${(product.priceSizefirstOption1 * product.discountPrice).toFixed(2)}({(product.discountPrice * 100)}%)</p></>) : (\n\n                            sizeFirstOption === product.sizefirstOption2 && product.discountPrice ? (<>\n                              <p><span class=\"mr-1\"><strong className=\"discount\"> CA${(product.priceSizefirstOption2 - product.priceSizefirstOption2 * product.discountPrice).toFixed(2)}</strong><strong className=\"price\"> CA${product.priceSizefirstOption2}</strong></span></p>\n                              <p className=\"priceSaved\">You save CA${(product.priceSizeOption2 * product.discountPrice).toFixed(2)}({(product.discountPrice * 100)}%)</p></>\n                            ) : (sizeFirstOption === product.sizefirstOption1 ? (<p><span class=\"mr-1\"><strong> CA${product.priceSizefirstOption1}</strong></span></p>)\n                              : (sizeFirstOption === product.sizefirstOption2 ? (<p><span class=\"mr-1\"><strong> CA${product.priceSizefirstOption2}</strong></span></p>)\n                                : (product.discountPrice ? (<>\n                                  <p><span class=\"mr-1\"><strong className=\"discount\"> CA${(product.priceFirstOption - product.priceFirstOption * product.discountPrice).toFixed(2)}</strong><strong className=\"price\"> CA${product.priceFirstOption}</strong></span></p>\n                                  <p className=\"priceSaved\">You save CA${(product.priceFirstOption * product.discountPrice).toFixed(2)}({(product.discountPrice * 100)}%)</p></>)\n                                  : (<p><span class=\"mr-1\"><strong> CA${product.priceFirstOption}</strong></span></p>))))))}\n\n                      <p className=\"instock\">\n                        {product.countInStock > 0 ? (\n                          <span><i class=\"fa fa-check\" aria-hidden=\"true\"></i>\n                                In Stock</span>\n                        ) : (\n                            <span className=\"danger\">Unavailable</span>\n                          )}\n                      </p>\n                      {/* onSubmit={() => {\n                  const { _id, name, price,countInStock } = product;\n                  const img = product.productPictures[0].img;\n                  dispatch(addToCart({ _id, name, price, img,countInStock,colorOption,sizeOption,sizeFirstOption,option,message,qty }));\n                  props.history.push(`/cart/${productId}?qty=${qty}`);\n                }} */}\n\n                \n                      <form onSubmit={() => {\n                   \n                    const { _id, name, price} = product;\n                    const img = product.productPictures[0].img;\n                    dispatch(addToCart({ _id, name, price, img },Number(qty)));\n                    props.history.push(`/signin?redirect=cart`);\n                  }}>\n                        <div class=\"table-responsive\">\n                          {product.colorOption1 && (<>\n                            <label for=\"color\">Color</label>\n                            <select class=\"custom-select d-block w-100 mb-1\" id=\"color\" value={colorOption}\n                              onChange={(e) => setColorOption(e.target.value)} required>\n                              <option value=\"\">Select an option</option>\n                              <option>{product.colorOption1}</option>\n                              <option> {product.colorOption2}</option>\n                              <option> {product.colorOption3}</option>\n                              <option> {product.colorOption4}</option>\n                            </select>\n                          </>)}\n                          {product.sizefirstOption1 && (<>\n                            <label for=\"option\">Options</label>\n                            <select class=\"custom-select d-block w-100 mb-1\" id=\"option\" value={option}\n                              onChange={(e) => setOption(e.target.value)} required>\n                              <option value=\"\">Select an option</option>\n                              <option>{product.firstOption}</option>\n                              {/* <option> {product.option2}</option> */}\n                            </select>\n                          </>\n                          )}\n                          {option ? (<>\n                            <label for=\"size\">Size</label>\n                            <select class=\"custom-select d-block w-100 mb-1\" id=\"size\" value={sizeFirstOption}\n                              onChange={(e) => setSizeFirstOption(e.target.value)} required>\n                              <option value=\"\">Select an option</option>\n                              <option>{product.sizefirstOption1}</option>\n                              <option>{product.sizefirstOption2}</option>\n                            </select></>) : (product.sizeOption1 && (<>\n                              <label for=\"size\">Size</label>\n                              <select class=\"custom-select d-block w-100 mb-1\" id=\"size\" value={sizeOption}\n                                onChange={(e) => setSizeOption(e.target.value)} required>\n                                <option value=\"\">Select an option</option>\n                                <option>{product.sizeOption1}</option>\n                                <option> {product.sizeOption2}</option>\n                              </select>\n                            </>))}\n                          <h5 className=\"addYourPersonalisation1 mt-4\">Add your personalisation </h5>\n                          <p className=\"addYourPersonalisation\">{product.addYourPersonalisation}</p>\n                          <textarea class=\"form-control\" rows=\"3\" id=\"comment1\" value={message} onChange={(e) => setMessage(e.target.value)} required></textarea>\n                          {product.countInStock > 0 && (<>\n                            <label for=\"option\">Quantity</label>\n                            <select class=\"custom-select d-block w-100 mb-3\" id=\"option\" value={qty}\n                              onChange={(e) => setQty(e.target.value)} required>\n                              {[...Array(product.countInStock).keys()].map(\n                                (x) => (\n                                  <option key={x + 1} value={x + 1}>\n                                    {x + 1}\n                                  </option>\n                                )\n                              )}\n                            </select>\n                          </>)}\n                        </div>\n                        <button type=\"submit\" class=\"btnForAll btn-block waves-effect waves-light \" ><IoMdCart size={28} style={{ paddingBottom: 4 }} /><span className=\"textCart\">Add to Cart</span></button>\n                      </form>\n                    </div>\n                  </div>\n                  {/* <button onClick={() => {\n                  const { _id, name, price,countInStock } = product;\n                  const img = product.productPictures[0].img;\n                  dispatch(addToCart2({ _id, name, price, img,countInStock,colorOption,sizeOption,sizeFirstOption,option,message },qty));\n                  props.history.push(`/cart`);\n                }}></button> */}\n                </section>\n                <div class=\"classic-tabs\">\n                  <ul class=\"nav  nav-justified pb-4\" id=\"advancedTab\" role=\"tablist\">\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link active show\" id=\"description-tab\" data-toggle=\"tab\" href=\"#description\" role=\"tab\"\n                        aria-controls=\"description\" aria-selected=\"true\">Description</a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link\" id=\"info-tab\" data-toggle=\"tab\" href=\"#info\" role=\"tab\" aria-controls=\"info\"\n                        aria-selected=\"false\">Hightlights</a>\n                    </li>\n                    <li class=\"nav-item\">\n                      <a class=\"nav-link\" id=\"reviews-tab\" data-toggle=\"tab\" href=\"#reviews\" role=\"tab\" aria-controls=\"reviews\"\n                        aria-selected=\"false\">Reviews ({product.numReviews})</a>\n                    </li>\n                  </ul>\n                  <hr class=\"divider-hr\" />\n\n                  <div class=\"tab-content\" id=\"advancedTabContent\">\n                    <div class=\"tab-pane fade show active\" id=\"description\" role=\"tabpanel\" aria-labelledby=\"description-tab\">\n                      <p className=\"tittleDescription\">Product Description</p>\n                      <p class=\"small text-muted  mb-2\">{product.category}</p>\n                      <Rating\n                        rating={product.rating}\n                      ></Rating>\n\n                      <p class=\"productDescription pt-1\">{product.description}</p>\n                    </div>\n                    <div class=\"tab-pane fade\" id=\"info\" role=\"tabpanel\" aria-labelledby=\"info-tab\">\n                      <table class=\"table table-striped table-bordered mt-3\">\n                        <thead>\n                          <tr>\n                            <th scope=\"row\" class=\"w-150 dark-grey-text madeByText\">Made By</th>\n                            <td className=\"madeByText\">{product.madeBy && (\n                              <i class=\"fa fa-hand-stop-o\" ></i>)}{product.madeBy}</td>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <tr>\n                            <th scope=\"row\" class=\"w-150 dark-grey-text materialText\">Material</th>\n                            <td className=\"materialText\"> {product.material && (\n                              <svg className=\"material\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" aria-hidden=\"true\" focusable=\"false\"><path d=\"M18.1 6c.7 1.7.9 3.6.4 5.6-.8 3.4-3.5 6.1-6.9 6.9-2 .5-3.9.2-5.6-.4v1.4L7.5 21h12l1.5-1.5v-12L19.5 6h-1.4z\"></path><path d=\"M9.5 2C5.4 2 2 5.4 2 9.5S5.4 17 9.5 17 17 13.6 17 9.5 13.6 2 9.5 2zM7.8 15c-.6-.2-1.2-.5-1.7-.9l8-8c.4.5.7 1.1.9 1.7L7.8 15zm3.4-11c.6.2 1.2.5 1.7.9l-8 8c-.4-.5-.7-1.1-.9-1.7L11.2 4zM9 3.8L3.8 9C4 6.2 6.2 4 9 3.8zm1 11.4l5.2-5.2c-.2 2.8-2.4 5-5.2 5.2z\"></path></svg>\n\n                            )} {product.material}</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n\n                    <div class=\"tab-pane fade\" id=\"reviews\" role=\"tabpanel\" aria-labelledby=\"reviews-tab\">\n                      {product.reviews.length === 0 && (\n                        <MessageBox><p className=\"reviewSignin\">There is no review</p></MessageBox>\n                      )}\n\n                      {product.reviews.map((review) => (<>\n                        <h5><span>{product.numReviews}</span> review for <span>{product.name}</span></h5>\n\n                        <div class=\"media mt-3 mb-4\">\n                          <img class=\"d-flex mr-3 z-depth-1\" src=\"https://mdbootstrap.com/img/Photos/Others/placeholder1.jpg\"\n                            width=\"62\" alt=\"\" />\n                          <div class=\"media-body\">\n                            <div class=\"d-flex justify-content-between\">\n\n\n                              <p class=\"mt-1 mb-2\">\n\n                                <strong>{review.name}</strong>\n                                <Rating rating={review.rating} ></Rating>\n\n                                <span>{review.createdAt.substring(0, 10)}</span>\n                              </p>\n\n\n                            </div>\n                            <p class=\"mb-0\">{review.comment}</p>\n                          </div>\n                        </div>   </>))}\n                      <hr />\n                      {userInfo ? (<form className=\"form\" onSubmit={submitHandler}>\n                        <p class=\"mt-4\">Write a review</p>\n                        {/* <p>Your email address will not be published.</p> */}\n                        <div class=\"my-3\">\n                          <div>\n                            {/* <label htmlFor=\"rating\">Rating</label> */}\n                            {[...Array(5)].map((star, i) => {\n                              const ratingValue = i + 1;\n                              return (\n                                <label>\n                                  <input className=\"rattingInput\" type=\"radio\" name=\"rating\" value={ratingValue}\n                                    onClick={() => setRating(ratingValue)}\n                                  />\n\n                                  <IoIosStar className=\"star\" color={ratingValue <= (hover || rating) ? \"#ffc107\" : \"#e4e5e9\"} size={25}\n                                    onMouseEnter={() => setHover(ratingValue)}\n                                    onMouseLeave={() => setHover(null)} /></label>);\n                            })}\n\n                          </div>\n                        </div>\n                        <div>\n                          <div class=\" msgReview md-form md-outline\">\n                            <textarea class=\"md-textarea form-control pr-6\" rows=\"4\" id=\"comment\" value={comment}\n                              onChange={(e) => setComment(e.target.value)}></textarea>\n                            {/* <label for=\"comment\">Your review</label> */}\n                          </div>\n                          {/* <div class=\"md-form md-outline\">\n                  <input type=\"text\" id=\"form75\" class=\"form-control pr-6\" />\n                  <label for=\"form75\">Name</label>\n                </div>\n                <div class=\"md-form md-outline\">\n                  <input type=\"email\" id=\"form77\" class=\"form-control pr-6\" />\n                  <label for=\"form77\">Email</label>\n                </div> */}\n                          <div class=\"text-right pb-2\">\n                            <button type=\"submit\" class=\"btnReview\">Add a review</button>\n                            <div>\n                              {loadingReviewCreate && <LoadingBox></LoadingBox>}\n                              {errorReviewCreate && (\n                                <MessageBox variant=\"danger\">\n                                  {errorReviewCreate}\n                                </MessageBox>\n                              )}\n                            </div>\n                          </div>\n                        </div></form>\n                      ) : (<MessageBox>\n                        <p className=\"reviewSignin\">Please <Link className=\"linkSigninReview\" to=\"/signin\">Sign In</Link> to write a review</p>\n                      </MessageBox>)}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n      <FootrScreen />\n    </div>\n\n  )\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/MessageBox.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/LoadingBox.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/MenueHeader.js",["289"],"import React, { useEffect } from 'react';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getAllCategory } from '../actions/categoryActions';\n\nexport default function MenueHeader() {\n  const categoryList = useSelector((state) => state.categoryList);\n  const { loading, error, categories } = categoryList;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllCategory());\n  }, [dispatch]);\n  return (\n    <div class=\"menueHedr\">\n      <ul class=\"nav justify-content-center\">\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>\n        ) : (<>\n          {categories.map((category) => (\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" href=\"#\"><div class=\"btn-group\">\n                <button type=\"button\" class=\"btn dropdown-toggle\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n                  {category.name}\n                </button>\n                <div class=\"dropdown-menu\">\n                  {category.childr.map((sub) =>\n                    <a class=\"dropdown-item\" href={`/${sub.slug}`}> {sub.name}</a>\n                  )}\n                </div>\n              </div></a>\n            </li>\n          ))}</>)}\n      </ul>\n    </div>\n  );\n\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/FootrScreen.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductHomeScreen.js",["290"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Link } from \"react-router-dom\";\nimport { generatePublicUrl } from '../urlConfig';\n\n\nexport default function ProductHomeScreen() {\n  const dispatch = useDispatch();\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n\n  useEffect(() => {\n    dispatch(listProducts({}));\n\n  }, [dispatch]);\n  return (\n    <div class=\"container productList\">\n      <div class=\"row pt-4\">\n        {loading ? (\n          <LoadingBox></LoadingBox>\n        ) : error ? (\n          <MessageBox variant=\"danger\">{error}</MessageBox>) : (\n              <>{products.length === 0 && <MessageBox>No Product Found</MessageBox>}\n                {products.map((product) => {\n                  return (\n                    <div class=\"col-lg-4\">\n                      <Link id=\"productLink\" to={`/${product.slug}/${product._id}/p`}>\n                        <div class=\"img-hover-zoom\">\n                          <div class=\"view overlay\">\n                            <img class=\"\" src={product.productPictures[0].img} alt={product.name} width=\"275\" height=\"250\" />\n                            <div class=\"mask rgba-white-slight\"></div>\n                          </div>\n                        </div>\n                        <p class=\"productName\">{product.name}</p>\n                        <p class=\"productPrice\">CA${product.price}</p>\n                      </Link>\n                    </div>\n                  )\n                })}\n              </>)}\n      </div>\n    </div>\n  )\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CrouselScreen.js",["291","292","293","294","295","296","297"],"import React from 'react'\nimport { Carousel } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { generatePublicUrl } from '../urlConfig';\n\nexport default function CrouselScreen() {\n  const productList = useSelector((state) => state.productList);\n  const { loading, error, products } = productList;\n  return (\n    <div className=\" crousel\">\n      {/* {loading ? (\n        <LoadingBox></LoadingBox>\n      ) : error ? (\n        <MessageBox variant=\"danger\">{error}</MessageBox>\n      ) : (\n            <>{products.length === 0 && <MessageBox>No Product Found</MessageBox>}\n              {products.map((product) => {\n                return ( */}\n      <Carousel>\n\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            // src={generatePublicUrl(product.productPictures[0].img)} alt=\"First slide\"/>\n            src=\"https://mdbootstrap.com/img/Photos/Horizontal/Eco/img(54)-slide.jpg\" alt=\"First slide\" />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            // src={generatePublicUrl(product.productPictures[0].img)} alt=\"First slide\"/>\n            src=\"https://mdbootstrap.com/img/Photos/Horizontal/Eco/img(53)-slide.jpg\" alt=\"First slide\" />\n        </Carousel.Item>\n        <Carousel.Item>\n          <img\n            className=\"d-block w-100\"\n            // src={generatePublicUrl(product.productPictures[0].img)} alt=\"First slide\"/>\n            src=\"https://mdbootstrap.com/img/Photos/Horizontal/Eco/img(22)-slide.jpg\" alt=\"First slide\" />\n        </Carousel.Item>\n      </Carousel>\n      {/* })}\n            </>\n          )} */}\n    </div>\n  )\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/CheckoutSteps.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/urlConfig.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/productActions.js",["298","299"],"import {  PRODUCT_LIST_REQUEST,PRODUCT_LIST_SUCCESS,PRODUCT_LIST_FAIL,PRODUCT_REVIEW_CREATE_REQUEST,\n  PRODUCT_REVIEW_CREATE_SUCCESS,\n  PRODUCT_REVIEW_CREATE_FAIL,} from '../constants/productConstants';\nimport Axios from 'axios';\nimport {  PRODUCT_DETAILS_REQUEST,PRODUCT_DETAILS_SUCCESS,PRODUCT_DETAILS_FAIL,PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_REQUEST,PRODUCT_CREATE_SUCCESS,PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL,GET_PRODUCTS_BY_SLUG,DELETE_PRODUCT_BY_ID_REQUEST,DELETE_PRODUCT_BY_ID_SUCCESS,DELETE_PRODUCT_BY_ID_FAILURE} from '../constants/productConstants';\n  import store from \"../store\";\n\nexport const listProducts = () => async (dispatch) =>{\n    dispatch({\n        type: PRODUCT_LIST_REQUEST,\n \n    });\n    try {\n        const { data } = await Axios.get('http://localhost:3001/api/products');\n        dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\n    } catch(error){\n        dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\n    }\n};\n\nexport const detailsProduct = (productId) => async (dispatch) => {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\n    try {\n      const { data } = await Axios.get(`http://localhost:3001/api/products/prod/${productId}`);\n      console.log(data)\n      dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n    } catch (error) {\n      dispatch({\n        type: PRODUCT_DETAILS_FAIL,\n        payload:\n          error.response && error.response.data.message\n            ? error.response.data.message\n            : error.message,\n      });\n    }\n  };\n\n\n  export const addProduct = (form) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_CREATE_REQUEST });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.post(\n        'http://localhost:3001/api/products/create',\n        form,\n        {\n          headers: { Authorization: `Bearer ${userInfo.token}` },\n        }\n      );\n      dispatch({\n        type: PRODUCT_CREATE_SUCCESS,\n        payload: data.product,\n      });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: PRODUCT_CREATE_FAIL, payload: message });\n    }\n  };\n\n\n  export const updateProduct = (product) => async (dispatch, getState) => {\n    dispatch({ type: PRODUCT_UPDATE_REQUEST, payload: product });\n    const {\n      userSignin: { userInfo },\n    } = getState();\n    try {\n      const { data } = await Axios.put(`http://localhost:3001/api/products/${product._id}`, product, {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      });\n      dispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data });\n    } catch (error) {\n      const message =\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message;\n      dispatch({ type: PRODUCT_UPDATE_FAIL, error: message });\n    }\n  };\n\n\n\n  // export const getProductsBySlug = (slug) => async (dispatch) => {\n  //   // dispatch({ type: PRODUCT_Slug_REQUEST  });\n    \n  //     const {data} = await Axios.get(`/api/products/productes/${slug}`);\n  //     console.log('ok',data)\n  //       dispatch({ type: GET_PRODUCTS_BY_SLUG, payload: data });\n   \n  //     dispatch({\n  //       type: PRODUCT_Slug_FAIL,\n  //       payload:\n  //         error.response && error.response.data.message\n  //           ? error.response.data.message\n  //           : error.message,\n  //     });\n    \n  // };\n\n  export const getProductsBySlug = (slug) => {\n    return async dispatch => {\n        const res = await Axios.get(`http://localhost:3001/api/products/productes/${slug}`);\n        console.log('oooo',res)\n        if (res.status === 200) {\n            dispatch({\n                type:GET_PRODUCTS_BY_SLUG,\n                payload: res.data\n            });\n        } else {\n            // dispatch({\n            //     type: \n            // })\n        }\n    }\n}\n\nexport const createReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  dispatch({ type: PRODUCT_REVIEW_CREATE_REQUEST });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = await Axios.post(\n      `https://backend-rshine.herokuapp.com/api/products/${productId}/reviews`,\n      review,\n      {\n        headers: { Authorization: `Bearer ${userInfo.token}` },\n      }\n    );\n    dispatch({\n      type: PRODUCT_REVIEW_CREATE_SUCCESS,\n      payload: data.review,\n    });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type: PRODUCT_REVIEW_CREATE_FAIL, payload: message });\n  }\n};\n\n\n\nexport const deleteProduct = (productId) => async (dispatch, getState) => {\n  dispatch({ type: DELETE_PRODUCT_BY_ID_REQUEST, payload: productId });\n  const {\n    userSignin: { userInfo },\n  } = getState();\n  try {\n    const { data } = Axios.delete(`/api/products/${productId}`, {\n      headers: { Authorization: `Bearer ${userInfo.token}` },\n    });\n    dispatch({ type: DELETE_PRODUCT_BY_ID_SUCCESS });\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({ type:DELETE_PRODUCT_BY_ID_FAILURE, payload: message });\n  }\n};\n\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/orderActions.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/orderConstants.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/crouselConstants.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/productConstants.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/userConstants.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/cartConstants.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/categoryConstants.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/FooterShippingScreen.js",["300","301","302","303"],"import React from 'react'\n\nexport default function FooterShippingScreen() {\n  return (\n    <footer class=\"page-footerShipping font-small elegant-color\">\n      <div class=\"color-socialMedia\">\n        <div class=\"container\">\n          <div class=\"row py-4 d-flex align-items-center\">\n\n            <div class=\"col-md-6 col-lg-9 text-center text-md-right\">\n\n              <a class=\"btn btn1\" href=\"#\" role=\"button\">Returns & Refunds</a>\n\n              <a class=\"btn btn2\" href=\"#\" role=\"button\">Shipping & Delivery</a>\n\n              <a class=\"btn btn3\" href=\"#\" role=\"button\">Privacy & Security</a>\n\n\n              <a class=\"btn btn4\" href=\"#\" role=\"button\">Terms of service</a>\n\n            </div>\n\n          </div>\n\n        </div>\n      </div>\n\n\n    </footer>\n  )\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CartItem.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/ProductImage.js",["304","305"],"import React, { useEffect, useState } from 'react'\nimport ImageGallery from 'react-image-gallery';\nimport { generatePublicUrl } from '../urlConfig';\n\nexport default function ProductImage(props) {\n    const [Images, setImages] = useState([])\n    useEffect(() => {\n        if (props.detail.productPictures && props.detail.productPictures.length > 0) {\n            let images = [];\n            props.detail.productPictures && props.detail.productPictures.map(item => {\n                images.push({\n                    original: item.img,\n                    thumbnail: item.img\n                })\n            })\n            setImages(images)\n        }\n    }, [props.detail])\n\n    return (\n        <div className=\"slider\">\n            <ImageGallery thumbnailPosition=\"left\"  items={Images} />\n        </div>\n    )\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/components/Rating.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/CheckoutPageScreen.js",["306"],"import React, { useEffect, useState } from 'react';\nimport { getAddress } from '../actions/addressActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AddressForm from './AddressFormScreen';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\nimport { Navbar, Container } from 'react-bootstrap';\nimport Logo from '../rshineLogo.png'\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport FooterShippingScreen from './FooterShippingScreen'\nimport { addToCart, getCartItems } from '../actions/cartActions';\n\nconst CheckoutStep = (props) => {\n  return (\n    <div className=\"checkoutStep\">\n      <div onClick={props.onClick}\n        className={`checkoutHeader ${props.active && 'active'}`}>\n        <div>\n          <span className=\"stepNumber\">{props.stepNumber}</span>\n          <span className=\"stepTitle\">{props.title}</span>\n        </div>\n      </div>\n      {props.body && props.body}\n    </div>\n  );\n}\n\n// const Address = ({\n//   adr,\n//   selectAddress,\n//   enableAddressEditForm,\n//   confirmDeliveryAddress,\n//   onAddressSubmit,\n// }) => {\n//   return (\n//     <div className=\"flexRow addressContainer\">\n//       <div>\n//         <input name=\"address\" onClick={() => selectAddress(adr)} type=\"radio\" />\n//       </div>\n//       <div className=\"flexRow sb addressinfo\">\n//         {!adr.edit ? (\n//           <div style={{ width: \"100%\" }}>\n//             <div className=\"addressDetail\">\n//               <div>\n//                 <span className=\"addressName\">{adr.fullName}</span>\n//                 <span className=\"addressType\">{adr.address}</span>\n//                 <span className=\"addressMobileNumber\">{adr.city}</span>\n//               </div>\n//               {adr.selected && (\n//                                               <button class=\"priceShipping text-info\"   onClick={() => enableAddressEditForm(adr)}>Edit</button>\n//                                             )}\n//             </div>\n//             <div className=\"fullAddress\">\n\n//             </div>\n//             {adr.selected && (\n//               <button\n//                 title=\"DELIVERY HERE\"\n//                 onClick={() => confirmDeliveryAddress(adr)}\n//                 style={{\n//                   width: \"200px\",\n//                   margin: \"10px 0\",\n//                 }}\n//               />\n//             )}\n//           </div>\n//         ) : (\n//           <AddressForm\n//             withoutLayout={true}\n//             onSubmitForm={onAddressSubmit}\n//             initialData={adr}\n//             onCancel={() => {}}\n//           />\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\nexport default function CheckoutPage(props) {\n  const cart = useSelector((state) => state.cart);\n  const [cartItems, setCartItems] = useState(cart.cartItems);\n  const addressw = useSelector(state => state.addressw);\n  const { loading, error, address } = addressw;\n  console.log('ooo', address)\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const dispatch = useDispatch();\n  const [newAddress, setNewAddress] = useState(false);\n  const [address11, setAddress] = useState([]);\n  const [confirmAddress, setConfirmAddress] = useState(false);\n  const [selectedAddress, setSelectedAddress] = useState(null);\n  const [orderSummary, setOrderSummary] = useState(false);\n\n\n\n  const onAddressSubmit = (addr) => {\n    setSelectedAddress(addr);\n    setConfirmAddress(true);\n    setOrderSummary(true);\n  };\n\n\n  useEffect(() => {\n    dispatch(getAddress());\n    dispatch(getCartItems());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (cart.cartItems) {\n      setCartItems(cart.cartItems)\n\n      // dispatch(addToCart2());\n    }\n  }, [dispatch, cart.cartItems]);\n\n\n  useEffect(() => {\n    if (orderSummary) {\n      props.history.push('/placeorder');\n    }\n  })\n\n\n  const toPrice = (num) => Number(num.toFixed(2)); // 5.123 => \"5.12\" => 5.12\n  cart.itemsPrice = toPrice(\n    Object.keys(cartItems).reduce((a, c) => a + cartItems[c].qty * cartItems[c].price, 0)\n  );\n\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\n  cart.totalPrice = cart.itemsPrice + cart.taxPrice;\n\n\n\n\n\n  useEffect(() => {\n    if (address) {\n      const address1 = address.map((adr) => ({\n        ...adr,\n        selected: false,\n        edit: false,\n      }));\n      setAddress(address1)\n    };\n    //user.address.length === 0 && setNewAddress(true);\n  }, [dispatch, address]);\n\n\n  const selectAddress = (addr) => {\n    //console.log(addr);\n    const updatedAddress = address.map((adr) =>\n      adr._id === addr._id\n        ? { ...adr, selected: true }\n        : { ...adr, selected: false }\n    );\n    setAddress(updatedAddress);\n  };\n\n\n  const confirmDeliveryAddress = (addr) => {\n    setSelectedAddress(addr);\n    setConfirmAddress(true);\n    setOrderSummary(true);\n    // props.history.push('/payment');\n\n  };\n\n  const enableAddressEditForm = (addr) => {\n    const updatedAddress = address.map((adr) =>\n      adr._id === addr._id ? { ...adr, edit: true } : { ...adr, edit: false }\n    );\n    setAddress(updatedAddress);\n  };\n\n\n\n  return (\n    <div className=\"shippingDetails\">\n      <Navbar collapseOnSelect fixed=\"top\" bg=\"light\" expand=\"lg\" variant=\"light\" >\n        <Container >\n          <Navbar.Brand href=\"/\"><img\n            src={Logo}\n            width=\"170\"\n            height=\"70\"\n            className=\"d-inline-block align-top imgStyle\"\n            alt=\"React Bootstrap logo\"\n          /></Navbar.Brand>\n        </Container>\n      </Navbar>\n      <div class=\"container\">\n        <div className=\"container checkout\"><CheckoutSteps step1 step2  ></CheckoutSteps></div>\n        {/* <div>{JSON.stringify(address11)}</div> */}\n        <section class=\"mt-5 mb-4\">\n          <div class=\"row\">\n            <div class=\"col-lg-6\">\n              {/* <div class=\"card wish-list mb-4\">\n                <div class=\"card-body\">\n               <CheckoutStep\n                        stepNumber={'1'}\n                        title={'LOGIN'}\n                        active={!userInfo}\n                        body={\n                            <div className=\"loggedInId\">\n                                <span style={{ fontWeight: 500 }}>{userInfo.name}</span>\n                                <span style={{ margin: '0 5px' }}>{userInfo.email}</span>\n                            </div>\n                        }\n                    />\n\n</div>\n</div> */}\n\n\n                  <h2 class=\"shippingMethod\">Delivery Address</h2>\n                  <CheckoutStep\n                    // stepNumber={\"2\"}\n                    //title={\"DELIVERY ADDRESS\"}\n                    active={!confirmAddress && userInfo}\n                    body={<>\n                      {loading ? (\n                        <LoadingBox></LoadingBox>\n                      ) : error ? (\n                        <MessageBox variant=\"danger\">{error}</MessageBox>\n                      ) : (\n                            <>\n                              {confirmAddress ? (\n                                <div>{`${selectedAddress.address} - ${selectedAddress.postalCode}`}</div>\n                              ) : (\n                                  <>\n                                    {address11.map((adr) => (\n                                      <>\n                                        {!adr.edit ? (\n                                          <div class=\"checkbox1 checkbox-info checkbox-circle pt-4 ml-4 mr-4 \">\n                                            <div class=\"d-flex justify-content-between align-items-center w-100\">\n                                              <input class=\"form-check-input\" type=\"radio\" name=\"flexRadioDefault\" id=\"flexRadioDefault1\" onClick={() => selectAddress(adr)} />\n                                              <label class=\"form-check-label\" for=\"flexRadioDefault1\">\n                                                <span className=\"m-1\">{adr.fullName},</span>\n                                                <span className=\"m-1\">{adr.address},</span>\n                                                <span className=\"m-1\">{adr.Apartment},</span>\n                                                <span className=\"m-1\">{adr.city},</span>\n                                                <span className=\"m-1\">{adr.province}</span>\n                                                <span className=\"m-1\">{adr.postalCode}</span></label>\n\n\n\n                                              {adr.selected && (\n                                                <strong class=\"edit-address\" onClick={() => enableAddressEditForm(adr)}>Edit</strong>\n                                              )}\n                                            </div>\n                                            {adr.selected && (\n                                              <button class=\"deliver-address\" onClick={() => confirmDeliveryAddress(adr)}>Delivery Here</button>)}\n                                            {/* <hr class=\"  mb-4 mt-4 d-inline-block mx-auto w-100\" /> */}\n                                          </div>\n\n                                        ) : (\n                                            <AddressForm\n                                              withoutLayout={true}\n                                              onSubmitForm={onAddressSubmit}\n                                              initialData={adr}\n                                              onCancel={() => { }}\n                                            />\n                                          )}\n\n\n                                      </>\n                                    ))}\n\n                                  </>\n                                )}\n                            </>)}\n                    </>} />\n               \n\n                  <hr class=\"  mb-4 mt-4 d-inline-block mx-auto w-100\" /> \n\n              {confirmAddress ? null\n                : newAddress ? (\n                  <AddressForm onSubmitForm={onAddressSubmit} onCancel={() => { }} />\n                ) : userInfo ? (\n                 \n                      <CheckoutStep\n                        stepNumber={\"+\"}\n                        title={\"ADD NEW ADDRESS\"}\n                        active={false}\n                        onClick={() => setNewAddress(true)}\n                      />\n                ) : null}\n\n            </div>\n\n            {/* <div class=\"card wish-list mb-4\">\n                <div class=\"card-body\">\n              <CheckoutStep\n                stepNumber={\"3\"}\n                title={\"ORDER SUMMARY\"}\n                active={orderSummary}\n              // body={orderSummary ? <CartPage onlyCartItems={true} /> : null}\n              />\n              </div>\n              </div>\n\n              <div class=\"card wish-list mb-4\">\n                <div class=\"card-body\">\n              <CheckoutStep stepNumber={\"4\"} title={\"PAYMENT OPTIONS\"} />\n            </div>\n            </div> */}\n\n\n\n            <div class=\"col-lg-6\">\n              <div class=\"card mb-4\">\n                <div class=\"card-body\">\n                  <h2 class=\"orderItemDetails mb-4\">\n                    Order Items</h2>\n                  {Object.keys(cartItems).map((key, index) => (\n                    <>\n                      <div class=\"row mb-4\">\n                        <div class=\"col-md-7 col-lg-12\">\n                          <div class=\"d-flex justify-content-between\">\n                            {cartItems[key].qty && (\n                              <span style={{\n                                position: \"absolute\",\n                                background: \"#00bbcc\",\n                                color: \"black\",\n                                width: \"18px\",\n                                height: \"20px\",\n                                borderRadius: \"50px\",\n                                fontSize: \"12px\",\n                                border: \"2px solid #ffd480\",\n                                textAlign: \"center\",\n                                alignSelf: \"center\",\n                                marginLeft: 50,\n                                marginTop: -50\n                              }}>{cartItems[key].qty}</span>)}\n                            <img class=\"small\"\n                              src={cartItems[key].img} alt={cartItems[key].name} />\n                            <div className=\"orderItemName\">\n                              {cartItems[key].name}\n                            </div>\n                            <div class=\"orderItem \">\n                              CA${cartItems[key].price.toFixed(2)}\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </>))}\n                </div>\n              </div>\n              <div class=\"card mb-4\">\n                <div class=\"card-body\">\n                  <ul class=\"list-group list-group-flush\">\n                    <div class=\"card mb-4\">\n                      <div class=\"card-body\">\n                        <a class=\"discountCode d-flex justify-content-between\" data-toggle=\"collapse\" href=\"#collapseExample\"\n                          aria-expanded=\"false\" aria-controls=\"collapseExample\">\n                          Add a discount code (optional)\n                            <span><i class=\"fas fa-chevron-down pt-1\"></i></span>\n                        </a>\n                        <div class=\"collapse\" id=\"collapseExample\">\n                          <div class=\"mt-3\">\n                            <div class=\"md-form md-outline mb-0\">\n                              <input type=\"text\" id=\"discount-code\" class=\"form-control font-weight-light\"\n                                placeholder=\"Enter discount code\" />\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Subtotal\n                                  <div class=\"orderItem \">\n                            CA${Object.keys(cartItems).reduce((a, c) => a + cartItems[c].price * cartItems[c].qty, 0).toFixed(2)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Shipping <span style={{\n                            position: \"absolute\",\n                            background: \"#00bbcc\",\n                            color: \"black\",\n                            width: \"18px\",\n                            height: \"20px\",\n                            borderRadius: \"50px\",\n                            fontSize: \"12px\",\n                            border: \"2px solid #ffd480\",\n                            textAlign: \"center\",\n                            alignSelf: \"center\",\n                            marginLeft: 60,\n\n                          }}>?</span>\n                          <div class=\" \">\n                            Next Step\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Taxes\n                                  <div class=\"orderItem \">\n                            CA${cart.taxPrice.toFixed(2)}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <hr class=\"shipping-hr mb-4 mt-0 d-inline-block mx-auto w-100\" />\n                    <div class=\"row mb-4\">\n                      <div class=\"col-md-7 col-lg-12\">\n                        <div class=\"d-flex justify-content-between\">\n                          Total\n                                  <div class=\"orderItem \">\n                                  CA${cart.totalPrice.toFixed(2)}\n                                  </div>\n                        </div>\n                      </div>\n                    </div>\n                  </ul>\n\n                  {loading && <LoadingBox></LoadingBox>}\n                  {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n      </div>\n      <FooterShippingScreen />\n    </div>\n\n\n  );\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/AddressFormScreen.js",["307","308","309","310","311","312","313","314","315","316"],"import React, { useState,useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addAddress  } from '../actions/addressActions';\nimport FooterShippingScreen from './FooterShippingScreen'\nimport { Navbar, Container } from 'react-bootstrap';\nimport { CountryDropdown, RegionDropdown } from 'react-country-region-selector';\nimport { postcodeValidator } from 'postcode-validator';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport Logo from '../rshineLogo.png'\n\n export default function AddressFormScreen(props) {\n  const addressw = useSelector(state => state.addressw);\n  //const {loading, error,address} =addressw;\n    const cart = useSelector((state) => state.cart);\n    const { cartItems } = cart;\n    const { initialData } = props;\n    const [country, setCountry] = useState(initialData ? initialData.country : \"\");\n    const [province, setProvince] = useState(\n      initialData ? initialData.province : \"\"\n    );\n    const [fullName, setFullName] = useState(\n      initialData ? initialData.fullName : \"\"\n    );\n    const [address, setAddress] = useState(\n      initialData ? initialData.address : \"\"\n    );\n \n    const [Apartment, setApartment] = useState(\n      initialData ? initialData.Apartment : \"\"\n    );\n    const [city, setCity] = useState(initialData ? initialData.city : \"\");\n    const [postalCode, setPostalCode] = useState(\n      initialData ? initialData.postalCode : \"\");\n\n    const [submitFlag, setSubmitFlag] = useState(false);\n    const [id, setId] = useState(initialData ? initialData._id : \"\");\n\n    // const [country, setCountry] = useState('');\n    // const [province, setProvince] = useState('');\n    // const [fullName, setFullName] = useState('');\n    // const [address1, setAddress] = useState('');\n    // const [Apartment, setApartment] = useState('');\n    // const [city, setCity] = useState('');\n    // const [postalCode, setPostalCode] = useState('');\n    const dispatch = useDispatch();\n    const userSignin = useSelector((state) => state.userSignin);\n    const { userInfo } = userSignin;\n    \n    const inputContainer = {\n        width: '100%',\n        marginRight: 10\n    };\n\n    const onAddressSubmit = () => {\n      const payload = {\n        address: {\n          country,\n          province,\n          fullName,\n          address,\n          Apartment,\n          city,\n          postalCode\n        }\n    }\n    console.log(payload);\n    if (id) {\n      payload.address._id = id;\n    }\n    dispatch(addAddress(payload));\n    setSubmitFlag(true);\n\n    }\n  \n    useEffect(() => {\n      console.log(\"addressCount\", addressw.address);\n      if (submitFlag) {\n        console.log(\"where are we\", addressw);\n        let _address = {};\n        if (id) {\n          _address = {\n            _id: id,\n            country,\n            province,\n            fullName,\n            address,\n            Apartment,\n            city,\n            postalCode\n          };\n        }\n        // } else {\n        //   _address = addressw.address.slice(addressw.address.length - 1)[0];\n        // }\n  \n        props.onSubmitForm(_address)\n      }\n    }, [ addressw.address]);\n  \n\n\n\n\n    const renderAddressForm = () => {\n      return (\n        <>\n        <div class=\"\">\n                {/* <form class=\"\" onSubmit={onAddressSubmit}>  */}\n                \n                 <h2 class=\"shippingMethod\"> \n               </h2>\n                  <div class=\"md-form mb-3 mt-4\">\n                    <label for=\"country\" class=\"\">Country</label>\n                    <CountryDropdown class=\"form-control\"\n                      value={country}\n                      valueType=\"short\"\n                      onChange={setCountry}\n                      priorityOptions={[\"CA\", \"US\", \"GB\"]}\n                      required />\n                  </div>\n                  <div class=\"md-form mb-3\">\n                    <label for=\"fullName\" class=\"\">Full Name</label>\n                    <input type=\"text\" id=\"fullName\" class=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\n                  </div>\n                  <div class=\"md-form mb-3\">\n                    <label for=\"address\" class=\"\">Street address </label>\n                    <input type=\"text\" id=\"address\" class=\"form-control\" placeholder=\"\" value={address}\n                      onChange={(e) => setAddress(e.target.value)} required />\n                  </div>\n\n                  <div class=\"md-form mb-3\">\n                    <label for=\"apartment\" class=\"\">Apt / Suite / Unit (optional)</label>\n                    <input type=\"text\" id=\"apartment\" class=\"form-control\" placeholder=\"\" value={Apartment} onChange={(e) => setApartment(e.target.value)} />\n                  </div>\n\n                  <div class=\"md-form mb-3\">\n                    <label for=\"city\" class=\"\">City</label>\n                    <input type=\"text\" id=\"city\" class=\"form-control\" placeholder=\"\" value={city}\n                      onChange={(e) => setCity(e.target.value)} required />\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-6 mb-4\">\n                      <label for=\"province\">Province/State </label>\n                      <RegionDropdown class=\"form-control\"\n                        country={country}\n                        countryValueType=\"short\"\n                        value={province}\n                        onChange={setProvince} required />\n                    </div>\n                    <div class=\"col-lg-6 col-md-6 mb-4\">\n                      <label for=\"zip\">Postal code</label>\n                      <input type=\"text\" class=\"form-control\" id=\"zip\" placeholder=\"\" value={postalCode}\n                        onChange={(e) => setPostalCode(e.target.value)} required />\n                      {country && postalCode && !postcodeValidator(postalCode, country) && (\n                        <p className=\"validPostalCode\">Please enter a valid postal code.</p>)}\n                    </div>\n\n                  </div>\n                  {/* <hr class=\"mb-4\" /> */}\n                  <button class=\"btnForAll  btn-block waves-effect waves-light mb-4\" type=\"button\" onClick={onAddressSubmit}>Delivery Here</button>\n                {/* </form> */}\n              </div>\n       \n\n          \n             \n        \n     \n      </>\n  \n  \n  );\n\n}\nif (props.withoutLayout) {\n  return <div>{renderAddressForm()}</div>;\n}\n    return (\n        \n    \n  <div class=\"card wish-list mb-4\">\n                  <div class=\"card-body\">                 \n                   {/* <form class=\"\" onSubmit={onAddressSubmit}>  */}\n                   \n                    <h2 class=\"shippingMethod\"> \n                  <span className=\"stepNumber\">+</span>\n                    <span className=\"stepTitle\">{'Add New Address'}</span></h2>\n                    <div class=\"md-form mb-3 mt-4\">\n                      <label for=\"country\" class=\"\">Country</label>\n                      <CountryDropdown class=\"form-control\"\n                        value={country}\n                        valueType=\"short\"\n                        onChange={setCountry}\n                        priorityOptions={[\"CA\", \"US\", \"GB\"]}\n                        required />\n                    </div>\n                    <div class=\"md-form mb-3\">\n                      <label for=\"fullName\" class=\"\">Full Name</label>\n                      <input type=\"text\" id=\"fullName\" class=\"form-control\" value={fullName} onChange={(e) => setFullName(e.target.value)} required />\n                    </div>\n                    <div class=\"md-form mb-3\">\n                      <label for=\"address\" class=\"\">Street address </label>\n                      <input type=\"text\" id=\"address\" class=\"form-control\" placeholder=\"\" value={address}\n                        onChange={(e) => setAddress(e.target.value)} required />\n                    </div>\n  \n                    <div class=\"md-form mb-3\">\n                      <label for=\"apartment\" class=\"\">Apt / Suite / Unit (optional)</label>\n                      <input type=\"text\" id=\"apartment\" class=\"form-control\" placeholder=\"\" value={Apartment} onChange={(e) => setApartment(e.target.value)} />\n                    </div>\n  \n                    <div class=\"md-form mb-3\">\n                      <label for=\"city\" class=\"\">City</label>\n                      <input type=\"text\" id=\"city\" class=\"form-control\" placeholder=\"\" value={city}\n                        onChange={(e) => setCity(e.target.value)} required />\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-lg-6 col-md-6 mb-4\">\n                        <label for=\"province\">Province/State </label>\n                        <RegionDropdown class=\"form-control\"\n                          country={country}\n                          countryValueType=\"short\"\n                          value={province}\n                          onChange={setProvince} required />\n                      </div>\n                      <div class=\"col-lg-6 col-md-6 mb-4\">\n                        <label for=\"zip\">Postal code</label>\n                        <input type=\"text\" class=\"form-control\" id=\"zip\" placeholder=\"\" value={postalCode}\n                          onChange={(e) => setPostalCode(e.target.value)} required />\n                        {country && postalCode && !postcodeValidator(postalCode, country) && (\n                          <p className=\"validPostalCode\">Please enter a valid postal code.</p>)}\n                      </div>\n  \n                    </div>\n                    <hr class=\"mb-4\" />\n                    <button class=\"btnForAll  btn-block waves-effect waves-light\" type=\"button\" onClick={onAddressSubmit}>Save</button>\n                  {/* </form> */}\n                </div>\n         \n\n            \n               \n          \n       \n</div>\n    \n    \n    );\n\n}\n","/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/reducers/addressReducers.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/constants/addressConstants.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/actions/addressActions.js",[],"/home/workstation/Videos/Rshine_App-before-delete-from-github/client/src/screens/OrdersAdminScreen.js",["317","318","319","320","321","322"],"import React, { useEffect ,useState} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { listOrderCustmer,updateOrder } from '../actions/orderActions';\nimport LoadingBox from '../components/LoadingBox';\nimport MessageBox from '../components/MessageBox';\n\nimport { ProgressBar, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\n\n\n\nexport default function OrdersAdminScreen(props) {\n    const orderCustmer = useSelector((state) => state.orderCustmer);\n    const { loading, error, CustomerOrders } = orderCustmer;\n    const [type, setType] = useState(\"\");\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(listOrderCustmer());\n    }, [dispatch]);\n\nconsole.log(\"ppp\",CustomerOrders)\n    const onOrderUpdate = (orderId) => {\n        const payload = {\n          orderId,\n          type,\n        };\n        dispatch(updateOrder(payload));\n      };\n    return (\n\n        <div className=\"categoryAdminScreen\">\n            <div class=\"container px-1 px-md-4 py-5 mx-auto\">\n            {loading ? (\n         <LoadingBox></LoadingBox>\n       ) : error ? (\n         <MessageBox variant=\"danger\">{error}</MessageBox>\n       ) : (<>\n           {CustomerOrders.map((orderItem) => (\n\n    <div class=\"card\">\n        <div class=\"row d-flex justify-content-between px-3 top\">\n            <div class=\"d-flex\">\n                <h5>ORDER_ID: <span class=\"text-info font-weight-bold\">{orderItem._id}</span></h5>\n            </div>\n            <div class=\"d-flex flex-row text-sm-right\">\n               <div className=\"u mr-4\">\n                \n                <select class=\"custom-select mr-4\" id=\"\" onChange={(e) => setType(e.target.value)}>\n                              <option value={\"\"}>select status</option>\n                {orderItem.orderStatus.map((status) => {\n                   return (\n                     <>\n                       {!status.isCompleted ? (\n                         <option  key={status.type} value={status.type}>\n                           {status.type}\n                         </option>\n                       ) : null}\n                     </>\n                   );\n                 })}\n                            </select>\n                            </div>\n                    \n                    <button type=\"button\" class=\"btnForAll  btn-block waves-effect waves-light\"  onClick={() => onOrderUpdate(orderItem._id)}>\n                confirm\n              </button>\n            </div>\n        </div> \n        {orderItem.items.map((item) => (\n        <div class=\"row justify-content-between top\">\n            <div class=\"row d-flex icon-content\"> \n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Items<br/>{item.name}</p>\n                </div>\n            </div>\n          \n            <div class=\"row d-flex icon-content\"> \n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Payment Status<br/>{orderItem.paymentStatus}</p>\n                </div>\n            </div>\n            <div class=\"row d-flex icon-content\"> \n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Total Price<br/>{orderItem.totalPrice}</p>\n                </div>\n            </div>\n        </div> \n        ))}\n        <div class=\"row d-flex justify-content-center\">\n            <div class=\"col-12\">\n                <ul id=\"progressbar\" class=\"text-center\">\n                {orderItem.orderStatus.map((status) => (<>\n                    <li class={`step0 ${\n                    status.isCompleted ? \"active\" : \"\"\n                  }`}></li>\n                 \n                  </>\n                 ))}\n                </ul>\n            </div>\n        </div>\n       \n     <div class=\"row justify-content-between top\">\n            <div class=\"row d-flex icon-content\"> <img class=\"icon\" src=\"https://i.imgur.com/9nnc9Et.png\"/>\n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Order<br/>Processed</p>\n                </div>\n            </div>\n            <div class=\"row d-flex icon-content\"> <img class=\"icon\" src=\"https://i.imgur.com/GiWFtVu.png\"/>\n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Order<br/>Packed</p>\n                </div>\n            </div>\n            <div class=\"row d-flex icon-content\"> <img class=\"icon\" src=\"https://i.imgur.com/u1AzR7w.png\"/>\n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Order<br/>Shipped</p>\n                </div>\n            </div> \n            {/* <div class=\"row d-flex icon-content\"> <img class=\"icon\" src=\"https://i.imgur.com/TkPm63y.png\"/>\n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Order<br/>En Route</p>\n                </div>\n            </div> */}\n             <div class=\"row d-flex icon-content\"> <img class=\"icon\" src=\"https://i.imgur.com/HdsziHP.png\"/>\n                <div class=\"d-flex flex-column\">\n                    <p class=\"font-weight-bold\">Order<br/>Arrived</p>\n                </div>\n            </div>\n        </div> \n    </div>\n           ))}</>)}\n   \n</div>\n      \n        </div>\n\n\n  );\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// <div className=\"categoryAdminScreen\">\n\n\n//       <div className=\"container\">\n//         <div class=\"row\">\n\n//           <div class=\"col-5\">\n//               <h2 className=\"categoryTittle\">ORDER_ID:{orderItem._id}</h2> \n//               <div\n//             style={{\n//               boxSizing: \"border-box\",\n//               padding: \"100px\",\n//               display: \"flex\",\n//               alignItems: \"center\",\n//             }}\n//           >\n//           <div className=\"orderTrack\">\n//           {loading ? (\n//         <LoadingBox></LoadingBox>\n//       ) : error ? (\n//         <MessageBox variant=\"danger\">{error}</MessageBox>\n//       ) : (<>\n//           {orders.map((orderItem) => (\n\n//             <div className=\"orderStatus\">\n//               <div className=\"point\"></div>\n//               <div className=\"orderInfo\">\n//                 <div className=\"status\">Ordered</div>\n//                 <div className=\"date\">Fri, 2020</div>\n//               </div>\n//             </div>\n//             <div className=\"orderStatus\">\n//               <div className=\"point\"></div>\n//               <div className=\"orderInfo\">\n//                 <div className=\"status\"></div>\n//                 <div className=\"date\">Fri, 2020</div>\n//               </div>\n//             </div>\n//             <div className=\"orderStatus\">\n//               <div className=\"point\"></div>\n//               <div className=\"orderInfo\">\n//                 <div className=\"status\">Shipped</div>\n//                 <div className=\"date\">Fri, 2020</div>\n//               </div>\n//             </div>\n//             <div className=\"orderStatus\">\n//               <div className=\"point\"></div>\n//               <div className=\"orderInfo\">\n//                 <div className=\"status\">Delivered</div>\n//                 <div className=\"date\">Fri, 2020</div>\n//               </div>\n//             </div>\n//             ))}</>)} \n//           </div>\n//          </div>\n\n\n\n//  {/* select input to apply order action */}\n//  <div\n//               style={{\n//                 padding: \"0 50px\",\n//                 boxSizing: \"border-box\",\n//               }}\n//             >\n//               <select >\n//                 <option value={\"\"}>select status</option>\n//                 {orderItem.orderStatus.map((status) => {\n//                   return (\n//                     <>\n//                       {!status.isCompleted ? (\n//                         <option key={status.type} value={status.type}>\n//                           {status.type}\n//                         </option>\n//                       ) : null}\n//                     </>\n//                   );\n//                 })}\n//               </select>\n//             </div>\n//             {/* button to confirm action */}\n\n//             <div\n//               style={{\n//                 padding: \"0 50px\",\n//                 boxSizing: \"border-box\",\n//               }}\n//             >\n//               <button >\n//                 confirm\n//               </button>\n// </div>\n// </div>\n// </div>\n\n// </div>\n//     )\n// }\n",{"ruleId":"323","replacedBy":"324"},{"ruleId":"325","replacedBy":"326"},{"ruleId":"327","severity":1,"message":"328","line":6,"column":3,"nodeType":"329","messageId":"330","endLine":6,"endColumn":27},{"ruleId":"327","severity":1,"message":"331","line":7,"column":3,"nodeType":"329","messageId":"330","endLine":7,"endColumn":29},{"ruleId":"332","severity":1,"message":"333","line":78,"column":5,"nodeType":"334","messageId":"335","endLine":79,"endColumn":17},{"ruleId":"327","severity":1,"message":"336","line":8,"column":11,"nodeType":"329","messageId":"330","endLine":8,"endColumn":26},{"ruleId":"327","severity":1,"message":"337","line":12,"column":10,"nodeType":"329","messageId":"330","endLine":12,"endColumn":23},{"ruleId":"327","severity":1,"message":"338","line":12,"column":25,"nodeType":"329","messageId":"330","endLine":12,"endColumn":41},{"ruleId":"327","severity":1,"message":"339","line":13,"column":9,"nodeType":"329","messageId":"330","endLine":13,"endColumn":17},{"ruleId":"327","severity":1,"message":"340","line":25,"column":9,"nodeType":"329","messageId":"330","endLine":25,"endColumn":20},{"ruleId":"327","severity":1,"message":"341","line":5,"column":10,"nodeType":"329","messageId":"330","endLine":5,"endColumn":27},{"ruleId":"327","severity":1,"message":"342","line":7,"column":8,"nodeType":"329","messageId":"330","endLine":7,"endColumn":18},{"ruleId":"327","severity":1,"message":"343","line":88,"column":14,"nodeType":"329","messageId":"330","endLine":88,"endColumn":18},{"ruleId":"327","severity":1,"message":"344","line":7,"column":5,"nodeType":"329","messageId":"330","endLine":7,"endColumn":24},{"ruleId":"327","severity":1,"message":"345","line":8,"column":5,"nodeType":"329","messageId":"330","endLine":8,"endColumn":24},{"ruleId":"327","severity":1,"message":"346","line":9,"column":5,"nodeType":"329","messageId":"330","endLine":9,"endColumn":24},{"ruleId":"327","severity":1,"message":"328","line":11,"column":5,"nodeType":"329","messageId":"330","endLine":11,"endColumn":29},{"ruleId":"327","severity":1,"message":"331","line":12,"column":5,"nodeType":"329","messageId":"330","endLine":12,"endColumn":31},{"ruleId":"327","severity":1,"message":"347","line":3,"column":3,"nodeType":"329","messageId":"330","endLine":3,"endColumn":14},{"ruleId":"327","severity":1,"message":"331","line":5,"column":3,"nodeType":"329","messageId":"330","endLine":5,"endColumn":29},{"ruleId":"327","severity":1,"message":"328","line":6,"column":3,"nodeType":"329","messageId":"330","endLine":6,"endColumn":27},{"ruleId":"327","severity":1,"message":"346","line":9,"column":3,"nodeType":"329","messageId":"330","endLine":9,"endColumn":22},{"ruleId":"327","severity":1,"message":"348","line":10,"column":3,"nodeType":"329","messageId":"330","endLine":10,"endColumn":13},{"ruleId":"327","severity":1,"message":"349","line":43,"column":7,"nodeType":"329","messageId":"330","endLine":43,"endColumn":16},{"ruleId":"327","severity":1,"message":"341","line":7,"column":10,"nodeType":"329","messageId":"330","endLine":7,"endColumn":27},{"ruleId":"327","severity":1,"message":"339","line":29,"column":9,"nodeType":"329","messageId":"330","endLine":29,"endColumn":17},{"ruleId":"327","severity":1,"message":"341","line":8,"column":10,"nodeType":"329","messageId":"330","endLine":8,"endColumn":27},{"ruleId":"327","severity":1,"message":"341","line":9,"column":10,"nodeType":"329","messageId":"330","endLine":9,"endColumn":27},{"ruleId":"327","severity":1,"message":"349","line":33,"column":10,"nodeType":"329","messageId":"330","endLine":33,"endColumn":19},{"ruleId":"327","severity":1,"message":"350","line":58,"column":9,"nodeType":"329","messageId":"330","endLine":58,"endColumn":30},{"ruleId":"327","severity":1,"message":"351","line":14,"column":8,"nodeType":"329","messageId":"330","endLine":14,"endColumn":16},{"ruleId":"352","severity":1,"message":"353","line":86,"column":23,"nodeType":"354","endLine":86,"endColumn":64},{"ruleId":"352","severity":1,"message":"353","line":90,"column":23,"nodeType":"354","endLine":90,"endColumn":63},{"ruleId":"352","severity":1,"message":"353","line":25,"column":15,"nodeType":"354","endLine":25,"endColumn":44},{"ruleId":"327","severity":1,"message":"341","line":7,"column":10,"nodeType":"329","messageId":"330","endLine":7,"endColumn":27},{"ruleId":"327","severity":1,"message":"355","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":21},{"ruleId":"327","severity":1,"message":"356","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":18},{"ruleId":"327","severity":1,"message":"342","line":5,"column":8,"nodeType":"329","messageId":"330","endLine":5,"endColumn":18},{"ruleId":"327","severity":1,"message":"341","line":6,"column":10,"nodeType":"329","messageId":"330","endLine":6,"endColumn":27},{"ruleId":"327","severity":1,"message":"357","line":10,"column":11,"nodeType":"329","messageId":"330","endLine":10,"endColumn":18},{"ruleId":"327","severity":1,"message":"358","line":10,"column":20,"nodeType":"329","messageId":"330","endLine":10,"endColumn":25},{"ruleId":"327","severity":1,"message":"359","line":10,"column":27,"nodeType":"329","messageId":"330","endLine":10,"endColumn":35},{"ruleId":"327","severity":1,"message":"360","line":7,"column":10,"nodeType":"329","messageId":"330","endLine":7,"endColumn":15},{"ruleId":"327","severity":1,"message":"343","line":159,"column":13,"nodeType":"329","messageId":"330","endLine":159,"endColumn":17},{"ruleId":"352","severity":1,"message":"353","line":12,"column":15,"nodeType":"354","endLine":12,"endColumn":58},{"ruleId":"352","severity":1,"message":"353","line":14,"column":15,"nodeType":"354","endLine":14,"endColumn":58},{"ruleId":"352","severity":1,"message":"353","line":16,"column":15,"nodeType":"354","endLine":16,"endColumn":58},{"ruleId":"352","severity":1,"message":"353","line":19,"column":15,"nodeType":"354","endLine":19,"endColumn":58},{"ruleId":"327","severity":1,"message":"341","line":3,"column":10,"nodeType":"329","messageId":"330","endLine":3,"endColumn":27},{"ruleId":"361","severity":1,"message":"362","line":10,"column":83,"nodeType":"363","messageId":"364","endLine":10,"endColumn":85},{"ruleId":"327","severity":1,"message":"365","line":11,"column":10,"nodeType":"329","messageId":"330","endLine":11,"endColumn":19},{"ruleId":"327","severity":1,"message":"366","line":4,"column":8,"nodeType":"329","messageId":"330","endLine":4,"endColumn":28},{"ruleId":"327","severity":1,"message":"367","line":5,"column":10,"nodeType":"329","messageId":"330","endLine":5,"endColumn":16},{"ruleId":"327","severity":1,"message":"368","line":5,"column":18,"nodeType":"329","messageId":"330","endLine":5,"endColumn":27},{"ruleId":"327","severity":1,"message":"369","line":8,"column":8,"nodeType":"329","messageId":"330","endLine":8,"endColumn":21},{"ruleId":"327","severity":1,"message":"370","line":9,"column":8,"nodeType":"329","messageId":"330","endLine":9,"endColumn":12},{"ruleId":"327","severity":1,"message":"349","line":15,"column":13,"nodeType":"329","messageId":"330","endLine":15,"endColumn":22},{"ruleId":"327","severity":1,"message":"371","line":36,"column":16,"nodeType":"329","messageId":"330","endLine":36,"endColumn":21},{"ruleId":"327","severity":1,"message":"372","line":47,"column":13,"nodeType":"329","messageId":"330","endLine":47,"endColumn":21},{"ruleId":"327","severity":1,"message":"373","line":49,"column":11,"nodeType":"329","messageId":"330","endLine":49,"endColumn":25},{"ruleId":"374","severity":1,"message":"375","line":98,"column":8,"nodeType":"376","endLine":98,"endColumn":27,"suggestions":"377"},{"ruleId":"327","severity":1,"message":"378","line":7,"column":10,"nodeType":"329","messageId":"330","endLine":7,"endColumn":21},{"ruleId":"327","severity":1,"message":"379","line":7,"column":23,"nodeType":"329","messageId":"330","endLine":7,"endColumn":29},{"ruleId":"380","severity":1,"message":"381","line":107,"column":51,"nodeType":"354","endLine":107,"endColumn":108},{"ruleId":"380","severity":1,"message":"381","line":112,"column":51,"nodeType":"354","endLine":112,"endColumn":108},{"ruleId":"380","severity":1,"message":"381","line":117,"column":51,"nodeType":"354","endLine":117,"endColumn":108},{"ruleId":"380","severity":1,"message":"381","line":127,"column":52,"nodeType":"354","endLine":127,"endColumn":109},"no-native-reassign",["382"],"no-negated-in-lhs",["383"],"no-unused-vars","'CART_SAVE_PAYMENT_METHOD' is defined but never used.","Identifier","unusedVar","'CART_SAVE_SHIPPING_ADDRESS' is defined but never used.","no-fallthrough","Expected a 'break' statement before 'case'.","SwitchCase","case","'shippingAddress' is assigned a value but never used.","'paymentMethod' is assigned a value but never used.","'setPaymentMethod' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'formatDate2' is assigned a value but never used.","'generatePublicUrl' is defined but never used.","'MessageBox' is defined but never used.","'data' is assigned a value but never used.","'ADD_TO_CART_REQUEST' is defined but never used.","'ADD_TO_CART_SUCCESS' is defined but never used.","'ADD_TO_CART_FAILURE' is defined but never used.","'ADD_TO_CART' is defined but never used.","'RESET_CART' is defined but never used.","'cartItems' is assigned a value but never used.","'removeFromCartHandler' is assigned a value but never used.","'CartItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'useDispatch' is defined but never used.","'LoadingBox' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'products' is assigned a value but never used.","'store' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'addToCart' is defined but never used.","'FooterShippingScreen' is defined but never used.","'Navbar' is defined but never used.","'Container' is defined but never used.","'CheckoutSteps' is defined but never used.","'Logo' is defined but never used.","'setId' is assigned a value but never used.","'userInfo' is assigned a value but never used.","'inputContainer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'Apartment', 'address', 'addressw', 'city', 'country', 'fullName', 'id', 'postalCode', 'props', 'province', and 'submitFlag'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["384"],"'ProgressBar' is defined but never used.","'Button' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"385","fix":"386"},"Update the dependencies array to be: [Apartment, address, addressw, addressw.address, city, country, fullName, id, postalCode, props, province, submitFlag]",{"range":"387","text":"388"},[3116,3135],"[Apartment, address, addressw, addressw.address, city, country, fullName, id, postalCode, props, province, submitFlag]"]